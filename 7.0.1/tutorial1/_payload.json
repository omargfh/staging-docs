[{"data":1,"prerenderedAt":825},["ShallowReactive",2],{"/tutorial1":3,"/tutorial1-surround":816},{"id":4,"title":5,"body":6,"description":785,"extension":786,"meta":787,"navigation":801,"path":812,"seo":813,"stem":814,"__hash__":815},"content/tutorial1.md","Tutorial #1: Models",{"type":7,"value":8,"toc":761},"minimark",[9,21,30,33,36,103,111,114,136,139,142,145,171,178,190,199,202,214,217,220,231,238,250,253,256,259,266,269,281,284,316,319,322,325,335,338,385,388,411,414,417,424,427,437,440,443,446,455,467,470,473,480,483,517,520,523,526,529,587,590,602,612,627,630,633,636,666,669,672,679,682,691,694,697,706,709,718,721,730,738,745,753],[10,11,15],"h1",{"id":12,"className":13},"tutorial-1-models",[14],"section-heading",[16,17,5],"a",{"className":18,"href":20},[19],"section-anchor","#tutorial-1-models",[22,23,24,25,29],"p",{},"If you read the ",[16,26,28],{"href":27},"sample","Sample Model: Party"," section, you got a brief\nintroduction to what it’s like to explore a NetLogo model. This section will go\ninto more depth about the features that are available while you’re exploring the\nmodels in the Models Library.",[22,31,32],{},"Throughout all of the tutorials, we’ll be asking you to make predictions about\nwhat the effects of making changes to the models will be. Keep in mind that the\neffects are often surprising. We think these surprises are exciting and provide\nexcellent opportunities for learning.",[22,34,35],{},"You may want to print out the tutorials to make them easier to refer to while\nyou’re using NetLogo.",[37,38,41,51],"div",{"className":39},[40],"toc",[42,43,46],"h4",{"id":44,"className":45},"table-of-contents",[14],[16,47,50],{"className":48,"href":49},[19],"#table-of-contents","Table of Contents",[52,53,54,61,67,73,79,85,91,97],"ul",{},[55,56,57],"li",{},[16,58,60],{"href":59},"#sample-model-wolf-sheep-predation","Sample Model: Wolf Sheep Predation",[55,62,63],{},[16,64,66],{"href":65},"#controlling-the-model-buttons","Controlling the Model: Buttons",[55,68,69],{},[16,70,72],{"href":71},"#controlling-speed-speed-slider","Controlling speed: Speed Slider",[55,74,75],{},[16,76,78],{"href":77},"#adjusting-settings-choosers-sliders-and-switches","Adjusting Settings: Choosers, Sliders, and Switches",[55,80,81],{},[16,82,84],{"href":83},"#gathering-information-plots-and-monitors","Gathering Information: Plots and Monitors",[55,86,87],{},[16,88,90],{"href":89},"#controlling-the-view","Controlling the View",[55,92,93],{},[16,94,96],{"href":95},"#models-library","Models Library",[55,98,99],{},[16,100,102],{"href":101},"#whats-next","What’s Next?",[104,105,108],"h2",{"id":106,"className":107},"sample-model-wolf-sheep-predation",[14],[16,109,60],{"className":110,"href":59},[19],[22,112,113],{},"We’ll open one of the Sample Models and explore it in detail. Let’s try a\nbiology model: Wolf Sheep Predation, a predator-prey population model.",[115,116,117],"blockquote",{},[52,118,119,133],{},[55,120,121,122],{},"Open the Models Library from the File menu. ",[123,124],"img",{"alt":125,"className":126,"src":128,"width":129,"height":130,"style":131},"file-menu.png",[127],"netlogo-image","/_content/images/file-menu.png",388,185,{"aspectRatio":132},"388/185",[55,134,135],{},"Choose “Wolf Sheep Predation” from the Biology section and press “Open”.",[22,137,138],{},"The Interface tab will fill up with lots of buttons, switches, sliders and\nmonitors. These interface elements allow you to interact with the model. Buttons\nare dark blue; they set up, start, and stop the model. Sliders and switches are\nlight blue; they alter model settings. Monitors and plots are gray; they display\ndata.",[22,140,141],{},"If you’d like to make the window larger so that everything is easier to see, you\ncan use the Zoom menu.",[22,143,144],{},"When you first open the model, you will notice that the “view” (the graphical\ndisplay of the agents in the model) is empty (all black). To begin the model,\nyou will first need to set it up.",[115,146,147,152,157,162,166],{},[52,148,149],{},[55,150,151],{},"Press the “setup” button.",[22,153,156],{"className":154},[155],"question","What do you see appear in the view?",[52,158,159],{},[55,160,161],{},"Press the “go” button to start the simulation.",[22,163,165],{"className":164},[155],"As the model is running, what is happening to the wolf and sheep |",[52,167,168],{},[55,169,170],{},"Press the “go” button to stop the model.",[104,172,175],{"id":173,"className":174},"controlling-the-model-buttons",[14],[16,176,66],{"className":177,"href":65},[19],[22,179,180,181],{},"When a button is pressed, the model responds with an action. A button can be a\n“once” button, or a “forever” button. You can tell the difference between these\ntwo types of buttons by a symbol on the face of the button. Forever buttons have\ntwo arrows in the bottom right corners, like this: ",[123,182],{"alt":183,"className":184,"src":185,"width":186,"height":187,"style":188},"tutorial1/goforeverinactive.png",[127],"/_content/images/tutorial1/goforeverinactive.png",102,45,{"aspectRatio":189},"102/45",[22,191,192,193],{},"Once buttons don’t have the arrows, like this: ",[123,194],{"alt":195,"className":196,"src":197,"width":186,"height":187,"style":198},"tutorial1/setup.png",[127],"/_content/images/tutorial1/setup.png",{"aspectRatio":189},[22,200,201],{},"Once buttons do one action and then stop. When the action is finished, the\nbutton pops back up.",[22,203,204,205],{},"Forever buttons do an action over and over again. When you want the action to\nstop, press the button again. It will finish the current action, then pop back\nup. You may have noticed that the “go” button was gray when you first opened the\nmodel. That is because it is inactive until the “setup” button is pressed.\nPressing an inactive button will have no effect. ",[123,206],{"alt":207,"className":208,"src":209,"width":210,"height":211,"style":212},"tutorial1/goforeveractive.png",[127],"/_content/images/tutorial1/goforeveractive.png",94,43,{"aspectRatio":213},"94/43",[22,215,216],{},"Most models, including Wolf Sheep Predation, have a once button called “setup”\nand a forever button called “go”. Many models also have a once button called “go\nonce” or “step once” which is like “go” except that it advances the model by one\ntick (time step) instead of over and over. Using a once button like this lets\nyou watch the progress of the model more closely.",[22,218,219],{},"Stopping a forever button is the normal way to pause or stop a model. After\npausing you can make it resume by pressing the button again. (You can also stop\na model with the “Halt” item on the Tools menu, but you should only do this if\nthe model is stuck for some reason. Using “Halt” may interrupt the model in the\nmiddle of an action, and as the result the model could get confused.)",[115,221,222,227],{},[52,223,224],{},[55,225,226],{},"If you like, experiment with the “setup” and “go” buttons in the Wolf Sheep\nPredation model.",[22,228,230],{"className":229},[155],"Do you ever get different results if you run the model several times with |",[104,232,235],{"id":233,"className":234},"controlling-speed-speed-slider",[14],[16,236,72],{"className":237,"href":71},[19],[22,239,240,241],{},"The speed slider allows you to control the speed of a model, that is, the speed\nat which turtles move, patches change color, and so on. ",[123,242],{"alt":243,"className":244,"src":245,"width":246,"height":247,"style":248},"tutorial1/speed-slider.png",[127],"/_content/images/tutorial1/speed-slider.png",262,61,{"aspectRatio":249},"262/61",[22,251,252],{},"When you move the slider to the left the model slows down so there are longer\npauses between each tick (time step). That makes it easier to see what is\nhappening. You might even slow the model down so far as to see exactly what a\nsingle turtle is doing.",[22,254,255],{},"When you move the speed slider to the right the model speeds up. NetLogo will\nstart skipping frames, that is, it won’t update the view at the end of every\ntick, only some ticks. Updating takes time, so fewer view updates means the\nmodel progresses faster.",[22,257,258],{},"Note that if you push the speed slider well to the right, the view may update so\ninfrequently that the model appears to have slowed down. It hasn’t, as you can\nsee by watching the tick counter race ahead. Only the frequency of view updates\nhas lessened.",[104,260,263],{"id":261,"className":262},"adjusting-settings-choosers-sliders-and-switches",[14],[16,264,78],{"className":265,"href":77},[19],[22,267,268],{},"A model’s settings let you explore different scenarios or hypotheses. Altering\nthe settings and then running the model to see how it reacts can give you a\ndeeper understanding of the phenomena being modeled.",[22,270,271,272],{},"Choosers, switches, and sliders give you access to a model’s settings. Here are\nthe choosers, switches, and sliders in Wolf Sheep Predation:\n",[123,273],{"alt":274,"className":275,"src":276,"width":277,"height":278,"style":279},"tutorial1/controllers.png",[127],"/_content/images/tutorial1/controllers.png",449,328,{"aspectRatio":280},"449/328",[22,282,283],{},"Let’s experiment with their effect on the behavior of the model.",[115,285,286,297,301,304,312],{},[52,287,288,291,294],{},[55,289,290],{},"Open Wolf Sheep Predation if it’s not open already.",[55,292,293],{},"Press “setup” and “go” and let the model run for about 100 ticks. (The tick\ncount is shown above the view.)",[55,295,296],{},"Stop the model by pressing the “go” button.",[22,298,300],{"className":299},[155],"What happened to the sheep over time?",[22,302,303],{},"Let’s take a look and see what would happen to the sheep if we change a\nsetting.",[52,305,306,309],{},[55,307,308],{},"Change the “model-version” chooser from “sheep-wolves” to\n“sheep-wolves-grass”.",[55,310,311],{},"Press “setup” and “go” and let the model run for a similar amount of time as\nbefore.",[22,313,315],{"className":314},[155],"What did the chooser do? Was the outcome the same as your previous run?",[22,317,318],{},"Changing the “model-version” dropdown to “sheep-wolves-grass” affected the\noutcome of the model. With the chooser set to “sheep-wolves”, the amount of\ngrass available always stayed the same. This is not a realistic look at the\npredator-prey relationship; so by setting and turning on a grass regrowth rate,\nwe were able to model all three factors: sheep, wolf, and grass populations.",[22,320,321],{},"Another type of setting is called a slider.",[22,323,324],{},"Besides choosers, a model may also have sliders. While choosers have a short\nlist of preset options, a slider has a whole range of numeric values. For\nexample, the “initial-number-sheep” slider has a minimum value of 0 and a\nmaximum value of 250. The model could run with 0 sheep or it could run with 250\nsheep, or anywhere in between. Try this out and see what happens. As you move\nthe marker from the minimum to the maximum value, the number on the right side\nof the slider changes; this is the number the slider is currently set to.",[115,326,327,330],{},[22,328,329],{},"Let’s investigate Wolf Sheep Predation’s sliders.",[52,331,332],{},[55,333,334],{},"Change from the Interface to the Info tab to learn what each of this models’\nsliders represents.",[22,336,337],{},"The Info tab offers guidance and insight into the model. Within this tab you\nwill find an explanation of the model, suggestions on things to try, and other\ninformation. You may want to read the Info tab before running a model, or you\nmight want to just start experimenting, then look at the Info tab later.",[115,339,340,344,361,364,368,381],{},[22,341,343],{"className":342},[155],"What would happen to the sheep population if there were more sheep and less",[52,345,346,349,352,355,358],{},[55,347,348],{},"Change the “model-version” chooser from “sheep-wolves-grass” to\n“sheep-wolves”.",[55,350,351],{},"Set the “initial-number-sheep” slider to 100.",[55,353,354],{},"Set the “initial-number-wolves” slider to 20.",[55,356,357],{},"Press “setup” and then “go”.",[55,359,360],{},"Let the model run for about 100 ticks.",[22,362,363],{},"Try running the model several times with these settings. | What happened to\nthe sheep population?",[22,365,367],{"className":366},[155],"Did this outcome surprise you? What other sliders can be | adjusted to help",[52,369,370,373,376,378],{},[55,371,372],{},"Set “initial-number-sheep” to 80 and “initial-number-wolves” to 50. (This is\nclose to how they were when you first opened the model.)",[55,374,375],{},"Set “sheep-reproduce” to 10.0%.",[55,377,357],{},[55,379,380],{},"Let the model run for about 100 time ticks.",[22,382,384],{"className":383},[155],"What happened to the wolves in this run?",[22,386,387],{},"One more type of widget is called a switch. A switch has only two values, on and\noff.",[115,389,390,393,398,402,407],{},[22,391,392],{},"There is a switch in this model called “show-energy?”",[52,394,395],{},[55,396,397],{},"Click “show-energy?” to check the box next to it and then click “setup” and\n“go”.",[22,399,401],{"className":400},[155],"How did the appearance of the wolves in the world view change?",[52,403,404],{},[55,405,406],{},"Uncheck the “show-energy?” switch while the model is still running.",[22,408,410],{"className":409},[155],"What happened to the energy labels you saw before?",[22,412,413],{},"When you open a model, all the choosers, sliders, and switches are on a default\nsetting. If you open a new model or exit the program, your changed settings will\nnot be saved, unless you choose to save them.",[22,415,416],{},"(Note: in addition to choosers, sliders, and switches, some models have input\nboxes. The Wolf Sheep Predation doesn’t have any of those, though.)",[104,418,421],{"id":419,"className":420},"gathering-information-plots-and-monitors",[14],[16,422,84],{"className":423,"href":83},[19],[22,425,426],{},"The view lets you see what’s going on in a model. NetLogo also provides has\nother ways of giving you information about model run, such as plots and\nmonitors.",[428,429,432],"h3",{"id":430,"className":431},"plots",[14],[16,433,436],{"className":434,"href":435},[19],"#plots","Plots",[22,438,439],{},"The plot in Wolf Sheep Predation contains three lines: sheep, wolves, and grass\n/ 4. (The grass count is divided by four so it doesn’t make the plot too tall.)\nThe lines show what’s happening in the model over time. The plot legend shows\nwhat each line indicates. In this case, it’s the population counts.",[22,441,442],{},"When a plot gets close to becoming filled up, the horizontal axis is compressed\nand all of the data from before gets squeezed into a smaller space. In this way,\nmore room is made for the plot to grow.",[22,444,445],{},"If you want to save the data from a plot to view or analyze it in another\napplication, use the “Export Plot” item on the File menu. It saves the plot data\nin a format that can by read back by spreadsheet and database programs such as\nExcel. You can also export a plot by right-clicking it and choosing “Export…”\nfrom the popup menu.",[428,447,450],{"id":448,"className":449},"monitors",[14],[16,451,454],{"className":452,"href":453},[19],"#monitors","Monitors",[22,456,457,458],{},"Monitors are another means of displaying information from a model. Here are the\nmonitors in Wolf Sheep Predation: ",[123,459],{"alt":460,"className":461,"src":462,"width":463,"height":464,"style":465},"tutorial1/monitors.png",[127],"/_content/images/tutorial1/monitors.png",105,206,{"aspectRatio":466},"105/206",[22,468,469],{},"The monitors show us the population of sheep and wolves, and the amount of\ngrass. (Remember, the amount of grass is divided by four to keep the plot from\ngetting too tall.)",[22,471,472],{},"The numbers displayed in the monitors change as the model runs, whereas the\nplots show you data from the whole course of the model run.",[104,474,477],{"id":475,"className":476},"controlling-the-view",[14],[16,478,90],{"className":479,"href":89},[19],[22,481,482],{},"In the Interface tab, you’ll see a toolbar of controls. Some of these control\naspects of the view.",[115,484,485,488,496,500,503,514],{},[22,486,487],{},"Let’s experiment with the effect of these controls.",[52,489,490,493],{},[55,491,492],{},"Press “setup” and then “go” to start the model running.",[55,494,495],{},"As the model runs, move the speed slider to the left.",[22,497,499],{"className":498},[155],"What happens?",[22,501,502],{},"This slider is helpful if a model is running too fast for you to see what’s\ngoing on in detail.",[52,504,505,508,511],{},[55,506,507],{},"Move the speed slider to the middle.",[55,509,510],{},"Try moving the speed slider to the right.",[55,512,513],{},"Now try checking and unchecking the “view updates” checkbox.",[22,515,499],{"className":516},[155],[22,518,519],{},"Fast forwarding the model and turning off view updates are useful if you’re\nimpatient and want a model to run faster. Fast forwarding (moving the speed\nslider to the right) drops view updates so the model can run fast, since\nupdating the view takes time that could be used for running the model itself.",[22,521,522],{},"When view updates are off completely, the model continues to run in the\nbackground, and plots and monitors still update. But if you want to see what’s\nhappening, you need to turn view updates back on by rechecking the box. Many\nmodels run much faster when view updates are off. For others, it makes little\ndifference.",[22,524,525],{},"The size of the view is determined by five separate settings: min-pxcor,\nmax-pxcor, min-pycor, max-pycor, and patch size. Let’s take a look at what\nhappens when we change the size of the view in the “Wolf Sheep Predation” model.",[22,527,528],{},"There are more model settings than there’s room for in the toolbar. The\n“Settings…” button lets you get to the rest of the settings.",[115,530,531,536,549,557,560,565,568,579,583],{},[52,532,533],{},[55,534,535],{},"Press the “Settings…” button in the toolbar.",[22,537,538,539,548],{},"A dialog will open containing all the settings for the view:\n",[123,540],{"alt":541,"className":542,"src":543,"width":544,"height":545,"style":546},"tutorial1/edit-view-properties.png",[127],"/_content/images/tutorial1/edit-view-properties.png",416,564,{"aspectRatio":547},"416/564"," | What are the current settings for min-pxcor,\nmax-pxcor, min-pycor, | max-pycor, and patch size?",[52,550,551,554],{},[55,552,553],{},"Press “cancel” to make this window go away without changing the settings.",[55,555,556],{},"Place your mouse pointer next to, but still outside of, the view.",[22,558,559],{},"You will notice that the pointer turns into a crosshair.",[52,561,562],{},[55,563,564],{},"Hold down the mouse button and drag the crosshair over the view.",[22,566,567],{},"The view is now selected, which you know because it is now surrounded by a\ngray border.",[52,569,570,573,576],{},[55,571,572],{},"Drag one of the square black “handles”. The handles are found on the edges\nand at the corners of the view.",[55,574,575],{},"Unselect the view by clicking anywhere in the white background of the\nInterface tab.",[55,577,578],{},"Press the “Settings…” button again and look at the settings.",[22,580,582],{"className":581},[155],"What numbers changed?",[22,584,586],{"className":585},[155],"What numbers didn’t change?",[22,588,589],{},"The NetLogo world is a two dimensional grid of “patches”. Patches are the\nindividual squares in the grid. In Wolf Sheep Predation, when the\n“model-version” is set to “sheep-wolves-grass” the individual patches are easily\nseen, because some are green, others brown.",[22,591,592,593],{},"Think of the patches as being like square tiles in a room with a tile floor. By\ndefault, exactly in the middle of the room is a tile labeled (0,0); meaning that\nif the room was divided in half one way and then the other way, these two\ndividing lines would intersect on this tile. We now have a coordinate system\nthat will help us locate objects within the room: ",[123,594],{"alt":595,"className":596,"src":597,"width":598,"height":599,"style":600},"tutorial1/coords.png",[127],"/_content/images/tutorial1/coords.png",280,200,{"aspectRatio":601},"280/200",[115,603,604,608],{},[22,605,607],{"className":606},[155],"How many tiles away is the (0,0) tile from the right side of the room?",[22,609,611],{"className":610},[155],"How many tiles away is the (0,0) tile from the left side of the room?",[22,613,614,615,621],{},"In NetLogo, the number of tiles from right to left is called world-width. And\nthe number of tiles from top to bottom is world-height. These numbers are\ndefined by top, bottom, left and right boundaries. ",[123,616],{"alt":617,"className":618,"src":619,"width":598,"height":599,"style":620},"tutorial1/coords-horizontal.png",[127],"/_content/images/tutorial1/coords-horizontal.png",{"aspectRatio":601},[123,622],{"alt":623,"className":624,"src":625,"width":598,"height":599,"style":626},"tutorial1/coords-vertical.png",[127],"/_content/images/tutorial1/coords-vertical.png",{"aspectRatio":601},[22,628,629],{},"In these diagrams, max-pxcor is 3 , min-pxcor is -3, max-pycor is 2 and\nmin-pycor is -2.",[22,631,632],{},"When you change the patch size, the number of patches (tiles) doesn’t change,\nthe patches only get larger or smaller in the view.",[22,634,635],{},"Let’s look at the effect of changing the minimum and maximum coordinates in the\nworld.",[115,637,638,643,647,651,654,662],{},[52,639,640],{},[55,641,642],{},"Using the Settings dialog that is still open, change max-pxcor to 30 and\nmax-pycor value to 10. Notice that min-pxcor and min-pycor change too.\nThat’s because by default the origin (0,0) is in the center of the world.",[22,644,646],{"className":645},[155],"What happened to the shape of the view?",[52,648,649],{},[55,650,151],{},[22,652,653],{},"Now you can see the new patches you have created.",[52,655,656,659],{},[55,657,658],{},"Edit the view by pressing the “Settings…” button again.",[55,660,661],{},"Change the patch size to 20 and press “OK”.",[22,663,665],{"className":664},[155],"What happened to the size of the view? Did its shape change?",[22,667,668],{},"Editing the view also lets you change other settings. Feel free to experiment\nwith these.",[22,670,671],{},"Once you are done exploring the Wolf Sheep Predation model, you may want to take\nsome time just to explore some of the other models available in the Models\nLibrary.",[104,673,676],{"id":674,"className":675},"models-library",[14],[16,677,96],{"className":678,"href":95},[19],[22,680,681],{},"The library contains four sections: Sample Models, Curricular Models, Code\nExamples, and HubNet Activities.",[428,683,686],{"id":684,"className":685},"sample-models",[14],[16,687,690],{"className":688,"href":689},[19],"#sample-models","Sample Models",[22,692,693],{},"The Sample Models section is organized by subject area and currently contains\nmore than 200 models. We are continuously working on adding new models to it, so\ncome visit this section at a later date to view the new additions to the\nlibrary.",[22,695,696],{},"Some of the folders in Sample Models have folders inside them labeled\n“(unverified)”. These models are complete and functional, but are still in the\nprocess of being reviewed for content, accuracy, and quality of code.",[428,698,701],{"id":699,"className":700},"curricular-models",[14],[16,702,705],{"className":703,"href":704},[19],"#curricular-models","Curricular Models",[22,707,708],{},"These are models designed to be used in schools in the context of curricula\ndeveloped by the CCL at Northwestern University. Some of these are models are\nalso listed under Sample Models; others are unique to this section. See the Info\ntabs of the models for more information on the curricula they go with.",[428,710,713],{"id":711,"className":712},"code-examples",[14],[16,714,717],{"className":715,"href":716},[19],"#code-examples","Code Examples",[22,719,720],{},"These are simple demonstrations of particular features of NetLogo. They’ll be\nuseful to you later when you’re extending existing models or building new ones.\nFor example, if you wanted to add a histogram to your model, you’d look at\n“Histogram Example” to find out how.",[428,722,725],{"id":723,"className":724},"hubnet-activities",[14],[16,726,729],{"className":727,"href":728},[19],"#hubnet-activities","HubNet Activities",[22,731,732,733,737],{},"This section contains participatory simulations for use with groups. For more\ninformation about HubNet, see the ",[16,734,736],{"href":735},"/hubnet","HubNet Guide",".",[104,739,742],{"id":740,"className":741},"whats-next",[14],[16,743,102],{"className":744,"href":101},[19],[22,746,747,748,752],{},"If you want to learn how to explore models at a deeper level,\n",[16,749,751],{"href":750},"tutorial2","Tutorial #2: Commands"," will introduce you to the NetLogo\nmodeling language.",[22,754,755,756,760],{},"In ",[16,757,759],{"href":758},"tutorial3","Tutorial #3: Procedures"," you can learn how to alter and\nextend existing models and build new ones.",{"title":762,"searchDepth":763,"depth":764,"links":765},"",5,3,[766,768,770,771,772,773,777,778,784],{"id":44,"depth":767,"text":50},4,{"id":106,"depth":769,"text":60},2,{"id":173,"depth":769,"text":66},{"id":233,"depth":769,"text":72},{"id":261,"depth":769,"text":78},{"id":419,"depth":769,"text":84,"children":774},[775,776],{"id":430,"depth":764,"text":436},{"id":448,"depth":764,"text":454},{"id":475,"depth":769,"text":90},{"id":674,"depth":769,"text":96,"children":779},[780,781,782,783],{"id":684,"depth":764,"text":690},{"id":699,"depth":764,"text":705},{"id":711,"depth":764,"text":717},{"id":723,"depth":764,"text":729},{"id":740,"depth":769,"text":102},"First tutorial in the NetLogo learning series, introducing basic concepts of exploring and running NetLogo models.","md",{"source":788,"metadataOutputPath":789,"projectConfig":790,"language":792,"output":801,"inheritFrom":802,"version":797,"keywords":803,"tags":809,"icon":810,"assetsRoot":811},"autogen/tutorial1.md","content/tutorial1.metadata.yaml",{"defaults":791,"projectRoot":737,"outputRoot":798,"scanRoot":799,"engine":800,"version":797,"dedupeIdenticalDiskWrites":801},{"language":792,"output":793,"inheritFrom":794,"extension":786,"title":796,"version":797},"en",false,[795],0,"NetLogo User Manual","7.0.1","content","autogen","handlebars",true,[795],[804,805,806,807,808],"Tutorial","Getting Started","Learning","Models","NetLogo",[804,805,806],"i-fluent-mdl2-learning-tools","/Volumes/CCL/netlogo/Helio/apps/docs-nuxt/autogen","/tutorial1",{"title":5,"description":785},"tutorial1","4v56XjbTYBrOovjnZg8ldSVe4ysR3Mu2ZoJkuG-6b-0",[817,822],{"title":818,"path":819,"stem":820,"description":821},"Transition Guide","/transition","transition","Guide to transitioning between different versions of NetLogo, including migration tips and information about breaking changes.",{"title":751,"path":823,"stem":750,"description":824},"/tutorial2","Second tutorial in the NetLogo learning series, covering basic commands and programming concepts in NetLogo.",1761669088076]