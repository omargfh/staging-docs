[{"data":1,"prerenderedAt":2387},["ShallowReactive",2],{"/table":3,"/table-surround":2376},{"id":4,"title":5,"body":6,"description":2352,"extension":2353,"meta":2354,"navigation":2368,"path":2373,"seo":2374,"stem":12,"__hash__":2375},"content/table.md","Table Extension",{"type":7,"value":8,"toc":2247},"minimark",[9,22,32,36,39,58,67,76,86,89,92,95,104,113,307,316,333,399,412,484,507,609,612,700,706,809,818,821,837,840,895,904,912,1037,1046,1078,1105,1260,1391,1424,1688,1913,1944,1977,2010,2039,2067,2090,2130,2163,2192,2218],[10,11,15],"h1",{"id":12,"className":13},"table",[14],"section-heading",[16,17,21],"a",{"className":18,"href":20},[19],"section-anchor","#table","Table",[23,24,27],"h2",{"id":25,"className":26},"using",[14],[16,28,31],{"className":29,"href":30},[19],"#using","Using",[33,34,35],"p",{},"The table extension is pre-installed in NetLogo.",[33,37,38],{},"To use the table extension in your model, add a line to the top of your Code tab:",[40,41,42],"pre",{},[43,44,45,52,53,57],"code",{},[46,47,51],"span",{"className":48},[49,50],"token","keyword","extensions"," [",[46,54,12],{"className":55},[49,56],"variable","]",[33,59,60,61,63,64,66],{},"If your model already uses other extensions, then it already has an\n",[43,62,51],{}," line in it, so just add ",[43,65,12],{}," to the list.",[33,68,69,70],{},"For more information on using NetLogo extensions,\nsee the ",[16,71,75],{"href":72,"rel":73},"http://ccl.northwestern.edu/netlogo/docs/extensions.html",[74],"nofollow","Extensions Guide",[77,78,81],"h3",{"id":79,"className":80},"when-to-use",[14],[16,82,85],{"className":83,"href":84},[19],"#when-to-use","When to Use",[33,87,88],{},"In general, anything you can do with an table in NetLogo, you could\nalso just use a list for. But you may want to consider using an table\ninstead for speed reasons. Lists and tables have different performance\ncharacteristics, so you may be able to make your model run faster by\nselecting the appropriate data structure.",[33,90,91],{},"Tables are useful when you need to do associate values with other\nvalues. For example, you might make a table of words and their\ndefinitions. Then you can look up the definition of any word. Here,\nthe words are the “keys”. You can easily retrieve the value\nfor any key in the table, but not vice versa.",[33,93,94],{},"Unlike NetLogo’s lists and strings, tables are\n“mutable”. That means that you can actually modify them\ndirectly, rather than constructing an altered copy as with lists. If\nthe table is used in more than one place in your code, any\nchanges you make will show up everywhere. It’s tricky to write\ncode involving mutable structures and it’s easy to make subtle\nerrors or get surprising results, so we suggest sticking with lists\nand strings unless you’re certain you want and need mutability.",[77,96,99],{"id":97,"className":98},"example",[14],[16,100,103],{"className":101,"href":102},[19],"#example","Example",[33,105,106,110],{},[107,108],"binding",{"value":109},"! don't turn extension object into template variable",[107,111],{"value":112},"=",[40,114,115],{},[43,116,117,122,123,122,127,131,134,122,138,122,141,122,146,150,152,122,155,122,158,122,162,166,168,122,172,175,177,122,181,122,185,122,188,122,193,196,122,200,122,203,122,206,122,209,213,215,122,218,122,222,225,227,122,230,235,237,122,240,122,244,122,247,250,252,122,255,258,260,122,263,122,266,122,269,273,275,278,279,283,284,286,122,289,122,293,296,298,52,301,122,304,57],{},[46,118,121],{"className":119},[49,120],"command","let"," ",[46,124,126],{"className":125},[49,56],"dict",[46,128,130],{"className":129},[49,56],"table:make",[132,133],"br",{},[46,135,137],{"className":136},[49,56],"table:put",[46,139,126],{"className":140},[49,56],[46,142,145],{"className":143},[49,144],"string","\"turtle\"",[46,147,149],{"className":148},[49,144],"\"cute\"",[132,151],{},[46,153,137],{"className":154},[49,56],[46,156,126],{"className":157},[49,56],[46,159,161],{"className":160},[49,144],"\"bunny\"",[46,163,165],{"className":164},[49,144],"\"cutest\"",[132,167],{},[46,169,171],{"className":170},[49,120],"print",[46,173,126],{"className":174},[49,56],[132,176],{},[46,178,180],{"className":179},[49,56],"=>",[46,182,184],{"className":183},[49,56],"{{table:",[46,186,145],{"className":187},[49,144],[46,189,192],{"className":190},[49,191],"reporter","->",[46,194,149],{"className":195},[49,144],[46,197,199],{"className":198},[49,56],",",[46,201,161],{"className":202},[49,144],[46,204,192],{"className":205},[49,191],[46,207,165],{"className":208},[49,144],[46,210,212],{"className":211},[49,56],"}}",[132,214],{},[46,216,171],{"className":217},[49,120],[46,219,221],{"className":220},[49,56],"table:length",[46,223,126],{"className":224},[49,56],[132,226],{},[46,228,180],{"className":229},[49,56],[46,231,234],{"className":232},[49,233],"number","2",[132,236],{},[46,238,171],{"className":239},[49,120],[46,241,243],{"className":242},[49,56],"table:get",[46,245,126],{"className":246},[49,56],[46,248,145],{"className":249},[49,144],[132,251],{},[46,253,180],{"className":254},[49,56],[46,256,149],{"className":257},[49,144],[132,259],{},[46,261,171],{"className":262},[49,120],[46,264,243],{"className":265},[49,56],[46,267,126],{"className":268},[49,56],[46,270,272],{"className":271},[49,144],"\"leopard\"",[132,274],{},[46,276,180],{"className":277},[49,56]," (",[46,280,282],{"className":281},[49,120],"error",")",[132,285],{},[46,287,171],{"className":288},[49,120],[46,290,292],{"className":291},[49,56],"table:keys",[46,294,126],{"className":295},[49,56],[132,297],{},[46,299,180],{"className":300},[49,56],[46,302,145],{"className":303},[49,144],[46,305,161],{"className":306},[49,144],[77,308,311],{"id":309,"className":310},"manipulating-tables",[14],[16,312,315],{"className":313,"href":314},[19],"#manipulating-tables","Manipulating Tables",[33,317,318,319,321,322,326,327,329,330,332],{},"If the same key is used with ",[43,320,137],{}," more than once for the same table, the value provided to ",[323,324,325],"em",{},"last"," call of ",[43,328,137],{}," will be the value shown when ",[43,331,243],{}," is used.\nHere is an example:",[40,334,335],{},[43,336,337,122,340,122,343,346,348,122,351,122,354,122,358,362,364,122,367,122,370,122,373,377,379,122,382,122,385,122,388,391,393,122,396],{},[46,338,121],{"className":339},[49,120],[46,341,126],{"className":342},[49,56],[46,344,130],{"className":345},[49,56],[132,347],{},[46,349,137],{"className":350},[49,56],[46,352,126],{"className":353},[49,56],[46,355,357],{"className":356},[49,144],"\"a\"",[46,359,361],{"className":360},[49,233],"5",[132,363],{},[46,365,137],{"className":366},[49,56],[46,368,126],{"className":369},[49,56],[46,371,357],{"className":372},[49,144],[46,374,376],{"className":375},[49,233],"3",[132,378],{},[46,380,171],{"className":381},[49,120],[46,383,243],{"className":384},[49,56],[46,386,126],{"className":387},[49,56],[46,389,357],{"className":390},[49,144],[132,392],{},[46,394,180],{"className":395},[49,56],[46,397,376],{"className":398},[49,233],[33,400,401,402,404,405,408,409,411],{},"Because tables are mutable, manipulating existing values should be done by calling ",[43,403,243],{}," or ",[43,406,407],{},"table:get-or-default"," on a key, transforming the returned value, and then calling ",[43,410,137],{}," to update the transformed value in the table.\nHere is an example procedure which increments a value in a table at a given key.\nIf the key doesn’t exist, it puts a 1 at that key instead.",[40,413,414],{},[43,415,416,122,420,424,425,122,428,432,433,435,436,122,439,122,443,122,446,122,449,122,452,456,435,458,122,461,122,464,122,467,122,470,122,474,478],{},[46,417,419],{"className":418},[49,50],"to",[46,421,423],{"className":422},[49,56],"increment-table-value"," [ ",[46,426,126],{"className":427},[49,56],[46,429,431],{"className":430},[49,56],"key"," ]",[132,434],{},"  ",[46,437,121],{"className":438},[49,120],[46,440,442],{"className":441},[49,56],"i",[46,444,407],{"className":445},[49,56],[46,447,126],{"className":448},[49,56],[46,450,431],{"className":451},[49,56],[46,453,455],{"className":454},[49,233],"0",[132,457],{},[46,459,137],{"className":460},[49,56],[46,462,126],{"className":463},[49,56],[46,465,431],{"className":466},[49,56],[46,468,442],{"className":469},[49,56],[46,471,473],{"className":472},[49,191],"+",[46,475,477],{"className":476},[49,233],"1",[46,479,481,483],{"className":480},[49,50],[132,482],{},"end",[33,485,486,487,489,490,492,493,496,497,500,501,404,503,506],{},"As ",[43,488,423],{}," shows, when a table is given as an input for a procedure, modifications made to it with ",[43,491,137],{},", ",[43,494,495],{},"table:remove",", or ",[43,498,499],{},"table:clear"," are reflected in the original value outside of the procedure.  This is different behavior than with list values, which are immutable and so cannot be changed when given as inputs.  Caution needs to be exercised when using ",[43,502,121],{},[43,504,505],{},"set",", as they can give a different variable name to the same table.  If you change the value for a key in the table using one variable, any other variables assigned that same table will also reflect the change.",[40,508,509],{},[43,510,511,122,514,122,517,520,522,122,525,122,528,122,531,534,536,122,539,122,543,546,548,122,551,122,554,122,557,560,562,122,565,122,568,122,571,574,576,122,579,122,582,587,589,122,592,122,595,122,598,601,603,122,606],{},[46,512,121],{"className":513},[49,120],[46,515,126],{"className":516},[49,56],[46,518,130],{"className":519},[49,56],[132,521],{},[46,523,137],{"className":524},[49,56],[46,526,126],{"className":527},[49,56],[46,529,357],{"className":530},[49,144],[46,532,361],{"className":533},[49,233],[132,535],{},[46,537,121],{"className":538},[49,120],[46,540,542],{"className":541},[49,56],"alt",[46,544,126],{"className":545},[49,56],[132,547],{},[46,549,137],{"className":550},[49,56],[46,552,542],{"className":553},[49,56],[46,555,357],{"className":556},[49,144],[46,558,376],{"className":559},[49,233],[132,561],{},[46,563,171],{"className":564},[49,120],[46,566,243],{"className":567},[49,56],[46,569,126],{"className":570},[49,56],[46,572,357],{"className":573},[49,144],[132,575],{},[46,577,180],{"className":578},[49,56],[46,580,376],{"className":581},[49,233],[46,583,586],{"className":584},[49,585],"comment","; changed because `dict` and `alt` refer to the same table",[132,588],{},[46,590,171],{"className":591},[49,120],[46,593,243],{"className":594},[49,56],[46,596,542],{"className":597},[49,56],[46,599,357],{"className":600},[49,144],[132,602],{},[46,604,180],{"className":605},[49,56],[46,607,376],{"className":608},[49,233],[33,610,611],{},"If you want to create a copy of a table instead of assigning the same table to multiple variable names, here is a simple reporter for creating a duplicate table from an existing one:",[40,613,614],{},[43,615,616,122,620,424,624,432,628,435,630,122,633,122,637,640,435,642,646,647,122,650,653,654,656,657,660,661,122,664,122,667,122,670,646,673,122,676,122,679,682,683,685,686,435,688,122,692,695],{},[46,617,619],{"className":618},[49,50],"to-report",[46,621,623],{"className":622},[49,56],"copy-table",[46,625,627],{"className":626},[49,56],"orig",[132,629],{},[46,631,121],{"className":632},[49,120],[46,634,636],{"className":635},[49,56],"copy",[46,638,130],{"className":639},[49,56],[132,641],{},[46,643,645],{"className":644},[49,120],"foreach"," ( ",[46,648,292],{"className":649},[49,56],[46,651,627],{"className":652},[49,56]," ) [",[132,655],{},"    [",[46,658,431],{"className":659},[49,56],"] ",[46,662,192],{"className":663},[49,191],[46,665,137],{"className":666},[49,56],[46,668,636],{"className":669},[49,56],[46,671,431],{"className":672},[49,56],[46,674,243],{"className":675},[49,56],[46,677,627],{"className":678},[49,56],[46,680,431],{"className":681},[49,56]," )",[132,684],{},"  ]",[132,687],{},[46,689,691],{"className":690},[49,120],"report",[46,693,636],{"className":694},[49,56],[46,696,698,483],{"className":697},[49,50],[132,699],{},[33,701,702,703,705],{},"And here is a sample usage of the ",[43,704,623],{}," reporter:",[40,707,708],{},[43,709,710,122,713,122,716,719,721,122,724,122,727,122,730,733,735,122,738,122,741,122,744,747,749,122,752,122,755,122,758,761,763,122,766,122,769,122,772,775,777,122,780,122,783,787,789,122,792,122,795,122,798,801,803,122,806],{},[46,711,121],{"className":712},[49,120],[46,714,126],{"className":715},[49,56],[46,717,130],{"className":718},[49,56],[132,720],{},[46,722,137],{"className":723},[49,56],[46,725,126],{"className":726},[49,56],[46,728,357],{"className":729},[49,144],[46,731,361],{"className":732},[49,233],[132,734],{},[46,736,121],{"className":737},[49,120],[46,739,542],{"className":740},[49,56],[46,742,623],{"className":743},[49,56],[46,745,126],{"className":746},[49,56],[132,748],{},[46,750,137],{"className":751},[49,56],[46,753,542],{"className":754},[49,56],[46,756,357],{"className":757},[49,144],[46,759,376],{"className":760},[49,233],[132,762],{},[46,764,171],{"className":765},[49,120],[46,767,243],{"className":768},[49,56],[46,770,126],{"className":771},[49,56],[46,773,357],{"className":774},[49,144],[132,776],{},[46,778,180],{"className":779},[49,56],[46,781,361],{"className":782},[49,233],[46,784,786],{"className":785},[49,585],"; `dict` is not changed because we created a new table copy for `alt`",[132,788],{},[46,790,171],{"className":791},[49,120],[46,793,243],{"className":794},[49,56],[46,796,542],{"className":797},[49,56],[46,799,357],{"className":800},[49,144],[132,802],{},[46,804,180],{"className":805},[49,56],[46,807,376],{"className":808},[49,233],[77,810,813],{"id":811,"className":812},"key-restrictions",[14],[16,814,817],{"className":815,"href":816},[19],"#key-restrictions","Key Restrictions",[33,819,820],{},"Table keys are limited to the following NetLogo types:",[822,823,824,828,831,834],"ul",{},[825,826,827],"li",{},"Numbers",[825,829,830],{},"Strings",[825,832,833],{},"Booleans",[825,835,836],{},"Lists containing only elements which are themselves valid keys",[33,838,839],{},"If you attempt to use an illegal value, the table extension will raise an exception, as shown in the following example.",[40,841,842],{},[43,843,844,122,848,851,853,122,856,122,859,862,864,122,867,278,870,122,874,878,879,883,885,889,891],{},[46,845,847],{"className":846},[49,120],"crt",[46,849,477],{"className":850},[49,233],[132,852],{},[46,854,121],{"className":855},[49,120],[46,857,126],{"className":858},[49,56],[46,860,130],{"className":861},[49,56],[132,863],{},[46,865,137],{"className":866},[49,56],[46,868,126],{"className":869},[49,56],[46,871,873],{"className":872},[49,191],"one-of",[46,875,877],{"className":876},[49,191],"turtles",") ",[46,880,882],{"className":881},[49,233],"10",[132,884],{},[46,886,888],{"className":887},[49,585],";; Errors with the following message:",[132,890],{},[46,892,894],{"className":893},[49,585],";; (turtle 0) is not a valid table key (a table key may only be a number, a string, true or false, or a list whose items are valid keys)",[23,896,899],{"id":897,"className":898},"primitives",[14],[16,900,903],{"className":901,"href":902},[19],"#primitives","Primitives",[33,905,906,907,911],{},"Looking for the primitive reference for the Table extension? You can find ",[16,908,910],{"href":909},"/table/dictionary","the full reference here",".",[913,914,918,919,918,925,918,932,918,939,918,946,918,953,918,960,918,967,918,973,918,979,918,986,918,992,918,998,918,1004,918,1010,918,1016,918,1023,918,1030],"div",{"id":915,"className":916},"all",[917],"prose","\n  ",[16,920,923],{"className":921,"href":922},[43],"#clear",[43,924,499],{},[16,926,929],{"className":927,"href":928},[43],"#counts",[43,930,931],{},"table:counts",[16,933,936],{"className":934,"href":935},[43],"#group-agents",[43,937,938],{},"table:group-agents",[16,940,943],{"className":941,"href":942},[43],"#group-items",[43,944,945],{},"table:group-items",[16,947,950],{"className":948,"href":949},[43],"#from-list",[43,951,952],{},"table:from-list",[16,954,957],{"className":955,"href":956},[43],"#from-json",[43,958,959],{},"table:from-json",[16,961,964],{"className":962,"href":963},[43],"#from-json-file",[43,965,966],{},"table:from-json-file",[16,968,971],{"className":969,"href":970},[43],"#get",[43,972,243],{},[16,974,977],{"className":975,"href":976},[43],"#get-or-default",[43,978,407],{},[16,980,983],{"className":981,"href":982},[43],"#has-key",[43,984,985],{},"table:has-key?",[16,987,990],{"className":988,"href":989},[43],"#keys",[43,991,292],{},[16,993,996],{"className":994,"href":995},[43],"#length",[43,997,221],{},[16,999,1002],{"className":1000,"href":1001},[43],"#make",[43,1003,130],{},[16,1005,1008],{"className":1006,"href":1007},[43],"#put",[43,1009,137],{},[16,1011,1014],{"className":1012,"href":1013},[43],"#remove",[43,1015,495],{},[16,1017,1020],{"className":1018,"href":1019},[43],"#to-list",[43,1021,1022],{},"table:to-list",[16,1024,1027],{"className":1025,"href":1026},[43],"#to-json",[43,1028,1029],{},"table:to-json",[16,1031,1034],{"className":1032,"href":1033},[43],"#values",[43,1035,1036],{},"table:values",[77,1038,1041],{"id":1039,"className":1040},"all-primitives",[14],[16,1042,1045],{"className":1043,"href":1044},[19],"#all-primitives","All Primitives",[913,1047,918,1051,918,1057,1073],{"className":1048,"id":1050},[1049],"dict_entry","clear",[77,1052,1054,1055,918],{"id":1053},"tableclear","\n    ",[16,1056,499],{"href":922},[1058,1059,1062],"h4",{"id":1060,"className":1061},"tableclear-table",[14],[16,1063,1054,1066,918],{"className":1064,"href":1065},[19],"#----tableclear-table--",[46,1067,1070,1071],{"className":1068},[1069],"prim_example","table:clear ",[442,1072,12],{},[33,1074,1075,1076,911],{},"Removes all key-value pairs from ",[323,1077,12],{},[913,1079,918,1082,918,1087,1102],{"className":1080,"id":1081},[1049],"counts",[77,1083,1054,1085,918],{"id":1084},"tablecounts",[16,1086,931],{"href":928},[1058,1088,1091],{"id":1089,"className":1090},"tablecounts-netlogolist",[14],[16,1092,1054,1095,918],{"className":1093,"href":1094},[19],"#----tablecounts-netlogolist--",[46,1096,1098,1099],{"className":1097},[1069],"table:counts ",[442,1100,1101],{},"netlogolist",[33,1103,1104],{},"Counts the occurrences of each element of the given list and reports the counts in a table.",[913,1106,918,1109,918,1114,1131,1134,1137,1144],{"className":1107,"id":1108},[1049],"group-agents",[77,1110,1054,1112,918],{"id":1111},"tablegroup-agents",[16,1113,938],{"href":935},[1058,1115,1118],{"id":1116,"className":1117},"tablegroup-agents-agentset-reporter",[14],[16,1119,1054,1122,918],{"className":1120,"href":1121},[19],"#----tablegroup-agents-agentset-reporter--",[46,1123,1125,1126,122,1129],{"className":1124},[1069],"table:group-agents ",[442,1127,1128],{},"agentset",[442,1130,191],{},[33,1132,1133],{},"Groups the agents in the agentset based on the given reporter.\nAgents that report the same thing for reporter will be grouped together.\nThe results of the reporter will be used as the keys in the resulting table and the groups will be agentsets.",[33,1135,1136],{},"For example:",[33,1138,1139,1142],{},[107,1140],{"value":1141},"! prevent mustache from interpreting extension object as template variable",[107,1143],{"value":112},[40,1145,1146],{},[43,1147,1148,122,1152,122,1156,424,1160,122,1163,122,1167,424,1170,122,1175,122,1179,1183,1184,1186,122,1189,122,1193,122,1196,424,1199,432,1202,1204,122,1208,1211,1212,278,1216,122,1220,122,1224,1227,1228,278,1232,122,1235,122,1239,1227,1242,278,1246,122,1249,122,1253,1256,1257],{},[46,1149,1151],{"className":1150},[49,56],"observer>",[46,1153,1155],{"className":1154},[49,120],"create-turtles",[46,1157,1159],{"className":1158},[49,233],"100",[46,1161,505],{"className":1162},[49,120],[46,1164,1166],{"className":1165},[49,191],"color",[46,1168,873],{"className":1169},[49,191],[46,1171,1174],{"className":1172},[49,1173],"constant","red",[46,1176,1178],{"className":1177},[49,1173],"green",[46,1180,1182],{"className":1181},[49,1173],"blue"," ] ]",[132,1185],{},[46,1187,1151],{"className":1188},[49,56],[46,1190,1192],{"className":1191},[49,120],"show",[46,1194,938],{"className":1195},[49,56],[46,1197,877],{"className":1198},[49,191],[46,1200,1166],{"className":1201},[49,191],[132,1203],{},[46,1205,1207],{"className":1206},[49,56],"observer:",[46,1209,184],{"className":1210},[49,56]," [[",[46,1213,1215],{"className":1214},[49,233],"105",[46,1217,1219],{"className":1218},[49,56],"agentset,",[46,1221,1223],{"className":1222},[49,233],"38",[46,1225,877],{"className":1226},[49,191],")] [",[46,1229,1231],{"className":1230},[49,233],"55",[46,1233,1219],{"className":1234},[49,56],[46,1236,1238],{"className":1237},[49,233],"32",[46,1240,877],{"className":1241},[49,191],[46,1243,1245],{"className":1244},[49,233],"15",[46,1247,1219],{"className":1248},[49,56],[46,1250,1252],{"className":1251},[49,233],"30",[46,1254,877],{"className":1255},[49,191],")]]",[46,1258,212],{"className":1259},[49,56],[913,1261,918,1264,918,1269,1286,1289,1291,1297],{"className":1262,"id":1263},[1049],"group-items",[77,1265,1054,1267,918],{"id":1266},"tablegroup-items",[16,1268,945],{"href":942},[1058,1270,1273],{"id":1271,"className":1272},"tablegroup-items-netlogolist-anonymous-reporter",[14],[16,1274,1054,1277,918],{"className":1275,"href":1276},[19],"#----tablegroup-items-netlogolist-anonymous-reporter--",[46,1278,1280,1281,122,1283],{"className":1279},[1069],"table:group-items ",[442,1282,1101],{},[442,1284,1285],{},"anonymous-reporter",[33,1287,1288],{},"Groups the items of the list based on the given reporter.\nThe reporter should take a single argument, which will be the items of the list.\nItems that report the same thing when passed to the reporter will be grouped together.\nThe results of the reporter will be used as the keys in the resulting table and the groups will be lists.",[33,1290,1136],{},[33,1292,1293,1295],{},[107,1294],{"value":1141},[107,1296],{"value":112},[40,1298,1299],{},[43,1300,1301,122,1304,122,1307,122,1310,122,1314,424,1317,122,1321,122,1324,122,1327,122,1331,432,1334,1336,122,1339,1211,1342,52,1345,122,1348,122,1351,122,1355,1359,1360,52,1363,122,1366,122,1370,1359,1374,52,1377,122,1380,122,1383,1387,1388],{},[46,1302,1151],{"className":1303},[49,56],[46,1305,1192],{"className":1306},[49,120],[46,1308,945],{"className":1309},[49,56],[46,1311,1313],{"className":1312},[49,191],"range",[46,1315,882],{"className":1316},[49,233],[46,1318,1320],{"className":1319},[49,56],"num",[46,1322,192],{"className":1323},[49,191],[46,1325,1320],{"className":1326},[49,56],[46,1328,1330],{"className":1329},[49,191],"mod",[46,1332,376],{"className":1333},[49,233],[132,1335],{},[46,1337,1207],{"className":1338},[49,56],[46,1340,184],{"className":1341},[49,56],[46,1343,455],{"className":1344},[49,233],[46,1346,455],{"className":1347},[49,233],[46,1349,376],{"className":1350},[49,233],[46,1352,1354],{"className":1353},[49,233],"6",[46,1356,1358],{"className":1357},[49,233],"9","]] [",[46,1361,477],{"className":1362},[49,233],[46,1364,477],{"className":1365},[49,233],[46,1367,1369],{"className":1368},[49,233],"4",[46,1371,1373],{"className":1372},[49,233],"7",[46,1375,234],{"className":1376},[49,233],[46,1378,234],{"className":1379},[49,233],[46,1381,361],{"className":1382},[49,233],[46,1384,1386],{"className":1385},[49,233],"8","]]]",[46,1389,212],{"className":1390},[49,56],[913,1392,918,1395,918,1400,1414],{"className":1393,"id":1394},[1049],"from-list",[77,1396,1054,1398,918],{"id":1397},"tablefrom-list",[16,1399,952],{"href":949},[1058,1401,1404],{"id":1402,"className":1403},"tablefrom-list-netlogolist",[14],[16,1405,1054,1408,918],{"className":1406,"href":1407},[19],"#----tablefrom-list-netlogolist--",[46,1409,1411,1412],{"className":1410},[1069],"table:from-list ",[442,1413,1101],{},[33,1415,1416,1417,1420,1421,1423],{},"Reports a new table with the contents of ",[323,1418,1419],{},"list",".\n",[323,1422,1419],{}," must be a list of two element lists, or pairs.\nThe first element in the pair is the key and the second element is the value.",[913,1425,918,1428,918,1433,1448],{"className":1426,"id":1427},[1049],"from-json",[77,1429,1054,1431,918],{"id":1430},"tablefrom-json",[16,1432,959],{"href":956},[1058,1434,1437],{"id":1435,"className":1436},"tablefrom-json-netlogostring",[14],[16,1438,1054,1441,918],{"className":1439,"href":1440},[19],"#----tablefrom-json-netlogostring--",[46,1442,1444,1445],{"className":1443},[1069],"table:from-json ",[442,1446,1447],{},"netlogostring",[40,1449,1450],{},[43,1451,1452,122,1456,122,1460,122,1464,122,1468,122,1472,122,1476,122,1479,122,1483,122,1486,122,1490,122,1494,1498,122,1502,122,1505,122,1509,122,1513,122,1517,122,1520,1524,1526,122,1530,122,1533,122,1536,122,1539,122,1542,122,1546,122,1550,122,1554,122,1558,122,1562,122,1566,122,1569,278,1573,122,1577,122,1580,122,1584,122,1588,122,1591,122,1594,122,1598,122,1601,122,1605,122,1608,1612,1613,122,1616,122,1619,57,1622,283,1625,1628,1630,122,1634,122,1638,122,1642,122,1645,122,1649,122,1653,122,1656,122,1659,122,1662,122,1666,122,1670,122,1673,1677,122,1680,122,1684],{},[46,1453,1455],{"className":1454},[49,56],"Reads",[46,1457,1459],{"className":1458},[49,56],"in",[46,1461,1463],{"className":1462},[49,56],"the",[46,1465,1467],{"className":1466},[49,56],"JSON",[46,1469,1471],{"className":1470},[49,56],"object",[46,1473,1475],{"className":1474},[49,56],"from",[46,1477,1463],{"className":1478},[49,56],[46,1480,1482],{"className":1481},[49,56],"given",[46,1484,144],{"className":1485},[49,56],[46,1487,1489],{"className":1488},[49,56],"argument,",[46,1491,1493],{"className":1492},[49,56],"converts",[46,1495,1497],{"className":1496},[49,56],"it",[46,1499,1501],{"className":1500},[49,50]," to",[46,1503,16],{"className":1504},[49,56],[46,1506,1508],{"className":1507},[49,56],"table,",[46,1510,1512],{"className":1511},[49,191],"and",[46,1514,1516],{"className":1515},[49,56],"reports",[46,1518,1463],{"className":1519},[49,56],[46,1521,1523],{"className":1522},[49,56],"table.",[132,1525],{},[46,1527,1529],{"className":1528},[49,56],"The",[46,1531,1467],{"className":1532},[49,56],[46,1534,1471],{"className":1535},[49,56],[46,1537,1459],{"className":1538},[49,56],[46,1540,1463],{"className":1541},[49,56],[46,1543,1545],{"className":1544},[49,56],"argument",[46,1547,1549],{"className":1548},[49,56],"must",[46,1551,1553],{"className":1552},[49,56],"be",[46,1555,1557],{"className":1556},[49,56],"an",[46,1559,1561],{"className":1560},[49,56],"object,",[46,1563,1565],{"className":1564},[49,191],"not",[46,1567,1557],{"className":1568},[49,56],[46,1570,1572],{"className":1571},[49,56],"array",[46,1574,1576],{"className":1575},[49,56],"i.e.",[46,1578,1463],{"className":1579},[49,56],[46,1581,1583],{"className":1582},[49,56],"outmost",[46,1585,1587],{"className":1586},[49,56],"characters",[46,1589,1549],{"className":1590},[49,56],[46,1592,1553],{"className":1593},[49,56],[46,1595,1597],{"className":1596},[49,56],"`{`",[46,1599,1512],{"className":1600},[49,191],[46,1602,1604],{"className":1603},[49,56],"`}`,",[46,1606,1565],{"className":1607},[49,191],[46,1609,1611],{"className":1610},[49,56],"`","[",[46,1614,1611],{"className":1615},[49,56],[46,1617,1512],{"className":1618},[49,191],[46,1620,1611],{"className":1621},[49,56],[46,1623,1611],{"className":1624},[49,56],[46,1626,199],{"className":1627},[49,56],[132,1629],{},[46,1631,1633],{"className":1632},[49,56],"but",[46,1635,1637],{"className":1636},[49,56],"there",[46,1639,1641],{"className":1640},[49,56],"can",[46,1643,1553],{"className":1644},[49,56],[46,1646,1648],{"className":1647},[49,56],"arrays",[46,1650,1652],{"className":1651},[49,56],"inside",[46,1654,1463],{"className":1655},[49,56],[46,1657,1467],{"className":1658},[49,56],[46,1660,1471],{"className":1661},[49,56],[46,1663,1665],{"className":1664},[49,56],"which",[46,1667,1669],{"className":1668},[49,56],"will",[46,1671,1553],{"className":1672},[49,56],[46,1674,1676],{"className":1675},[49,56],"converted",[46,1678,1501],{"className":1679},[49,50],[46,1681,1683],{"className":1682},[49,56],"NetLogo",[46,1685,1687],{"className":1686},[49,56],"lists.",[913,1689,918,1692,918,1697,1712],{"className":1690,"id":1691},[1049],"from-json-file",[77,1693,1054,1695,918],{"id":1694},"tablefrom-json-file",[16,1696,966],{"href":963},[1058,1698,1701],{"id":1699,"className":1700},"tablefrom-json-file-filename",[14],[16,1702,1054,1705,918],{"className":1703,"href":1704},[19],"#----tablefrom-json-file-filename--",[46,1706,1708,1709],{"className":1707},[1069],"table:from-json-file ",[442,1710,1711],{},"filename",[40,1713,1714],{},[43,1715,1716,122,1719,122,1722,122,1725,122,1728,122,1731,122,1734,122,1738,122,1741,1744,122,1747,122,1750,122,1753,122,1756,122,1759,122,1762,1765,1767,122,1770,122,1773,122,1776,122,1779,122,1783,122,1786,122,1789,122,1792,122,1795,122,1798,122,1801,278,1804,122,1807,122,1810,122,1813,122,1816,122,1820,122,1823,122,1827,122,1830,122,1833,122,1836,122,1839,122,1842,122,1845,1612,1848,122,1851,122,1854,57,1857,283,1860,1863,1865,122,1868,122,1871,122,1874,122,1877,122,1880,122,1883,122,1886,122,1889,122,1892,122,1895,122,1898,122,1901,1904,122,1907,122,1910],{},[46,1717,1455],{"className":1718},[49,56],[46,1720,1459],{"className":1721},[49,56],[46,1723,1463],{"className":1724},[49,56],[46,1726,1467],{"className":1727},[49,56],[46,1729,1471],{"className":1730},[49,56],[46,1732,1475],{"className":1733},[49,56],[46,1735,1737],{"className":1736},[49,56],"*filename.json*,",[46,1739,1493],{"className":1740},[49,56],[46,1742,1497],{"className":1743},[49,56],[46,1745,1501],{"className":1746},[49,50],[46,1748,16],{"className":1749},[49,56],[46,1751,12],{"className":1752},[49,56],[46,1754,1512],{"className":1755},[49,191],[46,1757,1516],{"className":1758},[49,56],[46,1760,1463],{"className":1761},[49,56],[46,1763,1523],{"className":1764},[49,56],[132,1766],{},[46,1768,1529],{"className":1769},[49,56],[46,1771,1467],{"className":1772},[49,56],[46,1774,1471],{"className":1775},[49,56],[46,1777,1459],{"className":1778},[49,56],[46,1780,1782],{"className":1781},[49,56],"*filename.json*",[46,1784,1549],{"className":1785},[49,56],[46,1787,1553],{"className":1788},[49,56],[46,1790,1557],{"className":1791},[49,56],[46,1793,1561],{"className":1794},[49,56],[46,1796,1565],{"className":1797},[49,191],[46,1799,1557],{"className":1800},[49,56],[46,1802,1572],{"className":1803},[49,56],[46,1805,1576],{"className":1806},[49,56],[46,1808,1463],{"className":1809},[49,56],[46,1811,1583],{"className":1812},[49,56],[46,1814,1587],{"className":1815},[49,56],[46,1817,1819],{"className":1818},[49,191],"of",[46,1821,1463],{"className":1822},[49,56],[46,1824,1826],{"className":1825},[49,56],"file",[46,1828,1549],{"className":1829},[49,56],[46,1831,1553],{"className":1832},[49,56],[46,1834,1597],{"className":1835},[49,56],[46,1837,1512],{"className":1838},[49,191],[46,1840,1604],{"className":1841},[49,56],[46,1843,1565],{"className":1844},[49,191],[46,1846,1611],{"className":1847},[49,56],[46,1849,1611],{"className":1850},[49,56],[46,1852,1512],{"className":1853},[49,191],[46,1855,1611],{"className":1856},[49,56],[46,1858,1611],{"className":1859},[49,56],[46,1861,199],{"className":1862},[49,56],[132,1864],{},[46,1866,1633],{"className":1867},[49,56],[46,1869,1637],{"className":1870},[49,56],[46,1872,1641],{"className":1873},[49,56],[46,1875,1553],{"className":1876},[49,56],[46,1878,1648],{"className":1879},[49,56],[46,1881,1652],{"className":1882},[49,56],[46,1884,1463],{"className":1885},[49,56],[46,1887,1467],{"className":1888},[49,56],[46,1890,1471],{"className":1891},[49,56],[46,1893,1665],{"className":1894},[49,56],[46,1896,1669],{"className":1897},[49,56],[46,1899,1553],{"className":1900},[49,56],[46,1902,1676],{"className":1903},[49,56],[46,1905,1501],{"className":1906},[49,50],[46,1908,1683],{"className":1909},[49,56],[46,1911,1687],{"className":1912},[49,56],[913,1914,918,1917,918,1922,1938],{"className":1915,"id":1916},[1049],"get",[77,1918,1054,1920,918],{"id":1919},"tableget",[16,1921,243],{"href":970},[1058,1923,1926],{"id":1924,"className":1925},"tableget-table-key",[14],[16,1927,1054,1930,918],{"className":1928,"href":1929},[19],"#----tableget-table-key--",[46,1931,1933,1934,122,1936],{"className":1932},[1069],"table:get ",[442,1935,12],{},[442,1937,431],{},[33,1939,1940,1941,1943],{},"Reports the value that ",[323,1942,431],{}," is mapped to in the table. Causes an error if there is no entry for the key.",[913,1945,918,1948,918,1953,1972],{"className":1946,"id":1947},[1049],"get-or-default",[77,1949,1054,1951,918],{"id":1950},"tableget-or-default",[16,1952,407],{"href":976},[1058,1954,1957],{"id":1955,"className":1956},"tableget-or-default-table-key-default-value",[14],[16,1958,1054,1961,918],{"className":1959,"href":1960},[19],"#----tableget-or-default-table-key-default-value--",[46,1962,1964,1965,122,1967,122,1969],{"className":1963},[1069],"table:get-or-default ",[442,1966,12],{},[442,1968,431],{},[442,1970,1971],{},"default-value",[33,1973,1940,1974,1976],{},[323,1975,431],{}," is mapped to in the table. Reports the default-value if there is no entry for the key.",[913,1978,918,1981,918,1986,2002],{"className":1979,"id":1980},[1049],"has-key",[77,1982,1054,1984,918],{"id":1983},"tablehas-key",[16,1985,985],{"href":982},[1058,1987,1990],{"id":1988,"className":1989},"tablehas-key-table-key",[14],[16,1991,1054,1994,918],{"className":1992,"href":1993},[19],"#----tablehas-key-table-key--",[46,1995,1997,1998,122,2000],{"className":1996},[1069],"table:has-key? ",[442,1999,12],{},[442,2001,431],{},[33,2003,2004,2005,2007,2008,911],{},"Reports true if ",[323,2006,431],{}," has an entry in ",[323,2009,12],{},[913,2011,918,2014,918,2019,2033],{"className":2012,"id":2013},[1049],"keys",[77,2015,1054,2017,918],{"id":2016},"tablekeys",[16,2018,292],{"href":989},[1058,2020,2023],{"id":2021,"className":2022},"tablekeys-table",[14],[16,2024,1054,2027,918],{"className":2025,"href":2026},[19],"#----tablekeys-table--",[46,2028,2030,2031],{"className":2029},[1069],"table:keys ",[442,2032,12],{},[33,2034,2035,2036,2038],{},"Reports a list of all the keys in ",[323,2037,12],{},", in the same order the keys were inserted.",[913,2040,918,2043,918,2048,2062],{"className":2041,"id":2042},[1049],"length",[77,2044,1054,2046,918],{"id":2045},"tablelength",[16,2047,221],{"href":995},[1058,2049,2052],{"id":2050,"className":2051},"tablelength-table",[14],[16,2053,1054,2056,918],{"className":2054,"href":2055},[19],"#----tablelength-table--",[46,2057,2059,2060],{"className":2058},[1069],"table:length ",[442,2061,12],{},[33,2063,2064,2065,911],{},"Reports the number of entries in ",[323,2066,12],{},[913,2068,918,2071,918,2076,2087],{"className":2069,"id":2070},[1049],"make",[77,2072,1054,2074,918],{"id":2073},"tablemake",[16,2075,130],{"href":1001},[1058,2077,2080],{"id":2078,"className":2079},"tablemake-1",[14],[16,2081,1054,2084,918],{"className":2082,"href":2083},[19],"#----tablemake---1",[46,2085,130],{"className":2086},[1069],[33,2088,2089],{},"Reports a new, empty table.",[913,2091,918,2094,918,2099,2118],{"className":2092,"id":2093},[1049],"put",[77,2095,1054,2097,918],{"id":2096},"tableput",[16,2098,137],{"href":1007},[1058,2100,2103],{"id":2101,"className":2102},"tableput-table-key-value",[14],[16,2104,1054,2107,918],{"className":2105,"href":2106},[19],"#----tableput-table-key-value--",[46,2108,2110,2111,122,2113,122,2115],{"className":2109},[1069],"table:put ",[442,2112,12],{},[442,2114,431],{},[442,2116,2117],{},"value",[33,2119,2120,2121,2123,2124,2126,2127,2129],{},"Maps ",[323,2122,431],{}," to ",[323,2125,2117],{}," in ",[323,2128,12],{},". If an entry already exists in the table for the given key, it is replaced.",[913,2131,918,2134,918,2139,2155],{"className":2132,"id":2133},[1049],"remove",[77,2135,1054,2137,918],{"id":2136},"tableremove",[16,2138,495],{"href":1013},[1058,2140,2143],{"id":2141,"className":2142},"tableremove-table-key",[14],[16,2144,1054,2147,918],{"className":2145,"href":2146},[19],"#----tableremove-table-key--",[46,2148,2150,2151,122,2153],{"className":2149},[1069],"table:remove ",[442,2152,12],{},[442,2154,431],{},[33,2156,2157,2158,2160,2161,911],{},"Removes the mapping in ",[323,2159,12],{}," for ",[323,2162,431],{},[913,2164,918,2167,918,2172,2186],{"className":2165,"id":2166},[1049],"to-list",[77,2168,1054,2170,918],{"id":2169},"tableto-list",[16,2171,1022],{"href":1019},[1058,2173,2176],{"id":2174,"className":2175},"tableto-list-table",[14],[16,2177,1054,2180,918],{"className":2178,"href":2179},[19],"#----tableto-list-table--",[46,2181,2183,2184],{"className":2182},[1069],"table:to-list ",[442,2185,12],{},[33,2187,2188,2189,2191],{},"Reports a list with the content of ",[442,2190,12],{},". The list will be a\nlist of two element lists, or pairs. The first element in the pair is\nthe key and the second element is the value. The keys appear in the\nsame order they were inserted.",[913,2193,918,2196,918,2201,2215],{"className":2194,"id":2195},[1049],"to-json",[77,2197,1054,2199,918],{"id":2198},"tableto-json",[16,2200,1029],{"href":1026},[1058,2202,2205],{"id":2203,"className":2204},"tableto-json-table",[14],[16,2206,1054,2209,918],{"className":2207,"href":2208},[19],"#----tableto-json-table--",[46,2210,2212,2213],{"className":2211},[1069],"table:to-json ",[442,2214,12],{},[33,2216,2217],{},"Reports a string with the contents of the given table as a JSON string.",[913,2219,918,2222,918,2227,2241],{"className":2220,"id":2221},[1049],"values",[77,2223,1054,2225,918],{"id":2224},"tablevalues",[16,2226,1036],{"href":1033},[1058,2228,2231],{"id":2229,"className":2230},"tablevalues-table",[14],[16,2232,1054,2235,918],{"className":2233,"href":2234},[19],"#----tablevalues-table--",[46,2236,2238,2239],{"className":2237},[1069],"table:values ",[442,2240,12],{},[33,2242,2243,2244,2246],{},"Reports a list with the entries of ",[442,2245,12],{},". The entries will appear\nin the same order they were inserted, with duplicates included.",{"title":2248,"searchDepth":2249,"depth":2250,"links":2251},"",5,3,[2252,2259],{"id":25,"depth":2253,"text":31,"children":2254},2,[2255,2256,2257,2258],{"id":79,"depth":2250,"text":85},{"id":97,"depth":2250,"text":103},{"id":309,"depth":2250,"text":315},{"id":811,"depth":2250,"text":817},{"id":897,"depth":2253,"text":903,"children":2260},[2261,2262,2268,2273,2278,2283,2288,2293,2298,2303,2308,2313,2318,2323,2327,2332,2337,2342,2347],{"id":1039,"depth":2250,"text":1045},{"id":1053,"depth":2250,"text":2263,"children":2264},"\n    table:clear\n  ",[2265],{"id":1060,"depth":2266,"text":2267},4,"\n    table:clear table\n  ",{"id":1084,"depth":2250,"text":2269,"children":2270},"\n    table:counts\n  ",[2271],{"id":1089,"depth":2266,"text":2272},"\n    table:counts netlogolist\n  ",{"id":1111,"depth":2250,"text":2274,"children":2275},"\n    table:group-agents\n  ",[2276],{"id":1116,"depth":2266,"text":2277},"\n    table:group-agents agentset reporter\n  ",{"id":1266,"depth":2250,"text":2279,"children":2280},"\n    table:group-items\n  ",[2281],{"id":1271,"depth":2266,"text":2282},"\n    table:group-items netlogolist anonymous-reporter\n  ",{"id":1397,"depth":2250,"text":2284,"children":2285},"\n    table:from-list\n  ",[2286],{"id":1402,"depth":2266,"text":2287},"\n    table:from-list netlogolist\n  ",{"id":1430,"depth":2250,"text":2289,"children":2290},"\n    table:from-json\n  ",[2291],{"id":1435,"depth":2266,"text":2292},"\n    table:from-json netlogostring\n  ",{"id":1694,"depth":2250,"text":2294,"children":2295},"\n    table:from-json-file\n  ",[2296],{"id":1699,"depth":2266,"text":2297},"\n    table:from-json-file filename\n  ",{"id":1919,"depth":2250,"text":2299,"children":2300},"\n    table:get\n  ",[2301],{"id":1924,"depth":2266,"text":2302},"\n    table:get table key\n  ",{"id":1950,"depth":2250,"text":2304,"children":2305},"\n    table:get-or-default\n  ",[2306],{"id":1955,"depth":2266,"text":2307},"\n    table:get-or-default table key default-value\n  ",{"id":1983,"depth":2250,"text":2309,"children":2310},"\n    table:has-key?\n  ",[2311],{"id":1988,"depth":2266,"text":2312},"\n    table:has-key? table key\n  ",{"id":2016,"depth":2250,"text":2314,"children":2315},"\n    table:keys\n  ",[2316],{"id":2021,"depth":2266,"text":2317},"\n    table:keys table\n  ",{"id":2045,"depth":2250,"text":2319,"children":2320},"\n    table:length\n  ",[2321],{"id":2050,"depth":2266,"text":2322},"\n    table:length table\n  ",{"id":2073,"depth":2250,"text":2324,"children":2325},"\n    table:make\n  ",[2326],{"id":2078,"depth":2266,"text":2324},{"id":2096,"depth":2250,"text":2328,"children":2329},"\n    table:put\n  ",[2330],{"id":2101,"depth":2266,"text":2331},"\n    table:put table key value\n  ",{"id":2136,"depth":2250,"text":2333,"children":2334},"\n    table:remove\n  ",[2335],{"id":2141,"depth":2266,"text":2336},"\n    table:remove table key\n  ",{"id":2169,"depth":2250,"text":2338,"children":2339},"\n    table:to-list\n  ",[2340],{"id":2174,"depth":2266,"text":2341},"\n    table:to-list table\n  ",{"id":2198,"depth":2250,"text":2343,"children":2344},"\n    table:to-json\n  ",[2345],{"id":2203,"depth":2266,"text":2346},"\n    table:to-json table\n  ",{"id":2224,"depth":2250,"text":2348,"children":2349},"\n    table:values\n  ",[2350],{"id":2229,"depth":2266,"text":2351},"\n    table:values table\n  ","Documentation for the Table extension.","md",{"source":2355,"metadataOutputPath":2356,"projectConfig":2357,"language":2359,"output":2368,"inheritFrom":2369,"version":2364,"netlogoUrl":2370,"icon":2371,"extensionName":2372,"assetsRoot":2366},"../../external/extensions/table/table.md","content/table.metadata.yaml",{"defaults":2358,"projectRoot":911,"outputRoot":2365,"scanRoot":2366,"engine":2367,"version":2364,"dedupeIdenticalDiskWrites":2368},{"language":2359,"output":2360,"inheritFrom":2361,"extension":2353,"title":2363,"version":2364},"en",false,[2362],0,"NetLogo User Manual","7.0.1","content","/Volumes/CCL/netlogo/Helio/external/extensions/table","mustache",true,[2362],"http://ccl.northwestern.edu/netlogo/docs/","i-lucide-table-properties",{"shortName":12,"fullName":21},"/table",{"title":5,"description":2352},"OL_i63LdfLnRIeRdAn-69mxYhO0wn1zM6_FpieXpr4g",[2377,2382],{"title":2378,"path":2379,"stem":2380,"description":2381},"System Dynamics Modeler","/systemdynamics","systemdynamics","Guide to using NetLogo's System Dynamics Modeler for creating stock and flow models with aggregate modeling approaches.",{"title":2383,"path":2384,"stem":2385,"description":2386},"Table Extension Dictionary: clear","/table/clear","table/clear","Documentation for the clear primitive.",1761669089684]