[{"data":1,"prerenderedAt":292},["ShallowReactive",2],{"/dict/let":3,"/dict/let-surround":281},{"id":4,"title":5,"body":6,"description":252,"extension":253,"meta":254,"navigation":268,"path":277,"seo":278,"stem":279,"__hash__":280},"content/dict/let.md","NetLogo Dictionary: let",{"type":7,"value":8,"toc":241},"minimark",[9],[10,11,15,30,57,60,78,81,139,142],"div",{"className":12,"id":14},[13],"dict_entry","let",[16,17,19],"h3",{"id":18},"let21",[20,21,23,24],"a",{"href":22},"#let","\nlet\n",[25,26,29],"span",{"className":27},[28],"since","\n2.1\n",[31,32,36],"h4",{"id":33,"className":34},"let-variable-value",[35],"section-heading",[20,37,41],{"className":38,"href":40},[39],"section-anchor","#let-variable-value",[25,42,45],{"className":43},[44],"prim_example",[46,47,48,49,53,54],"p",{},"let ",[50,51,52],"em",{},"variable"," ",[50,55,56],{},"value",[46,58,59],{},"Creates a new local variable and gives it the given value. A local\nvariable is one that exists only within the enclosing block of\ncommands.",[46,61,62,63,77],{},"If you want to change the value afterwards, use ",[64,65,68],"code",{"className":66},[67],"netlogo-command",[20,69,72],{"className":70,"dataDisplayText":72,"href":73,"rel":74,"target":76,"title":72},[71],"netlogo-wiki-link","set","/dictionary#set",[75],"noopener","_self",".",[46,79,80],{},"Example:",[82,83,84],"pre",{},[64,85,86,53,91,53,95,53,100,104,107,53,111,53,114,53,118,123,125,126,53,130,133,134,138],{},[25,87,14],{"className":88},[89,90],"token","command",[25,92,94],{"className":93},[89,52],"prey",[25,96,99],{"className":97},[89,98],"reporter","one-of",[25,101,103],{"className":102},[89,52],"sheep-here",[105,106],"br",{},[25,108,110],{"className":109},[89,90],"if",[25,112,94],{"className":113},[89,52],[25,115,117],{"className":116},[89,98],"!=",[25,119,122],{"className":120},[89,121],"constant","nobody",[105,124],{},"  [ ",[25,127,129],{"className":128},[89,90],"ask",[25,131,94],{"className":132},[89,52]," [ ",[25,135,137],{"className":136},[89,90],"die"," ] ]",[46,140,141],{},"You can also create multiple local variables if you put the variable names in a list format. The values for the new variables will be taken from the list given as the second argument. This can be particular useful when you want to calculate multiple values in a reporter procedure, as you can easily create multiple variables with the results. A runtime error will occur if you do not give a list of values or the list you provide doesnâ€™t have enough values for all the variables.",[82,143,144],{},[64,145,146,149,150,53,154,53,158,162,163,53,168,53,172,176,177,179,53,183,53,186,191,193,53,196,53,199,203,205,53,208,53,211,215,217,219,149,222,53,225,53,229,162,233,236,237],{},[25,147,14],{"className":148},[89,90]," [",[25,151,153],{"className":152},[89,52],"x",[25,155,157],{"className":156},[89,52],"y",[25,159,161],{"className":160},[89,52],"z","] [",[25,164,167],{"className":165},[89,166],"number","10",[25,169,171],{"className":170},[89,166],"15",[25,173,175],{"className":174},[89,166],"20","]",[105,178],{},[25,180,182],{"className":181},[89,90],"show",[25,184,153],{"className":185},[89,52],[25,187,190],{"className":188},[89,189],"comment","; prints 10",[105,192],{},[25,194,182],{"className":195},[89,90],[25,197,157],{"className":198},[89,52],[25,200,202],{"className":201},[89,189],"; prints 15",[105,204],{},[25,206,182],{"className":207},[89,90],[25,209,161],{"className":210},[89,52],[25,212,214],{"className":213},[89,189],"; prints 20",[105,216],{},[105,218],{},[25,220,14],{"className":221},[89,90],[25,223,20],{"className":224},[89,52],[25,226,228],{"className":227},[89,52],"b",[25,230,232],{"className":231},[89,52],"c",[25,234,167],{"className":235},[89,166],"] ",[25,238,240],{"className":239},[89,189],"; causes a runtime error as we need at least 3 values in the list",{"title":242,"searchDepth":243,"depth":244,"links":245},"",5,3,[246],{"id":18,"depth":244,"text":247,"children":248},"\nlet\n\n2.1\n",[249],{"id":33,"depth":250,"text":251},4,"let variable value","Documentation for the let primitive.","md",{"source":255,"metadataOutputPath":256,"projectConfig":257,"language":259,"output":268,"inheritFrom":269,"version":264,"layout":270,"dictionaryDisplayName":271,"dictionaryHomeDirectory":272,"indexFileURI":273,"currentItemId":14,"currentItemLabel":14,"primRoot":274,"icon":275,"assetsRoot":276},"autogen/dict/let.md","content/dict/let.metadata.yaml",{"defaults":258,"projectRoot":77,"outputRoot":265,"scanRoot":266,"engine":267,"version":264,"dedupeIdenticalDiskWrites":268},{"language":259,"output":260,"inheritFrom":261,"extension":253,"title":263,"version":264},"en",false,[262],0,"NetLogo User Manual","7.0.1","content","autogen","handlebars",true,[262],"catalog","NetLogo Dictionary","/dictionary.html","/_index/dict.txt","dict","i-lucide-square-code","/Volumes/CCL/netlogo/Helio/apps/docs-nuxt/autogen","/dict/let",{"title":5,"description":252},"dict/let","p97B5PAugTS8E87KYxMZpKwfHpCFHCInc36g814ZEso",[282,287],{"title":283,"path":284,"stem":285,"description":286,"children":-1},"NetLogo Dictionary: length","/dict/length","dict/length","Documentation for the length primitive.",{"title":288,"path":289,"stem":290,"description":291,"children":-1},"NetLogo Dictionary: link","/dict/link","dict/link","Documentation for the link primitive.",1761668942514]