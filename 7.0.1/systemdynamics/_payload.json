[{"data":1,"prerenderedAt":1177},["ShallowReactive",2],{"/systemdynamics":3,"/systemdynamics-surround":1166},{"id":4,"title":5,"body":6,"description":1137,"extension":1138,"meta":1139,"navigation":1153,"path":1162,"seo":1163,"stem":1164,"__hash__":1165},"content/systemdynamics.md","System Dynamics Modeler",{"type":7,"value":8,"toc":1111},"minimark",[9,21,25,57,65,68,71,74,77,87,90,97,103,109,115,122,131,134,144,150,156,163,177,186,189,192,202,213,216,352,361,364,370,376,382,391,402,405,414,426,438,447,450,453,456,479,482,496,510,531,542,551,554,561,564,573,593,596,615,627,658,661,681,684,697,700,721,733,736,758,770,779,795,895,898,911,914,917,926,1078,1081,1099],[10,11,15],"h1",{"id":12,"className":13},"system-dynamics-modeler",[14],"section-heading",[16,17,5],"a",{"className":18,"href":20},[19],"section-anchor","#system-dynamics-modeler",[22,23,24],"p",{},"This guide has three parts:",[26,27,28,39,48],"ul",{},[29,30,31,38],"li",{},[16,32,34],{"href":33},"#what",[35,36,37],"strong",{},"What is the System Dynamics Modeler?",": A general description of\nthe tool, including the ideas and principles behind it.",[29,40,41,47],{},[16,42,44],{"href":43},"#how",[35,45,46],{},"How It Works",": Describes the interface and how you use it.",[29,49,50,56],{},[16,51,53],{"href":52},"#tutorial",[35,54,55],{},"Tutorial: Wolf-Sheep Predation (aggregate)",": Walks you through\ncreating a model with the System Dynamics Modeler.",[58,59,61],"h2",{"id":60},"what-is-the-netlogo-system-dynamics-modeler",[16,62,64],{"id":63,"href":33},"what","What is the NetLogo System Dynamics Modeler?",[22,66,67],{},"System Dynamics is a type of modeling where you try to understand how things\nrelate to one another. It is a little different from the agent-based approach we\nnormally use in NetLogo models.",[22,69,70],{},"With the agent-based approach we usually use in NetLogo, you program the\nbehavior of individual agents and watch what emerges from their interaction. In\na model of Wolf-Sheep Predation, for example, you provide rules for how wolves,\nsheep and grass interact with each other. When you run the simulation, you watch\nthe emergent aggregate-level behavior: for example, how the populations of\nwolves and sheep change over time.",[22,72,73],{},"With the System Dynamics Modeler, you don’t program the behavior of individual\nagents. Instead, you program how populations of agents behave as a whole. For\nexample, using System Dynamics to model Wolf-Sheep Predation, you specify how\nthe total number of sheep would change as the total number of wolves goes up or\ndown, and vice versa. You then run the simulation to see how both populations\nchange over time.",[22,75,76],{},"The System Dynamics Modeler allows you to draw a diagram that defines these\npopulations, or “stocks”, and how they affect each other. The Modeler reads your\ndiagram and generates the appropriate NetLogo code — global variables,\nprocedures and reporters — to run your System Dynamics model inside of NetLogo.",[78,79,82],"h3",{"id":80,"className":81},"basic-concepts",[14],[16,83,86],{"className":84,"href":85},[19],"#basic-concepts","Basic Concepts",[22,88,89],{},"A System Dynamics diagram is made of four kinds of elements: Stocks, Variables,\nFlows and Links.",[22,91,92,93,96],{},"A ",[35,94,95],{},"Stock"," is a collection of stuff, an aggregate. For example, a Stock can\nrepresent a population of sheep, the water in a lake, or the number of widgets\nin a factory.",[22,98,92,99,102],{},[35,100,101],{},"Flow"," brings things into, or out of a Stock. Flows look like pipes with a\nfaucet because the faucet controls how much stuff passes through the pipe.",[22,104,92,105,108],{},[35,106,107],{},"Variable"," is a value used in the diagram. It can be an equation that\ndepends on other Variables, or it can be a constant.",[22,110,92,111,114],{},[35,112,113],{},"Link"," makes a value from one part of the diagram available to another. A\nlink transmits a number from a Variable or a Stock into a Stock or a Flow.",[22,116,117,118,121],{},"The System Dynamics Modeler figures out how the value of your Stocks change over\ntime by estimating them over and over. The estimation isn’t always perfect, but\nyou can affect its accuracy by changing the value of ",[35,119,120],{},"dt",". As dt decreases,\nyou estimate the model more frequently, so it gets more accurate. However,\ndecreasing dt also makes the model slower.",[78,123,126],{"id":124,"className":125},"sample-models",[14],[16,127,130],{"className":128,"href":129},[19],"#sample-models","Sample Models",[22,132,133],{},"There are four basic models in the Sample Models section of the NetLogo Models\nLibrary that demonstrate the use of the System Dynamics Modeler. All four basic\nmodels explore population growth (and, in models with predation, population\ndecline).",[22,135,136,139,140,143],{},[35,137,138],{},"Exponential Growth"," and ",[35,141,142],{},"Logistic Growth"," are simple examples of growth in\none stock.",[22,145,146,149],{},[35,147,148],{},"Wolf Sheep Predation (System Dynamics)"," is an example of a system with\nmultiple stocks influencing one another. It models a predator-prey ecosystem\nusing the System Dynamics Modeler.",[22,151,152,155],{},[35,153,154],{},"Wolf Sheep Predation (Docked Hybrid)"," is an example of a model that runs both\nthe a System Dynamics model and an agent-based model side-by-side. It runs the\nSystem Dynamics implementation of Wolf-Sheep Predation next to the agent-based\nWolf Sheep Predation model from the Biology section of Sample Models.",[58,157,159],{"id":158},"how-it-works",[16,160,162],{"id":161,"href":43},"how","How it Works",[22,164,165,166],{},"To open the System Dynamics Modeler, choose the System Dynamics Modeler item in\nthe Tools menu. The System Dynamics Modeler window will appear. ",[167,168],"img",{"alt":169,"className":170,"src":172,"width":173,"height":174,"style":175},"systemdynamics/window.png",[171],"netlogo-image","/_content/images/systemdynamics/window.png",717,327,{"aspectRatio":176},"717/327",[78,178,181],{"id":179,"className":180},"diagram-tab",[14],[16,182,185],{"className":183,"href":184},[19],"#diagram-tab","Diagram Tab",[22,187,188],{},"The Diagram tab is where you draw your System Dynamics diagram.",[22,190,191],{},"The toolbar contains buttons to edit, delete and create items in your diagram.",[193,194,197],"h4",{"id":195,"className":196},"creating-diagram-elements",[14],[16,198,201],{"className":199,"href":200},[19],"#creating-diagram-elements","Creating Diagram Elements",[22,203,204],{},[167,205],{"alt":206,"className":207,"src":208,"width":209,"height":210,"style":211},"systemdynamics/elementbuttons.png",[171],"/_content/images/systemdynamics/elementbuttons.png",236,55,{"aspectRatio":212},"236/55",[22,214,215],{},"A System Dynamics diagram is made up of four kinds of components: Stocks,\nVariables, Flows and Links.",[217,218,219,223,233,237,246,250,343,347],"dl",{},[120,220,221],{},[22,222,95],{},[224,225,226],"dd",{},[22,227,228,229,232],{},"To create a Stock, press the Stock button in the toolbar and click in the\ndiagram area below. A new Stock appears. Each Stock requires a unique name,\nwhich becomes a global variable. Stocks also require an ",[35,230,231],{},"Initial value",". It\ncan be a number, a variable, a complex NetLogo expression, or a call to a\nNetLogo reporter.",[120,234,235],{},[22,236,107],{},[224,238,239],{},[22,240,241,242,245],{},"To create a Variable, press the Variable button and click on the diagram. Each\nVariable in the System Dynamics Model requires a unique name, which becomes the\nname of a procedure, or a global variable. Variables also require an\n",[35,243,244],{},"Expression",". This expression can be a number, a variable, a complex NetLogo\nexpression, or a call to a NetLogo reporter.",[120,247,248],{},[22,249,101],{},[224,251,252,258,264],{},[22,253,254,255,257],{},"To create a Flow, press the Flow button or use the right mouse button to Click\nand hold where you want the Flow to begin — either on a Stock or in an empty\narea — and drag the mouse to where you want the Flow to end — on a Stock or in\nan empty area. Each Flow requires a unique name, which becomes a NetLogo\nreporter. Flows require an ",[35,256,244],{},", which is the rate of flow from the\ninput to the output. This expression can be a number, a variable, a complex\nNetLogo expression, or a call to a NetLogo reporter. If the value is negative,\nthe flow is in the opposite direction.",[22,259,260,261,263],{},"When more than one Flow is connected to a Stock, it is important to consider how\nthey should interact with one another. NetLogo will not enforce that the Flows\nout of a stock occur in any particular order. Also, NetLogo will not ensure that\nthe sum of Flows out of a Stock are less than or equal to the value of the\nStock. These behaviors can be implemented explicitly when creating the\n",[35,262,244],{}," for a Flow.",[22,265,266,267,281,282,307,308,342],{},"For example, if the Flow is defined as a constant value, 10, you can ensure it\nnever draws more than the value of the Stock by using the ",[268,269,272],"code",{"className":270},[271],"netlogo-command",[16,273,277],{"href":274,"className":275,"dataDisplayText":277,"rel":278,"target":280,"title":277},"/dictionary#min",[276],"netlogo-wiki-link","min",[279],"noopener","_self"," primitive:\n",[268,283,284,290,291,295,296,295,301,306],{},[285,286,277],"span",{"className":287},[288,289],"token","reporter"," (",[285,292,294],{"className":293},[288,289],"list"," ",[285,297,300],{"className":298},[288,299],"variable","stock",[285,302,305],{"className":303},[288,304],"number","10",")",". If I want Flow A to deplete a Stock before Flow B is\ncalculated, I can link Flow A to Flow B and modify Flow B to subtract Flow A’s\nvalue from the stock: ",[268,309,310,290,313,290,316,290,320,295,323,290,327,295,330,295,334,338,339,306],{},[285,311,277],{"className":312},[288,289],[285,314,294],{"className":315},[288,289],[285,317,319],{"className":318},[288,289],"max",[285,321,294],{"className":322},[288,289],[285,324,326],{"className":325},[288,304],"0",[285,328,300],{"className":329},[288,299],[285,331,333],{"className":332},[288,289],"-",[285,335,337],{"className":336},[288,299],"flow-a","))) ",[285,340,305],{"className":341},[288,304],".",[120,344,345],{},[22,346,113],{},[224,348,349],{},[22,350,351],{},"To create a Link, press the Link button, or using the right mouse button, click\nand hold on the starting point for the link — a Variable, Stock or Flow — and\ndrag the mouse to the destination Variable or Flow.",[193,353,356],{"id":354,"className":355},"working-with-diagram-elements",[14],[16,357,360],{"className":358,"href":359},[19],"#working-with-diagram-elements","Working with Diagram Elements",[22,362,363],{},"When you create a Stock, Variable, or Flow, you see a red question-mark on the\nelement. The question-mark indicates that the element doesn’t have a name yet.\nThe red color indicates that the Stock is incomplete: it’s missing one or more\nvalues required to generate a System Dynamics model. When a diagram element is\ncomplete, the name turns black.",[22,365,366,369],{},[35,367,368],{},"Selecting:"," To select a diagram element, click on it. To select multiple\nelements, hold the shift key. You can also select one or more elements by\ndragging a selection box.",[22,371,372,375],{},[35,373,374],{},"Editing:"," To edit a diagram element, select the element and press the “Edit”\nbutton on the toolbar. Or just double-click the element. (You can edit Stocks,\nFlows and Variables, but you can’t edit Links).",[22,377,378,381],{},[35,379,380],{},"Moving:"," To move a diagram element, select it and drag the mouse to a new\nlocation.",[193,383,386],{"id":384,"className":385},"editing-dt",[14],[16,387,390],{"className":388,"href":389},[19],"#editing-dt","Editing dt",[22,392,393],{},[167,394],{"alt":395,"className":396,"src":397,"width":398,"height":399,"style":400},"systemdynamics/dt.png",[171],"/_content/images/systemdynamics/dt.png",111,33,{"aspectRatio":401},"111/33",[22,403,404],{},"On the right side of the toolbar is the default dt, the interval used to\napproximate the results of your System Dynamics model. To change the value of\nthe default dt for your aggregate model, press the Edit button next to the dt\ndisplay and enter a new value.",[193,406,409],{"id":407,"className":408},"errors",[14],[16,410,413],{"className":411,"href":412},[19],"#errors","Errors",[22,415,416,417],{},"When you click the “check” button or when you edit a stock, flow, or variable\nthe modeler will automatically generate the NetLogo code the corresponds to your\ndiagram and try to compile that code. If there is an error the Code tab will\nturn red and a message will appear, and the portion of the generated code that\nis causing the trouble will be highlighted. ",[167,418],{"alt":419,"className":420,"src":421,"width":422,"height":423,"style":424},"systemdynamics/error.png",[171],"/_content/images/systemdynamics/error.png",610,312,{"aspectRatio":425},"610/312",[22,427,428,429],{},"This should give you a better idea which element in the diagram is causing the\nproblem. ",[167,430],{"alt":431,"className":432,"src":433,"width":434,"height":435,"style":436},"systemdynamics/errordialog.png",[171],"/_content/images/systemdynamics/errordialog.png",400,218,{"aspectRatio":437},"400/218",[78,439,442],{"id":440,"className":441},"code-tab",[14],[16,443,446],{"className":444,"href":445},[19],"#code-tab","Code Tab",[22,448,449],{},"The System Dynamics Modeler generates NetLogo variables and procedures based on\nthe contents of your diagram. These procedures are what make the diagram\nactually perform calculations. The Code tab in the System Dynamics Modeler\nwindow displays the NetLogo procedures generated from your diagram.",[22,451,452],{},"You can’t edit the contents of the Code tab. To modify your System Dynamics\nmode, edit the diagram.",[22,454,455],{},"Let’s take a closer look at how the generated code relates to the diagram:",[26,457,458,464,470],{},[29,459,460,461,463],{},"Stocks correspond to a global variable that is initialized to the value or\nexpression you provided in the ",[35,462,231],{}," field. Each Stock will be\nupdated every step based on the Flows in and out.",[29,465,466,467,469],{},"Flows correspond to a procedure that contains the expression you provided in\nthe ",[35,468,244],{}," field.",[29,471,472,473,475,476,478],{},"Variables can either be global variables or procedures. If the ",[35,474,244],{},"\nyou provided is a constant it will be a global variable and initialized to\nthat value. If you used a more complicated ",[35,477,244],{}," to define the\nVariable it will create a procedure like a Flow.",[22,480,481],{},"The variables and procedures defined in this tab are accessible in the main\nNetLogo window, just like the variables and procedures you define yourself in\nthe main NetLogo Code tab. You can call the procedures from the main Code tab,\nfrom the Command Center, or from buttons in the Interface tab. You can refer to\nthe global variables anywhere, including in the main Code tab and in monitors.",[22,483,484,485,488,489,492,493,342],{},"There are three important procedures to notice: ",[268,486,487],{},"system-dynamics-setup",",\n",[268,490,491],{},"system-dynamics-go",", and ",[268,494,495],{},"system-dynamics-do-plot",[22,497,498,502,503,505,506,509],{},[35,499,500],{},[268,501,487],{}," initializes the aggregate model. It sets the value\nof ",[268,504,120],{},", calls ",[268,507,508],{},"reset-ticks",", and initializes your stocks and your converters.\nConverters with a constant value are initialized first, followed by the stocks\nwith constant values. The remaining stocks are initialized in alphabetical\norder.",[22,511,512,516,517,519,520,523,524,526,527,530],{},[35,513,514],{},[268,515,491],{}," runs the aggregate model for ",[268,518,120],{}," time units. It\ncomputes the values of Flows and Variables and updates the value of Stocks. It\nalso calls ",[268,521,522],{},"tick-advance"," with the value of ",[268,525,120],{},". Converters and Flows with\nnon-constant ",[35,528,529],{},"Expressions"," will be calculated only once when this procedure is\ncalled, however, their order of evaluation is undefined",[22,532,533,537,538,541],{},[35,534,535],{},[268,536,495],{}," plots the values of Stocks in the aggregate model.\nTo use this, first create a plot in the main NetLogo window. You then need to\ndefine a plot pen for each Stock you want to be plotted. This procedure will use\nthe current plot, which you can change using the ",[268,539,540],{},"set-current-plot"," command.",[78,543,546],{"id":544,"className":545},"the-system-dynamics-modeler-and-netlogo",[14],[16,547,550],{"className":548,"href":549},[19],"#the-system-dynamics-modeler-and-netlogo","The System Dynamics Modeler and NetLogo",[22,552,553],{},"The diagram you create with the System Dynamics Modeler, and the procedures\ngenerated from your diagram, are part of your NetLogo model. When you a save the\nNetLogo model, your diagram is saved with it, in the same file.",[58,555,557],{"id":556},"tutorial-wolf-sheep-predation",[16,558,560],{"id":559,"href":52},"tutorial","Tutorial: Wolf-Sheep Predation",[22,562,563],{},"Let’s create a model of Wolf-Sheep Predation with the System Dynamics Modeler.",[78,565,568],{"id":566,"className":567},"step-1-sheep-reproduction",[14],[16,569,572],{"className":570,"href":571},[19],"#step-1-sheep-reproduction","Step 1: Sheep Reproduction",[574,575,576],"blockquote",{},[26,577,578,581],{},[29,579,580],{},"Open a new model in NetLogo.",[29,582,583,584],{},"Launch the System Dynamics Modeler in the Tools menu. ",[167,585],{"alt":586,"className":587,"src":588,"width":589,"height":590,"style":591},"systemdynamics/tutorial1.png",[171],"/_content/images/systemdynamics/tutorial1.png",285,563,{"aspectRatio":592},"285/563",[22,594,595],{},"Our model will have a population of wolves and a population of sheep. Let’s\nstart with the sheep. First, create a Stock that holds a population of Sheep.",[574,597,598],{},[26,599,600,612],{},[29,601,602,603],{},"Press the Stock button in the toolbar. ",[167,604],{"alt":605,"className":606,"src":607,"width":608,"height":609,"style":610},"systemdynamics/tutorial2-0.png",[171],"/_content/images/systemdynamics/tutorial2-0.png",238,61,{"aspectRatio":611},"238/61",[29,613,614],{},"Click in the diagram area.",[22,616,617,618],{},"You see a Stock with a red question-mark in the middle. ",[167,619],{"alt":620,"className":621,"src":622,"width":623,"height":624,"style":625},"systemdynamics/tutorial2-1.png",[171],"/_content/images/systemdynamics/tutorial2-1.png",720,453,{"aspectRatio":626},"720/453",[574,628,629],{},[26,630,631,634,640,646],{},[29,632,633],{},"Double-click the Stock to edit.",[29,635,636,637],{},"Name the stock ",[268,638,639],{},"sheep",[29,641,642,643,342],{},"Set the initial value to ",[268,644,645],{},"100",[29,647,648,649],{},"Deselect the Allow Negative Values checkbox. It doesn’t make sense to have\nnegative sheep! ",[167,650],{"alt":651,"className":652,"src":653,"width":654,"height":655,"style":656},"systemdynamics/tutorial2-2.png",[171],"/_content/images/systemdynamics/tutorial2-2.png",403,230,{"aspectRatio":657},"403/230",[22,659,660],{},"Our sheep population can increase if new sheep are born. To add this to our\ndiagram, we create a Flow into the stock of sheep.",[574,662,663],{},[26,664,665,668,674],{},[29,666,667],{},"Click on the Flow button in the toolbar and press the mouse button in an\nempty area to the left of the sheep Stock. Drag the Flow to the right until\nit connects to the sheep Stock and let go.",[29,669,670,671,342],{},"Edit the Flow and name it ",[268,672,673],{},"sheep-births",[29,675,676,677,680],{},"For now, enter a constant, such as ",[268,678,679],{},"1",", into the Expression field.",[22,682,683],{},"The number of sheep born during a period of time depends on the number of sheep\nthat are alive: more sheep means more reproduction.",[574,685,686],{},[26,687,688],{},[29,689,690,691,693,694,696],{},"Draw a Link from the ",[268,692,639],{}," Stock to the ",[268,695,673],{}," Flow.",[22,698,699],{},"The rate of sheep births also depends on some constant factors that are beyond\nthe scope of this model: the rate of reproduction, etc.",[574,701,702],{},[26,703,704,714],{},[29,705,706,707,710,711,342],{},"Create a Variable and name it ",[268,708,709],{},"sheep-birth-rate",". Set its value to ",[268,712,713],{},"0.04",[29,715,690,716,718,719,342],{},[268,717,709],{}," Variable to the ",[268,720,673],{},[22,722,723,724],{},"Your diagram should look something like this: ",[167,725],{"alt":726,"className":727,"src":728,"width":729,"height":730,"style":731},"systemdynamics/tutorial5.png",[171],"/_content/images/systemdynamics/tutorial5.png",344,168,{"aspectRatio":732},"344/168",[22,734,735],{},"Our diagram has the correct structure but we aren’t yet finished because it the\namount of sheep flowing into the stock doesn’t depend upon the number of sheep\nand sheep birth rate.",[574,737,738],{},[26,739,740],{},[29,741,742,743,745,746,342],{},"Edit the ",[268,744,673],{}," Flow and set the expression to\n",[268,747,748,295,751,295,755],{},[285,749,709],{"className":750},[288,299],[285,752,754],{"className":753},[288,289],"*",[285,756,639],{"className":757},[288,299],[22,759,760,761],{},"We now have a complete diagram. To see the NetLogo code generated by our\ndiagram, you can click on the Code tab of the System Dynamics Modeler window. It\nlooks like this: ",[167,762],{"alt":763,"className":764,"src":765,"width":766,"height":767,"style":768},"systemdynamics/tutorial8.png",[171],"/_content/images/systemdynamics/tutorial8.png",806,474,{"aspectRatio":769},"806/474",[78,771,774],{"id":772,"className":773},"step-2-netlogo-integration",[14],[16,775,778],{"className":776,"href":777},[19],"#step-2-netlogo-integration","Step 2: NetLogo Integration",[22,780,781,782,785,786,789,790,139,792,794],{},"Once you create an aggregate model with the System Dynamics Modeler, you can\ninteract with the model through the main NetLogo interface window. Let’s build\nour NetLogo model to run the code generated by our diagram. We’ll need a ",[268,783,784],{},"setup","\nand ",[268,787,788],{},"go"," buttons which call the ",[268,791,487],{},[268,793,491],{},"\nprocedures created by the System Dynamics Modeler. And we’ll want a monitor and\na plot to watch the changes in sheep population.",[574,796,797],{},[26,798,799,802,873,876,882,887,892],{},[29,800,801],{},"Select the main NetLogo window",[29,803,804,805],{},"In the Code tab, write:",[806,807,808],"pre",{},[268,809,295,810,295,815,818,821,822,827,821,829,832,295,834,838,840,295,842,295,845,848,821,850,853,821,855,295,858,863,821,865,868,295,870],{},[285,811,814],{"className":812},[288,813],"keyword"," to",[285,816,784],{"className":817},[288,299],[819,820],"br",{},"    ",[285,823,826],{"className":824},[288,825],"command","ca",[819,828],{},[285,830,487],{"className":831},[288,299],[819,833],{},[285,835,837],{"className":836},[288,813]," end",[819,839],{},[819,841],{},[285,843,814],{"className":844},[288,813],[285,846,788],{"className":847},[288,299],[819,849],{},[285,851,491],{"className":852},[288,299],[819,854],{},[285,856,540],{"className":857},[288,825],[285,859,862],{"className":860},[288,861],"string","\"populations\"",[819,864],{},[285,866,495],{"className":867},[288,299],[819,869],{},[285,871,837],{"className":872},[288,813],[29,874,875],{},"Move to the Interface tab",[29,877,878,879,881],{},"Create a ",[268,880,784],{}," button",[29,883,878,884,886],{},[268,885,788],{}," button (don’t forget to make it forever)",[29,888,878,889,891],{},[268,890,639],{}," monitor.",[29,893,894],{},"Create a plot called “populations” with a pen named “sheep”.",[22,896,897],{},"Now we’re ready to run our model.",[574,899,900],{},[26,901,902,905],{},[29,903,904],{},"Press the setup button.",[29,906,907,908,910],{},"Don’t press the “go” button yet. Instead, type ",[268,909,788],{}," four or five times into\nthe Command Center.",[22,912,913],{},"Notice what happens. The sheep population increases exponentially. After four or\nfive iterations, we have an enormous number of sheep. That’s because we have\nsheep reproduction, but our sheep never die.",[22,915,916],{},"To fix that, let’s finish our diagram by introducing a population of wolves\nwhich eat sheep.",[78,918,921],{"id":919,"className":920},"step-3-wolf-predation",[14],[16,922,925],{"className":923,"href":924},[19],"#step-3-wolf-predation","Step 3: Wolf Predation",[574,927,928],{},[26,929,930,933,936,948,955,1056],{},[29,931,932],{},"Move back to the System Dynamics window",[29,934,935],{},"Add a stock of wolves",[29,937,938,939],{},"Add Flows, Variables and Links to make your diagram look like this:\n",[167,940],{"alt":941,"className":942,"src":943,"width":944,"height":945,"style":946},"systemdynamics/tutorial9.png",[171],"/_content/images/systemdynamics/tutorial9.png",505,351,{"aspectRatio":947},"505/351",[29,949,950,951,954],{},"Add one more Flow from the ",[268,952,953],{},"wolves"," Stock to the Flow that goes out of the\nSheep stock.",[29,956,957,958,967,969,970,972,973,976,977,980,981,976,993,972,995,488,998,972,1001,976,1004,980,1007,976,1031,980,1033,492,1036,972,1039,342],{},"Fill in the names of the diagram elements so it looks like this:\n",[167,959],{"alt":960,"className":961,"src":962,"width":963,"height":964,"style":965},"systemdynamics/tutorial10.png",[171],"/_content/images/systemdynamics/tutorial10.png",492,355,{"aspectRatio":966},"492/355",[819,968],{},"where initial-value of ",[268,971,953],{}," is ",[268,974,975],{},"30",", ",[268,978,979],{},"wolf-deaths"," is\n",[268,982,983,295,986,295,989],{},[285,984,953],{"className":985},[288,299],[285,987,754],{"className":988},[288,289],[285,990,992],{"className":991},[288,299],"wolf-death-rate",[268,994,992],{},[268,996,997],{},"0.15",[268,999,1000],{},"predator-efficiency",[268,1002,1003],{},".8",[268,1005,1006],{},"wolf-births",[268,1008,1009,295,1012,295,1015,295,1018,295,1021,295,1025,295,1028],{},[285,1010,953],{"className":1011},[288,299],[285,1013,754],{"className":1014},[288,289],[285,1016,1000],{"className":1017},[288,299],[285,1019,754],{"className":1020},[288,289],[285,1022,1024],{"className":1023},[288,299],"predation-rate",[285,1026,754],{"className":1027},[288,289],[285,1029,639],{"className":1030},[288,299],[268,1032,1024],{},[268,1034,1035],{},"3.0E-4",[268,1037,1038],{},"sheep-deaths",[268,1040,1041,295,1044,295,1047,295,1050,295,1053],{},[285,1042,639],{"className":1043},[288,299],[285,1045,754],{"className":1046},[288,289],[285,1048,1024],{"className":1049},[288,299],[285,1051,754],{"className":1052},[288,289],[285,1054,953],{"className":1055},[288,299],[29,1057,1058,1059,1061,1062,1064,1065,342,1068,1070,1071],{},"Adjust the ",[268,1060,120],{}," of the system dynamics model by selecting “Edit” next to\n",[268,1063,120],{}," in the toolbar of the system dynamics modeler. In the dialog that\nappears, enter ",[268,1066,1067],{},"0.01",[819,1069],{},"\n  ",[167,1072],{"alt":1073,"style":1074,"src":1075,"width":1076,"height":1077},"screen shot","height: auto; width: auto; max-width: 40%; max-height: 40%; aspect-ratio: 1002/634;","/_content/images/systemdynamics/setdtexample.png",1002,634,[22,1079,1080],{},"Now we’re really done.",[574,1082,1083],{},[26,1084,1085,1088,1091],{},[29,1086,1087],{},"Go back to the main NetLogo window",[29,1089,1090],{},"Add a plot pen named “wolves” to the population plot",[29,1092,1093,1094,139,1096,1098],{},"Press ",[268,1095,784],{},[268,1097,788],{}," to see your System Dynamics Modeler diagram in\naction.",[22,1100,1101,1102],{},"You see a plot of the populations that looks like this: ",[167,1103],{"alt":1104,"className":1105,"src":1106,"width":1107,"height":1108,"style":1109},"systemdynamics/tutorial11.png",[171],"/_content/images/systemdynamics/tutorial11.png",688,462,{"aspectRatio":1110},"688/462",{"title":1112,"searchDepth":1113,"depth":1114,"links":1115},"",5,3,[1116,1121,1132],{"id":60,"depth":1117,"text":64,"children":1118},2,[1119,1120],{"id":80,"depth":1114,"text":86},{"id":124,"depth":1114,"text":130},{"id":158,"depth":1117,"text":162,"children":1122},[1123,1130,1131],{"id":179,"depth":1114,"text":185,"children":1124},[1125,1127,1128,1129],{"id":195,"depth":1126,"text":201},4,{"id":354,"depth":1126,"text":360},{"id":384,"depth":1126,"text":390},{"id":407,"depth":1126,"text":413},{"id":440,"depth":1114,"text":446},{"id":544,"depth":1114,"text":550},{"id":556,"depth":1117,"text":560,"children":1133},[1134,1135,1136],{"id":566,"depth":1114,"text":572},{"id":772,"depth":1114,"text":778},{"id":919,"depth":1114,"text":925},"Guide to using NetLogo's System Dynamics Modeler for creating stock and flow models with aggregate modeling approaches.","md",{"source":1140,"metadataOutputPath":1141,"projectConfig":1142,"language":1144,"output":1153,"inheritFrom":1154,"version":1149,"keywords":1155,"tags":1160,"assetsRoot":1161},"autogen/systemdynamics.md","content/systemdynamics.metadata.yaml",{"defaults":1143,"projectRoot":342,"outputRoot":1150,"scanRoot":1151,"engine":1152,"version":1149,"dedupeIdenticalDiskWrites":1153},{"language":1144,"output":1145,"inheritFrom":1146,"extension":1138,"title":1148,"version":1149},"en",false,[1147],0,"NetLogo User Manual","7.0.1","content","autogen","handlebars",true,[1147],[1156,1157,1158,1159],"System Dynamics","Stock and Flow","Modeling","NetLogo",[1156,1157,1158],"/Volumes/CCL/netlogo/Helio/apps/docs-nuxt/autogen","/systemdynamics",{"title":5,"description":1137},"systemdynamics","FXQnQuE0m2ZZFMiDHBV47bOi7tvARXTqEsA7_MYgGdA",[1167,1172],{"title":1168,"path":1169,"stem":1170,"description":1171},"Simple R Extension Dictionary: show-console","/sr/show-console","sr/show-console","Documentation for the show-console primitive.",{"title":1173,"path":1174,"stem":1175,"description":1176},"Table Extension","/table","table","Documentation for the Table extension.",1761669088752]