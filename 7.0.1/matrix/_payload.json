[{"data":1,"prerenderedAt":4752},["ShallowReactive",2],{"/matrix":3,"/matrix-surround":4741},{"id":4,"title":5,"body":6,"description":4718,"extension":4719,"meta":4720,"navigation":4734,"path":4738,"seo":4739,"stem":12,"__hash__":4740},"content/matrix.md","Matrix Extension",{"type":7,"value":8,"toc":4489},"minimark",[9,22,32,36,46,49,52,61,64,67,86,95,104,113,663,672,680,689,729,738,858,867,922,931,1014,1023,1061,1088,1184,1215,1241,1267,1598,1624,1662,1693,1723,1767,1810,1849,1889,1927,1999,2031,2190,2285,2328,2364,2410,2438,2479,2514,2559,2600,2634,2663,2691,2719,2747,2776,2804,2833,2862,3011,3204,3428,3631],[10,11,15],"h1",{"id":12,"className":13},"matrix",[14],"section-heading",[16,17,21],"a",{"className":18,"href":20},[19],"section-anchor","#matrix","Matrix",[23,24,27],"h2",{"id":25,"className":26},"using",[14],[16,28,31],{"className":29,"href":30},[19],"#using","Using",[33,34,35],"p",{},"The matrix extension adds a new matrix data structure to NetLogo.\nA matrix is a mutable 2-dimensional array containing only numbers.",[37,38,41],"h3",{"id":39,"className":40},"when-to-use",[14],[16,42,45],{"className":43,"href":44},[19],"#when-to-use","When to Use",[33,47,48],{},"Although matrices store numbers, much like a list of lists, or an\narray of arrays, the primary reason to use the matrix data type is to\ntake advantage of special mathematical operations associated with\nmatrices. For instance, matrix multiplication is a convenient way to\nperform geometric transformations, and the repeated application of\nmatrix multiplication can also be used to simulate other dynamic\nprocesses (for instance, processes on graph/network structures).",[33,50,51],{},"If you’d like to know more about matrices and how they can be\nused, you might consider a course on linear algebra, or search the\nweb for tutorials. The matrix extension also allows you to solve\nlinear algebraic equations (specified in a matrix format), and even\nto identify trends in your data and perform linear (ordinary least\nsquares) regressions on data sets with multiple explanatory\nvariables.",[37,53,56],{"id":54,"className":55},"how-to-use",[14],[16,57,60],{"className":58,"href":59},[19],"#how-to-use","How to Use",[33,62,63],{},"The matrix extension comes preinstalled.",[33,65,66],{},"To use the matrix extension in your model, add a line to the top of your Code tab:",[68,69,70],"pre",{},[71,72,73,80,81,85],"code",{},[74,75,79],"span",{"className":76},[77,78],"token","keyword","extensions"," [",[74,82,12],{"className":83},[77,84],"variable","]",[33,87,88,89,91,92,94],{},"If your model already uses other extensions, then it already has an\n",[71,90,79],{}," line in it, so just add ",[71,93,12],{}," to the list.",[37,96,99],{"id":97,"className":98},"example",[14],[16,100,103],{"className":101,"href":102},[19],"#example","Example",[33,105,106,110],{},[107,108],"binding",{"value":109},"! escape mustache tags",[107,111],{"value":112},"={",[68,114,115],{},[71,116,117,122,123,122,127,131,132,122,137,122,141,145,146,122,150,122,154,158,159,162,122,166,169,171,122,175,179,180,122,183,122,186,189,190,122,193,122,196,199,200,204,206,122,209,122,213,216,218,221,223,224,227,228,227,231,234,235,237,238,227,241,227,244,247,248,250,252,122,255,122,259,262,264,80,267,122,270,85,273,275,280,282,122,285,122,289,122,292,122,295,122,298,302,304,122,307,310,312,122,316,122,319,122,322,122,325,122,329,333,335,122,338,341,343,122,346,179,349,122,352,122,355,189,358,122,361,122,364,199,367,370,372,374,122,377,122,381,122,385,388,390,122,393,396,398,122,401,179,404,122,407,122,411,189,414,122,417,122,420,189,423,122,426,122,429,199,432,435,437,122,440,122,444,122,447,122,450,454,456,122,459,179,462,122,465,122,468,189,471,122,474,122,477,199,480,483,485,487,491,493,122,496,500,501,122,505,122,508,122,511,122,514,518,519,521,122,524,527,529,122,532,179,535,122,538,122,541,189,544,122,547,122,550,189,553,122,556,122,559,199,562,565,567,122,570,122,573,122,576,579,581,122,584,179,587,122,590,122,594,189,597,122,600,122,604,199,607,610,612,614,122,617,500,621,122,625,122,628,518,631,633,131,636,122,639,122,642,145,645,122,648,122,651,145,654,122,657,122,660,158],{},[74,118,121],{"className":119},[77,120],"command","let"," ",[74,124,126],{"className":125},[77,84],"m",[74,128,130],{"className":129},[77,84],"matrix:from-row-list"," [[",[74,133,136],{"className":134},[77,135],"number","1",[74,138,140],{"className":139},[77,135],"2",[74,142,144],{"className":143},[77,135],"3","] [",[74,147,149],{"className":148},[77,135],"4",[74,151,153],{"className":152},[77,135],"5",[74,155,157],{"className":156},[77,135],"6","]]",[160,161],"br",{},[74,163,165],{"className":164},[77,120],"print",[74,167,126],{"className":168},[77,84],[160,170],{},[74,172,174],{"className":173},[77,84],"=>",[74,176,178],{"className":177},[77,84],"{{matrix:","  [ [ ",[74,181,136],{"className":182},[77,135],[74,184,140],{"className":185},[77,135],[74,187,144],{"className":188},[77,135]," ][ ",[74,191,149],{"className":192},[77,135],[74,194,153],{"className":195},[77,135],[74,197,157],{"className":198},[77,135]," ] ]",[74,201,203],{"className":202},[77,84],"}}",[160,205],{},[74,207,165],{"className":208},[77,120],[74,210,212],{"className":211},[77,84],"matrix:pretty-print-text",[74,214,126],{"className":215},[77,84],[160,217],{},[74,219,174],{"className":220},[77,84],[160,222],{},"[[ ",[74,225,136],{"className":226},[77,135],"  ",[74,229,140],{"className":230},[77,135],[74,232,144],{"className":233},[77,135]," ]",[160,236],{}," [ ",[74,239,149],{"className":240},[77,135],[74,242,153],{"className":243},[77,135],[74,245,157],{"className":246},[77,135]," ]]",[160,249],{},[160,251],{},[74,253,165],{"className":254},[77,120],[74,256,258],{"className":257},[77,84],"matrix:dimensions",[74,260,126],{"className":261},[77,84],[160,263],{},[74,265,174],{"className":266},[77,84],[74,268,140],{"className":269},[77,135],[74,271,144],{"className":272},[77,135],[160,274],{},[74,276,279],{"className":277},[77,278],"comment",";;(NOTE: row & column indexing starts at 0, not 1)",[160,281],{},[74,283,165],{"className":284},[77,120],[74,286,288],{"className":287},[77,84],"matrix:get",[74,290,126],{"className":291},[77,84],[74,293,136],{"className":294},[77,135],[74,296,140],{"className":297},[77,135],[74,299,301],{"className":300},[77,278],";; what number is in row 1, column 2?",[160,303],{},[74,305,174],{"className":306},[77,84],[74,308,157],{"className":309},[77,135],[160,311],{},[74,313,315],{"className":314},[77,84],"matrix:set",[74,317,126],{"className":318},[77,84],[74,320,136],{"className":321},[77,135],[74,323,140],{"className":324},[77,135],[74,326,328],{"className":327},[77,135],"10",[74,330,332],{"className":331},[77,278],";; change the 6 to a 10",[160,334],{},[74,336,165],{"className":337},[77,120],[74,339,126],{"className":340},[77,84],[160,342],{},[74,344,174],{"className":345},[77,84],[74,347,178],{"className":348},[77,84],[74,350,136],{"className":351},[77,135],[74,353,140],{"className":354},[77,135],[74,356,144],{"className":357},[77,135],[74,359,149],{"className":360},[77,135],[74,362,153],{"className":363},[77,135],[74,365,328],{"className":366},[77,135],[74,368,203],{"className":369},[77,84],[160,371],{},[160,373],{},[74,375,121],{"className":376},[77,120],[74,378,380],{"className":379},[77,84],"m2",[74,382,384],{"className":383},[77,84],"matrix:make-identity",[74,386,144],{"className":387},[77,135],[160,389],{},[74,391,165],{"className":392},[77,120],[74,394,380],{"className":395},[77,84],[160,397],{},[74,399,174],{"className":400},[77,84],[74,402,178],{"className":403},[77,84],[74,405,136],{"className":406},[77,135],[74,408,410],{"className":409},[77,135],"0",[74,412,410],{"className":413},[77,135],[74,415,410],{"className":416},[77,135],[74,418,136],{"className":419},[77,135],[74,421,410],{"className":422},[77,135],[74,424,410],{"className":425},[77,135],[74,427,410],{"className":428},[77,135],[74,430,136],{"className":431},[77,135],[74,433,203],{"className":434},[77,84],[160,436],{},[74,438,165],{"className":439},[77,120],[74,441,443],{"className":442},[77,84],"matrix:times",[74,445,126],{"className":446},[77,84],[74,448,380],{"className":449},[77,84],[74,451,453],{"className":452},[77,278],";; multiplying by the identity changes nothing",[160,455],{},[74,457,174],{"className":458},[77,84],[74,460,178],{"className":461},[77,84],[74,463,136],{"className":464},[77,135],[74,466,140],{"className":467},[77,135],[74,469,144],{"className":470},[77,135],[74,472,149],{"className":473},[77,135],[74,475,153],{"className":476},[77,135],[74,478,328],{"className":479},[77,135],[74,481,203],{"className":482},[77,84],[160,484],{},[160,486],{},[74,488,490],{"className":489},[77,278],";; make a new matrix with the middle 1 changed to -1",[160,492],{},[74,494,121],{"className":495},[77,120],[74,497,499],{"className":498},[77,84],"m3"," (",[74,502,504],{"className":503},[77,84],"matrix:set-and-report",[74,506,380],{"className":507},[77,84],[74,509,136],{"className":510},[77,135],[74,512,136],{"className":513},[77,135],[74,515,517],{"className":516},[77,135],"-1",")",[160,520],{},[74,522,165],{"className":523},[77,120],[74,525,499],{"className":526},[77,84],[160,528],{},[74,530,174],{"className":531},[77,84],[74,533,178],{"className":534},[77,84],[74,536,136],{"className":537},[77,135],[74,539,410],{"className":540},[77,135],[74,542,410],{"className":543},[77,135],[74,545,410],{"className":546},[77,135],[74,548,517],{"className":549},[77,135],[74,551,410],{"className":552},[77,135],[74,554,410],{"className":555},[77,135],[74,557,410],{"className":558},[77,135],[74,560,136],{"className":561},[77,135],[74,563,203],{"className":564},[77,84],[160,566],{},[74,568,165],{"className":569},[77,120],[74,571,443],{"className":572},[77,84],[74,574,126],{"className":575},[77,84],[74,577,499],{"className":578},[77,84],[160,580],{},[74,582,174],{"className":583},[77,84],[74,585,178],{"className":586},[77,84],[74,588,136],{"className":589},[77,135],[74,591,593],{"className":592},[77,135],"-2",[74,595,144],{"className":596},[77,135],[74,598,149],{"className":599},[77,135],[74,601,603],{"className":602},[77,135],"-5",[74,605,328],{"className":606},[77,135],[74,608,203],{"className":609},[77,84],[160,611],{},[160,613],{},[74,615,165],{"className":616},[77,120],[74,618,620],{"className":619},[77,84],"matrix:to-row-list",[74,622,624],{"className":623},[77,84],"matrix:plus",[74,626,380],{"className":627},[77,84],[74,629,499],{"className":630},[77,84],[160,632],{},[74,634,174],{"className":635},[77,84],[74,637,140],{"className":638},[77,135],[74,640,410],{"className":641},[77,135],[74,643,410],{"className":644},[77,135],[74,646,410],{"className":647},[77,135],[74,649,410],{"className":650},[77,135],[74,652,410],{"className":653},[77,135],[74,655,410],{"className":656},[77,135],[74,658,410],{"className":659},[77,135],[74,661,140],{"className":662},[77,135],[23,664,667],{"id":665,"className":666},"primitives",[14],[16,668,671],{"className":669,"href":670},[19],"#primitives","Primitives",[33,673,674,675,679],{},"Looking for the primitive reference for the Matrix extension? You can find ",[16,676,678],{"href":677},"/matrix/dictionary","the full reference here",".",[37,681,684],{"id":682,"className":683},"advanced-features",[14],[16,685,688],{"className":686,"href":687},[19],"#advanced-features","Advanced features",[690,691,693,694,693,701,693,708,693,715,693,722],"div",{"id":692},"advanced","\n  ",[16,695,698],{"className":696,"href":697},[71],"#solve",[71,699,700],{},"matrix:solve",[16,702,705],{"className":703,"href":704},[71],"#forecast-linear-growth",[71,706,707],{},"matrix:forecast-linear-growth",[16,709,712],{"className":710,"href":711},[71],"#forecast-compound-growth",[71,713,714],{},"matrix:forecast-compound-growth",[16,716,719],{"className":717,"href":718},[71],"#forecast-continuous-growth",[71,720,721],{},"matrix:forecast-continuous-growth",[16,723,726],{"className":724,"href":725},[71],"#regress",[71,727,728],{},"matrix:regress",[37,730,733],{"id":731,"className":732},"math-operations",[14],[16,734,737],{"className":735,"href":736},[19],"#math-operations","Math operations",[690,739,693,741,693,748,693,754,693,761,693,768,693,775,693,781,693,788,693,795,693,802,693,809,693,816,693,823,693,830,693,837,693,844,693,851],{"id":740},"math",[16,742,745],{"className":743,"href":744},[71],"#times-scalar",[71,746,747],{},"matrix:times-scalar",[16,749,752],{"className":750,"href":751},[71],"#times",[71,753,443],{},[16,755,758],{"className":756,"href":757},[71],"#-asterisk-",[71,759,760],{},"matrix:*",[16,762,765],{"className":763,"href":764},[71],"#times-element-wise",[71,766,767],{},"matrix:times-element-wise",[16,769,772],{"className":770,"href":771},[71],"#plus-scalar",[71,773,774],{},"matrix:plus-scalar",[16,776,779],{"className":777,"href":778},[71],"#plus",[71,780,624],{},[16,782,785],{"className":783,"href":784},[71],"#-plus-",[71,786,787],{},"matrix:+",[16,789,792],{"className":790,"href":791},[71],"#minus",[71,793,794],{},"matrix:minus",[16,796,799],{"className":797,"href":798},[71],"#-",[71,800,801],{},"matrix:-",[16,803,806],{"className":804,"href":805},[71],"#inverse",[71,807,808],{},"matrix:inverse",[16,810,813],{"className":811,"href":812},[71],"#transpose",[71,814,815],{},"matrix:transpose",[16,817,820],{"className":818,"href":819},[71],"#real-eigenvalues",[71,821,822],{},"matrix:real-eigenvalues",[16,824,827],{"className":825,"href":826},[71],"#imaginary-eigenvalues",[71,828,829],{},"matrix:imaginary-eigenvalues",[16,831,834],{"className":832,"href":833},[71],"#eigenvectors",[71,835,836],{},"matrix:eigenvectors",[16,838,841],{"className":839,"href":840},[71],"#det",[71,842,843],{},"matrix:det",[16,845,848],{"className":846,"href":847},[71],"#rank",[71,849,850],{},"matrix:rank",[16,852,855],{"className":853,"href":854},[71],"#trace",[71,856,857],{},"matrix:trace",[37,859,862],{"id":860,"className":861},"matrix-creation-and-conversion-tofrom-lists",[14],[16,863,866],{"className":864,"href":865},[19],"#matrix-creation-and-conversion-tofrom-lists","Matrix creation and conversion to/from lists",[690,868,693,870,693,877,693,883,693,889,693,896,693,902,693,909,693,916],{"id":869},"matrix creation",[16,871,874],{"className":872,"href":873},[71],"#make-constant",[71,875,876],{},"matrix:make-constant",[16,878,881],{"className":879,"href":880},[71],"#make-identity",[71,882,384],{},[16,884,887],{"className":885,"href":886},[71],"#from-row-list",[71,888,130],{},[16,890,893],{"className":891,"href":892},[71],"#from-column-list",[71,894,895],{},"matrix:from-column-list",[16,897,900],{"className":898,"href":899},[71],"#to-row-list",[71,901,620],{},[16,903,906],{"className":904,"href":905},[71],"#to-column-list",[71,907,908],{},"matrix:to-column-list",[16,910,913],{"className":911,"href":912},[71],"#copy",[71,914,915],{},"matrix:copy",[16,917,920],{"className":918,"href":919},[71],"#pretty-print-text",[71,921,212],{},[37,923,926],{"id":924,"className":925},"matrix-data-retrieval-and-manipulation",[14],[16,927,930],{"className":928,"href":929},[19],"#matrix-data-retrieval-and-manipulation","Matrix data retrieval and manipulation",[690,932,693,934,693,940,693,947,693,954,693,960,693,967,693,974,693,981,693,988,693,994,693,1000,693,1007],{"id":933},"retrieval/manipulation",[16,935,938],{"className":936,"href":937},[71],"#get",[71,939,288],{},[16,941,944],{"className":942,"href":943},[71],"#get-row",[71,945,946],{},"matrix:get-row",[16,948,951],{"className":949,"href":950},[71],"#get-column",[71,952,953],{},"matrix:get-column",[16,955,958],{"className":956,"href":957},[71],"#set",[71,959,315],{},[16,961,964],{"className":962,"href":963},[71],"#set-row",[71,965,966],{},"matrix:set-row",[16,968,971],{"className":969,"href":970},[71],"#set-column",[71,972,973],{},"matrix:set-column",[16,975,978],{"className":976,"href":977},[71],"#swap-rows",[71,979,980],{},"matrix:swap-rows",[16,982,985],{"className":983,"href":984},[71],"#swap-columns",[71,986,987],{},"matrix:swap-columns",[16,989,992],{"className":990,"href":991},[71],"#set-and-report",[71,993,504],{},[16,995,998],{"className":996,"href":997},[71],"#dimensions",[71,999,258],{},[16,1001,1004],{"className":1002,"href":1003},[71],"#submatrix",[71,1005,1006],{},"matrix:submatrix",[16,1008,1011],{"className":1009,"href":1010},[71],"#map",[71,1012,1013],{},"matrix:map",[37,1015,1018],{"id":1016,"className":1017},"all-primitives",[14],[16,1019,1022],{"className":1020,"href":1021},[19],"#all-primitives","All Primitives",[690,1024,693,1028,693,1034,1058],{"className":1025,"id":1027},[1026],"dict_entry","make-constant",[37,1029,1031,1032,693],{"id":1030},"matrixmake-constant","\n    ",[16,1033,876],{"href":873},[1035,1036,1039],"h4",{"id":1037,"className":1038},"matrixmake-constant-n-rows-n-cols-initial-value",[14],[16,1040,1031,1043,693],{"className":1041,"href":1042},[19],"#----matrixmake-constant-n-rows-n-cols-initial-value--",[74,1044,1047,1048,122,1052,122,1055],{"className":1045},[1046],"prim_example","matrix:make-constant ",[1049,1050,1051],"i",{},"n-rows",[1049,1053,1054],{},"n-cols",[1049,1056,1057],{},"initial-value",[33,1059,1060],{},"Reports a new n-rows by n-cols matrix object, with all entries in the matrix containing the same value (number).",[690,1062,693,1065,693,1070,1085],{"className":1063,"id":1064},[1026],"make-identity",[37,1066,1031,1068,693],{"id":1067},"matrixmake-identity",[16,1069,384],{"href":880},[1035,1071,1074],{"id":1072,"className":1073},"matrixmake-identity-size",[14],[16,1075,1031,1078,693],{"className":1076,"href":1077},[19],"#----matrixmake-identity-size--",[74,1079,1081,1082],{"className":1080},[1046],"matrix:make-identity ",[1049,1083,1084],{},"size",[33,1086,1087],{},"Reports a new square matrix object (with dimensions n-size x\nn-size), consisting of the identity matrix (1s along the main\ndiagonal, 0s elsewhere).",[690,1089,693,1092,693,1097,1112,1121],{"className":1090,"id":1091},[1026],"from-row-list",[37,1093,1031,1095,693],{"id":1094},"matrixfrom-row-list",[16,1096,130],{"href":886},[1035,1098,1101],{"id":1099,"className":1100},"matrixfrom-row-list-nested-list",[14],[16,1102,1031,1105,693],{"className":1103,"href":1104},[19],"#----matrixfrom-row-list-nested-list--",[74,1106,1108,1109],{"className":1107},[1046],"matrix:from-row-list ",[1049,1110,1111],{},"nested-list",[33,1113,1114,1115,1118],{},"Reports a new matrix object, created from a NetLogo list, where\neach item in that list is another list (corresponding to each of\nthe rows of the matrix.)\n",[107,1116],{"value":1117},"! prevent interpretation of extension objects as staches",[107,1119],{"value":1120},"=",[68,1122,1123],{},[71,1124,1125,122,1128,131,1131,122,1134,145,1137,122,1140,158,1143,1145,122,1148,179,1151,122,1154,189,1157,122,1160,199,1163,1166,1168,1172,1174,1178,1180],{},[74,1126,165],{"className":1127},[77,120],[74,1129,130],{"className":1130},[77,84],[74,1132,136],{"className":1133},[77,135],[74,1135,140],{"className":1136},[77,135],[74,1138,144],{"className":1139},[77,135],[74,1141,149],{"className":1142},[77,135],[160,1144],{},[74,1146,174],{"className":1147},[77,84],[74,1149,178],{"className":1150},[77,84],[74,1152,136],{"className":1153},[77,135],[74,1155,140],{"className":1156},[77,135],[74,1158,144],{"className":1159},[77,135],[74,1161,149],{"className":1162},[77,135],[74,1164,203],{"className":1165},[77,84],[160,1167],{},[74,1169,1171],{"className":1170},[77,278],";; Corresponds to this matrix:",[160,1173],{},[74,1175,1177],{"className":1176},[77,278],";; 1 2",[160,1179],{},[74,1181,1183],{"className":1182},[77,278],";; 3 4",[690,1185,693,1188,693,1193,1207],{"className":1186,"id":1187},[1026],"from-column-list",[37,1189,1031,1191,693],{"id":1190},"matrixfrom-column-list",[16,1192,895],{"href":892},[1035,1194,1197],{"id":1195,"className":1196},"matrixfrom-column-list-nested-list",[14],[16,1198,1031,1201,693],{"className":1199,"href":1200},[19],"#----matrixfrom-column-list-nested-list--",[74,1202,1204,1205],{"className":1203},[1046],"matrix:from-column-list ",[1049,1206,1111],{},[33,1208,1209,1210,1214],{},"Reports a new matrix object, created from a NetLogo list containing\neach of the ",[1211,1212,1213],"em",{},"columns"," of the matrix.",[690,1216,693,1219,693,1224,1238],{"className":1217,"id":1218},[1026],"to-row-list",[37,1220,1031,1222,693],{"id":1221},"matrixto-row-list",[16,1223,620],{"href":899},[1035,1225,1228],{"id":1226,"className":1227},"matrixto-row-list-matrix",[14],[16,1229,1031,1232,693],{"className":1230,"href":1231},[19],"#----matrixto-row-list-matrix--",[74,1233,1235,1236],{"className":1234},[1046],"matrix:to-row-list ",[1049,1237,12],{},[33,1239,1240],{},"Reports a list of lists, containing each row of the matrix.",[690,1242,693,1245,693,1250,1264],{"className":1243,"id":1244},[1026],"to-column-list",[37,1246,1031,1248,693],{"id":1247},"matrixto-column-list",[16,1249,908],{"href":905},[1035,1251,1254],{"id":1252,"className":1253},"matrixto-column-list-matrix",[14],[16,1255,1031,1258,693],{"className":1256,"href":1257},[19],"#----matrixto-column-list-matrix--",[74,1259,1261,1262],{"className":1260},[1046],"matrix:to-column-list ",[1049,1263,12],{},[33,1265,1266],{},"Reports a list of lists, containing each column of the matrix.",[690,1268,693,1271,693,1276,1290,1297],{"className":1269,"id":1270},[1026],"copy",[37,1272,1031,1274,693],{"id":1273},"matrixcopy",[16,1275,915],{"href":912},[1035,1277,1280],{"id":1278,"className":1279},"matrixcopy-matrix",[14],[16,1281,1031,1284,693],{"className":1282,"href":1283},[19],"#----matrixcopy-matrix--",[74,1285,1287,1288],{"className":1286},[1046],"matrix:copy ",[1049,1289,12],{},[33,1291,1292,1293,1295],{},"Reports a new matrix that is an exact copy of the given matrix.\nThis primitive is important because the matrix type is mutable\n(changeable). Here’s a code example:\n",[107,1294],{"value":1117},[107,1296],{"value":1120},[68,1298,1299],{},[71,1300,1301,122,1304,122,1308,131,1311,122,1314,122,1317,1321,1322,122,1325,122,1328,1321,1332,122,1335,122,1338,1342,1343,1347,1349,122,1352,1355,1357,122,1360,179,1363,122,1366,122,1369,189,1372,122,1375,122,1378,189,1381,122,1384,122,1387,199,1390,1393,1395,122,1398,122,1401,122,1404,1408,1410,122,1413,122,1416,122,1419,122,1422,1426,1428,122,1431,122,1434,122,1437,122,1440,122,1444,1448,1450,1452,122,1455,1458,1460,122,1463,179,1466,122,1469,122,1472,189,1475,122,1478,122,1481,189,1484,122,1487,122,1490,199,1493,1496,1498,1500,122,1503,1506,1508,122,1511,179,1514,122,1517,122,1520,189,1523,122,1526,122,1529,189,1532,122,1535,122,1538,199,1541,1544,1546,1550,1552,1554,122,1557,1560,1562,122,1565,179,1568,122,1571,122,1574,189,1577,122,1580,122,1583,189,1586,122,1589,122,1592,199,1595],{},[74,1302,121],{"className":1303},[77,120],[74,1305,1307],{"className":1306},[77,84],"m1",[74,1309,895],{"className":1310},[77,84],[74,1312,136],{"className":1313},[77,135],[74,1315,149],{"className":1316},[77,135],[74,1318,1320],{"className":1319},[77,135],"7","][",[74,1323,140],{"className":1324},[77,135],[74,1326,153],{"className":1327},[77,135],[74,1329,1331],{"className":1330},[77,135],"8",[74,1333,144],{"className":1334},[77,135],[74,1336,157],{"className":1337},[77,135],[74,1339,1341],{"className":1340},[77,135],"9","]] ",[74,1344,1346],{"className":1345},[77,278],"; a 3x3 matrix",[160,1348],{},[74,1350,165],{"className":1351},[77,120],[74,1353,1307],{"className":1354},[77,84],[160,1356],{},[74,1358,174],{"className":1359},[77,84],[74,1361,178],{"className":1362},[77,84],[74,1364,136],{"className":1365},[77,135],[74,1367,140],{"className":1368},[77,135],[74,1370,144],{"className":1371},[77,135],[74,1373,149],{"className":1374},[77,135],[74,1376,153],{"className":1377},[77,135],[74,1379,157],{"className":1380},[77,135],[74,1382,1320],{"className":1383},[77,135],[74,1385,1331],{"className":1386},[77,135],[74,1388,1341],{"className":1389},[77,135],[74,1391,203],{"className":1392},[77,84],[160,1394],{},[74,1396,121],{"className":1397},[77,120],[74,1399,380],{"className":1400},[77,84],[74,1402,1307],{"className":1403},[77,84],[74,1405,1407],{"className":1406},[77,278],";; m2 refers to the same matrix object as m1",[160,1409],{},[74,1411,121],{"className":1412},[77,120],[74,1414,499],{"className":1415},[77,84],[74,1417,915],{"className":1418},[77,84],[74,1420,1307],{"className":1421},[77,84],[74,1423,1425],{"className":1424},[77,278],";; m3 is a new copy containing m1's data",[160,1427],{},[74,1429,315],{"className":1430},[77,84],[74,1432,1307],{"className":1433},[77,84],[74,1435,410],{"className":1436},[77,135],[74,1438,410],{"className":1439},[77,135],[74,1441,1443],{"className":1442},[77,135],"100",[74,1445,1447],{"className":1446},[77,278],";; now m1 is changed",[160,1449],{},[160,1451],{},[74,1453,165],{"className":1454},[77,120],[74,1456,1307],{"className":1457},[77,84],[160,1459],{},[74,1461,174],{"className":1462},[77,84],[74,1464,178],{"className":1465},[77,84],[74,1467,1443],{"className":1468},[77,135],[74,1470,140],{"className":1471},[77,135],[74,1473,144],{"className":1474},[77,135],[74,1476,149],{"className":1477},[77,135],[74,1479,153],{"className":1480},[77,135],[74,1482,157],{"className":1483},[77,135],[74,1485,1320],{"className":1486},[77,135],[74,1488,1331],{"className":1489},[77,135],[74,1491,1341],{"className":1492},[77,135],[74,1494,203],{"className":1495},[77,84],[160,1497],{},[160,1499],{},[74,1501,165],{"className":1502},[77,120],[74,1504,380],{"className":1505},[77,84],[160,1507],{},[74,1509,174],{"className":1510},[77,84],[74,1512,178],{"className":1513},[77,84],[74,1515,1443],{"className":1516},[77,135],[74,1518,140],{"className":1519},[77,135],[74,1521,144],{"className":1522},[77,135],[74,1524,149],{"className":1525},[77,135],[74,1527,153],{"className":1528},[77,135],[74,1530,157],{"className":1531},[77,135],[74,1533,1320],{"className":1534},[77,135],[74,1536,1331],{"className":1537},[77,135],[74,1539,1341],{"className":1540},[77,135],[74,1542,203],{"className":1543},[77,84],[160,1545],{},[74,1547,1549],{"className":1548},[77,278],";;Notice that m2 was also changed, when m1 was changed!",[160,1551],{},[160,1553],{},[74,1555,165],{"className":1556},[77,120],[74,1558,499],{"className":1559},[77,84],[160,1561],{},[74,1563,174],{"className":1564},[77,84],[74,1566,178],{"className":1567},[77,84],[74,1569,136],{"className":1570},[77,135],[74,1572,140],{"className":1573},[77,135],[74,1575,144],{"className":1576},[77,135],[74,1578,149],{"className":1579},[77,135],[74,1581,153],{"className":1582},[77,135],[74,1584,157],{"className":1585},[77,135],[74,1587,1320],{"className":1588},[77,135],[74,1590,1331],{"className":1591},[77,135],[74,1593,1341],{"className":1594},[77,135],[74,1596,203],{"className":1597},[77,84],[690,1599,693,1602,693,1607,1621],{"className":1600,"id":1601},[1026],"pretty-print-text",[37,1603,1031,1605,693],{"id":1604},"matrixpretty-print-text",[16,1606,212],{"href":919},[1035,1608,1611],{"id":1609,"className":1610},"matrixpretty-print-text-matrix",[14],[16,1612,1031,1615,693],{"className":1613,"href":1614},[19],"#----matrixpretty-print-text-matrix--",[74,1616,1618,1619],{"className":1617},[1046],"matrix:pretty-print-text ",[1049,1620,12],{},[33,1622,1623],{},"Reports a string that is a textual representation of the matrix, in a format that is reasonably human-readable when displayed.",[690,1625,693,1628,693,1633,1653],{"className":1626,"id":1627},[1026],"get",[37,1629,1031,1631,693],{"id":1630},"matrixget",[16,1632,288],{"href":937},[1035,1634,1637],{"id":1635,"className":1636},"matrixget-matrix-row-i-col-j",[14],[16,1638,1031,1641,693],{"className":1639,"href":1640},[19],"#----matrixget-matrix-row-i-col-j--",[74,1642,1644,1645,122,1647,122,1650],{"className":1643},[1046],"matrix:get ",[1049,1646,12],{},[1049,1648,1649],{},"row-i",[1049,1651,1652],{},"col-j",[33,1654,1655,1656,1658,1659,1661],{},"Reports the (numeric) value at location ",[1211,1657,1649],{}," (second argument), ",[1211,1660,1652],{}," (third argument), in the given matrix given in the first argument",[690,1663,693,1666,693,1671,1687],{"className":1664,"id":1665},[1026],"get-row",[37,1667,1031,1669,693],{"id":1668},"matrixget-row",[16,1670,946],{"href":943},[1035,1672,1675],{"id":1673,"className":1674},"matrixget-row-matrix-row-i",[14],[16,1676,1031,1679,693],{"className":1677,"href":1678},[19],"#----matrixget-row-matrix-row-i--",[74,1680,1682,1683,122,1685],{"className":1681},[1046],"matrix:get-row ",[1049,1684,12],{},[1049,1686,1649],{},[33,1688,1689,1690,1692],{},"Reports a simple (not nested) NetLogo list containing the elements of ",[1211,1691,1649],{}," (second argument) of the matrix supplied in the first argument.",[690,1694,693,1697,693,1702,1718],{"className":1695,"id":1696},[1026],"get-column",[37,1698,1031,1700,693],{"id":1699},"matrixget-column",[16,1701,953],{"href":950},[1035,1703,1706],{"id":1704,"className":1705},"matrixget-column-matrix-col-j",[14],[16,1707,1031,1710,693],{"className":1708,"href":1709},[19],"#----matrixget-column-matrix-col-j--",[74,1711,1713,1714,122,1716],{"className":1712},[1046],"matrix:get-column ",[1049,1715,12],{},[1049,1717,1652],{},[33,1719,1689,1720,1722],{},[1211,1721,1652],{}," of the matrix supplied in the first argument.",[690,1724,693,1727,693,1732,1753],{"className":1725,"id":1726},[1026],"set",[37,1728,1031,1730,693],{"id":1729},"matrixset",[16,1731,315],{"href":957},[1035,1733,1736],{"id":1734,"className":1735},"matrixset-matrix-row-i-col-j-new-value",[14],[16,1737,1031,1740,693],{"className":1738,"href":1739},[19],"#----matrixset-matrix-row-i-col-j-new-value--",[74,1741,1743,1744,122,1746,122,1748,122,1750],{"className":1742},[1046],"matrix:set ",[1049,1745,12],{},[1049,1747,1649],{},[1049,1749,1652],{},[1049,1751,1752],{},"new-value",[33,1754,1755,1756,1758,1759,1761,1762,1764,1765],{},"Changes the given ",[1211,1757,12],{}," by setting the value at location ",[1211,1760,1649],{},", ",[1211,1763,1652],{}," to ",[1211,1766,1752],{},[690,1768,693,1771,693,1776,1795],{"className":1769,"id":1770},[1026],"set-row",[37,1772,1031,1774,693],{"id":1773},"matrixset-row",[16,1775,966],{"href":963},[1035,1777,1780],{"id":1778,"className":1779},"matrixset-row-matrix-row-i-simple-list",[14],[16,1781,1031,1784,693],{"className":1782,"href":1783},[19],"#----matrixset-row-matrix-row-i-simple-list--",[74,1785,1787,1788,122,1790,122,1792],{"className":1786},[1046],"matrix:set-row ",[1049,1789,12],{},[1049,1791,1649],{},[1049,1793,1794],{},"simple-list",[33,1796,1797,1798,1800,1801,1803,1804,1806,1807,1809],{},"Changes the given matrix ",[1211,1799,12],{}," by replacing the row at\n",[1211,1802,1649],{}," with the contents of the simple (not nested) NetLogo\nlist ",[1211,1805,1794],{},". The ",[1211,1808,1794],{}," must have a length\nequal to the number of columns in the matrix, i.e., the matrix row\nlength.",[690,1811,693,1814,693,1819,1837],{"className":1812,"id":1813},[1026],"set-column",[37,1815,1031,1817,693],{"id":1816},"matrixset-column",[16,1818,973],{"href":970},[1035,1820,1823],{"id":1821,"className":1822},"matrixset-column-matrix-col-j-simple-list",[14],[16,1824,1031,1827,693],{"className":1825,"href":1826},[19],"#----matrixset-column-matrix-col-j-simple-list--",[74,1828,1830,1831,122,1833,122,1835],{"className":1829},[1046],"matrix:set-column ",[1049,1832,12],{},[1049,1834,1652],{},[1049,1836,1794],{},[33,1838,1797,1839,1841,1842,1803,1844,1806,1846,1848],{},[1211,1840,12],{}," by replacing the column at\n",[1211,1843,1652],{},[1211,1845,1794],{},[1211,1847,1794],{}," must have a length\nequal to the number of rows in the matrix, i.e., the matrix\ncolumn length length.",[690,1850,693,1853,693,1858,1878],{"className":1851,"id":1852},[1026],"swap-rows",[37,1854,1031,1856,693],{"id":1855},"matrixswap-rows",[16,1857,980],{"href":977},[1035,1859,1862],{"id":1860,"className":1861},"matrixswap-rows-matrix-row1-row2",[14],[16,1863,1031,1866,693],{"className":1864,"href":1865},[19],"#----matrixswap-rows-matrix-row1-row2--",[74,1867,1869,1870,122,1872,122,1875],{"className":1868},[1046],"matrix:swap-rows ",[1049,1871,12],{},[1049,1873,1874],{},"row1",[1049,1876,1877],{},"row2",[33,1879,1797,1880,1882,1883,1885,1886,1888],{},[1211,1881,12],{}," by swapping the rows at ",[1211,1884,1874],{}," and ",[1211,1887,1877],{}," with each other.",[690,1890,693,1893,693,1898,1918],{"className":1891,"id":1892},[1026],"swap-columns",[37,1894,1031,1896,693],{"id":1895},"matrixswap-columns",[16,1897,987],{"href":984},[1035,1899,1902],{"id":1900,"className":1901},"matrixswap-columns-matrix-col1-col2",[14],[16,1903,1031,1906,693],{"className":1904,"href":1905},[19],"#----matrixswap-columns-matrix-col1-col2--",[74,1907,1909,1910,122,1912,122,1915],{"className":1908},[1046],"matrix:swap-columns ",[1049,1911,12],{},[1049,1913,1914],{},"col1",[1049,1916,1917],{},"col2",[33,1919,1797,1920,1922,1923,1885,1925,1888],{},[1211,1921,12],{}," by swapping the columns at ",[1211,1924,1914],{},[1211,1926,1917],{},[690,1928,693,1931,693,1936,1956],{"className":1929,"id":1930},[1026],"set-and-report",[37,1932,1031,1934,693],{"id":1933},"matrixset-and-report",[16,1935,504],{"href":991},[1035,1937,1940],{"id":1938,"className":1939},"matrixset-and-report-matrix-row-i-col-j-new-value",[14],[16,1941,1031,1944,693],{"className":1942,"href":1943},[19],"#----matrixset-and-report-matrix-row-i-col-j-new-value--",[74,1945,1947,1948,122,1950,122,1952,122,1954],{"className":1946},[1046],"matrix:set-and-report ",[1049,1949,12],{},[1049,1951,1649],{},[1049,1953,1652],{},[1049,1955,1752],{},[33,1957,1958,1959,1961,1962,1964,1965,1967,1968,1992,1993,1995,1996,1998],{},"Reports a new matrix, which is a copy of the given matrix except\nthat the value at ",[1211,1960,1649],{},",",[1211,1963,1652],{}," has been changed to\n",[1211,1966,1752],{},". A NetLogo statement such as\n",[71,1969,1970,122,1973,122,1977,122,1980,122,1983,122,1986,122,1989],{},[74,1971,1726],{"className":1972},[77,120],[74,1974,1976],{"className":1975},[77,84],"mat",[74,1978,504],{"className":1979},[77,84],[74,1981,1976],{"className":1982},[77,84],[74,1984,140],{"className":1985},[77,135],[74,1987,144],{"className":1988},[77,135],[74,1990,328],{"className":1991},[77,135]," will result in ",[71,1994,1976],{}," pointing\nto this new matrix, a copy of the old version of mat with the\nelement at row 2, column 3 being set to 10. The old version of ",[71,1997,1976],{},"\nwill be “lost”.",[690,2000,693,2003,693,2008,2022],{"className":2001,"id":2002},[1026],"dimensions",[37,2004,1031,2006,693],{"id":2005},"matrixdimensions",[16,2007,258],{"href":997},[1035,2009,2012],{"id":2010,"className":2011},"matrixdimensions-matrix",[14],[16,2013,1031,2016,693],{"className":2014,"href":2015},[19],"#----matrixdimensions-matrix--",[74,2017,2019,2020],{"className":2018},[1046],"matrix:dimensions ",[1049,2021,12],{},[33,2023,2024,2025,2028,2029],{},"Reports a 2-element list (",[74,2026,2027],{},"num-rows,num-cols","), containing the number of rows and number of columns in the given ",[1211,2030,12],{},[690,2032,693,2035,693,2040,2066,2080,2087],{"className":2033,"id":2034},[1026],"submatrix",[37,2036,1031,2038,693],{"id":2037},"matrixsubmatrix",[16,2039,1006],{"href":1003},[1035,2041,2044],{"id":2042,"className":2043},"matrixsubmatrix-matrix-r1-c1-r2-c2",[14],[16,2045,1031,2048,693],{"className":2046,"href":2047},[19],"#----matrixsubmatrix-matrix-r1-c1-r2-c2--",[74,2049,2051,2052,122,2054,122,2057,122,2060,122,2063],{"className":2050},[1046],"matrix:submatrix ",[1049,2053,12],{},[1049,2055,2056],{},"r1",[1049,2058,2059],{},"c1",[1049,2061,2062],{},"r2",[1049,2064,2065],{},"c2",[33,2067,2068,2069,2071,2072,2074,2075,2077,2078,679],{},"Reports a new matrix object, consisting of a rectangular subsection of the given matrix.\nThe rectangular region is from row ",[1211,2070,2056],{}," up to (but not including) row ",[1211,2073,2062],{},",\nand from column ",[1211,2076,2059],{}," up to (but not including) column ",[1211,2079,2065],{},[33,2081,2082,2083,2085],{},"Here is an example:\n",[107,2084],{"value":1117},[107,2086],{"value":1120},[68,2088,2089],{},[71,2090,2091,122,2094,122,2097,131,2100,122,2103,122,2106,1321,2109,122,2112,122,2115,1321,2118,122,2121,122,2124,158,2127,2129,122,2132,122,2135,122,2138,122,2141,122,2144,122,2147,122,2150,2154,2156,2157,2161,2156,2163,2167,2169,122,2172,179,2175,122,2178,189,2181,122,2184,199,2187],{},[74,2092,121],{"className":2093},[77,120],[74,2095,126],{"className":2096},[77,84],[74,2098,130],{"className":2099},[77,84],[74,2101,136],{"className":2102},[77,135],[74,2104,140],{"className":2105},[77,135],[74,2107,144],{"className":2108},[77,135],[74,2110,149],{"className":2111},[77,135],[74,2113,153],{"className":2114},[77,135],[74,2116,157],{"className":2117},[77,135],[74,2119,1320],{"className":2120},[77,135],[74,2122,1331],{"className":2123},[77,135],[74,2125,1341],{"className":2126},[77,135],[160,2128],{},[74,2130,165],{"className":2131},[77,120],[74,2133,1006],{"className":2134},[77,84],[74,2136,126],{"className":2137},[77,84],[74,2139,410],{"className":2140},[77,135],[74,2142,136],{"className":2143},[77,135],[74,2145,140],{"className":2146},[77,135],[74,2148,144],{"className":2149},[77,135],[74,2151,2153],{"className":2152},[77,278],"; matrix, row-start, col-start, row-end, col-end",[160,2155],{},"                                 ",[74,2158,2160],{"className":2159},[77,278],"; rows from 0 (inclusive) to 2 (exclusive),",[160,2162],{},[74,2164,2166],{"className":2165},[77,278],"; columns from 1 (inclusive) to 3 (exclusive)",[160,2168],{},[74,2170,174],{"className":2171},[77,84],[74,2173,178],{"className":2174},[77,84],[74,2176,140],{"className":2177},[77,135],[74,2179,144],{"className":2180},[77,135],[74,2182,153],{"className":2183},[77,135],[74,2185,157],{"className":2186},[77,135],[74,2188,203],{"className":2189},[77,84],[690,2191,693,2194,693,2199,2226,2232,2246,2252,2272,2279],{"className":2192,"id":2193},[1026],"map",[37,2195,1031,2197,693],{"id":2196},"matrixmap",[16,2198,1013],{"href":1010},[1035,2200,2203],{"id":2201,"className":2202},"matrixmap-reporter-matrix-matrixmap-reporter-matrix-matrices",[14],[16,2204,1031,2207,1031,2216,693],{"className":2205,"href":2206},[19],"#----matrixmap-reporter-matrix----matrixmap-reporter-matrix-matrices---",[74,2208,2210,2211,122,2214],{"className":2209},[1046],"matrix:map ",[1049,2212,2213],{},"reporter",[1049,2215,12],{},[74,2217,2210,2219,122,2221,122,2223],{"className":2218},[1046],[1049,2220,2213],{},[1049,2222,12],{},[1049,2224,2225],{},"matrices ...",[33,2227,2228,2229,2231],{},"Reports a new matrix which results from applying ",[1049,2230,2213],{},"\n(an anonymous reporter or the name of a reporter)\nto each of the elements of the given matrix. For example,",[68,2233,2234],{},[71,2235,2236,122,2239,122,2243],{},[74,2237,1013],{"className":2238},[77,84],[74,2240,2242],{"className":2241},[77,2213],"sqrt",[74,2244,12],{"className":2245},[77,84],[33,2247,2248,2249,2251],{},"would take the square root of each\nelement of ",[1211,2250,12],{},". If more than one matrix argument is provided,\nthe reporter is given the elements of each matrix as arguments. Thus,",[68,2253,2254],{},[71,2255,2256,2257,122,2260,122,2264,122,2268,518],{},"(",[74,2258,1013],{"className":2259},[77,84],[74,2261,2263],{"className":2262},[77,2213],"+",[74,2265,2267],{"className":2266},[77,84],"matrix1",[74,2269,2271],{"className":2270},[77,84],"matrix2",[33,2273,2274,2275,1885,2277,679],{},"would add ",[1211,2276,2267],{},[1211,2278,2271],{},[33,2280,2281,2282,2284],{},"This reporter is meant to be the same as ",[71,2283,2193],{},", but for matrices\ninstead of lists.",[690,2286,693,2289,693,2294,2311,2320],{"className":2287,"id":2288},[1026],"times-scalar",[37,2290,1031,2292,693],{"id":2291},"matrixtimes-scalar",[16,2293,747],{"href":744},[1035,2295,2298],{"id":2296,"className":2297},"matrixtimes-scalar-matrix-factor",[14],[16,2299,1031,2302,693],{"className":2300,"href":2301},[19],"#----matrixtimes-scalar-matrix-factor--",[74,2303,2305,2306,122,2308],{"className":2304},[1046],"matrix:times-scalar ",[1049,2307,12],{},[1049,2309,2310],{},"factor",[33,2312,2313,2314,2316,2317,2319],{},"As of NetLogo 5.1, ",[71,2315,443],{}," can multiply matrices by scalars\nmaking this function obsolete. Use ",[71,2318,443],{}," instead.",[33,2321,2322,2323,2325,2326,679],{},"Reports a new matrix, which is the result of multiplying every\nentry in the original ",[1211,2324,12],{}," by the given scaling ",[1211,2327,2310],{},[690,2329,693,2332,693,2337,2361],{"className":2330,"id":2331},[1026],"times",[37,2333,1031,2335,693],{"id":2334},"matrixtimes",[16,2336,443],{"href":751},[1035,2338,2341],{"id":2339,"className":2340},"matrixtimes-m1-m2-matrixtimes-m1-m2",[14],[16,2342,1031,2345,1031,2353,693],{"className":2343,"href":2344},[19],"#----matrixtimes-m1-m2----matrixtimes-m1-m2---",[74,2346,2348,2349,122,2351],{"className":2347},[1046],"matrix:times ",[1049,2350,1307],{},[1049,2352,380],{},[74,2354,2348,2356,122,2358],{"className":2355},[1046],[1049,2357,1307],{},[1049,2359,2360],{},"m2 ...",[33,2362,2363],{},"Reports a matrix, which is the result of multiplying the given matrices and scalars\n(using standard matrix multiplication — make sure your matrix dimensions match up.)\nWithout parentheses, it takes two arguments. With parentheses it takes\ntwo or more. The arguments may either be numbers or matrices, but at\nleast one must be a matrix.",[690,2365,693,2368,693,2372,2388,2402],{"className":2366,"id":2367},[1026],"-asterisk-",[37,2369,1031,2370,693],{"id":12},[16,2371,760],{"href":757},[1035,2373,2376],{"id":2374,"className":2375},"m1-matrix-m2",[14],[16,2377,1031,2380,693],{"className":2378,"href":2379},[19],"#----m1-matrix-m2--",[74,2381,2383,2385,2386],{"className":2382},[1046],[1049,2384,1307],{}," matrix:* ",[1049,2387,380],{},[33,2389,2390,2391],{},"Reports a matrix, which is the result of multiplying the given matrices\nand/or scalars (using standard matrix multiplication — make sure your matrix\ndimensions match up.) This is exactly the same as ",[71,2392,2393,122,2396,122,2399],{},[74,2394,443],{"className":2395},[77,84],[74,2397,1307],{"className":2398},[77,84],[74,2400,380],{"className":2401},[77,84],[33,2403,2404,2405,1885,2407,2409],{},"Takes precedence over ",[71,2406,787],{},[71,2408,801],{},", same as normal multiplication.",[690,2411,693,2414,693,2419,2435],{"className":2412,"id":2413},[1026],"times-element-wise",[37,2415,1031,2417,693],{"id":2416},"matrixtimes-element-wise",[16,2418,767],{"href":764},[1035,2420,2423],{"id":2421,"className":2422},"matrixtimes-element-wise-m1-m2",[14],[16,2424,1031,2427,693],{"className":2425,"href":2426},[19],"#----matrixtimes-element-wise-m1-m2--",[74,2428,2430,2431,122,2433],{"className":2429},[1046],"matrix:times-element-wise ",[1049,2432,1307],{},[1049,2434,380],{},[33,2436,2437],{},"Reports a matrix, which is the result of multiplying the given matrices\ntogether, element-wise. All elements are multiplied by scalar arguments\nas well.\nNote that all matrix arguments must have the same dimensions.\nWithout parentheses, it takes two arguments. With parentheses it takes\ntwo or more. The arguments may either be numbers or matrices, but at\nleast one must be a matrix.",[690,2439,693,2442,693,2447,2464,2471],{"className":2440,"id":2441},[1026],"plus-scalar",[37,2443,1031,2445,693],{"id":2444},"matrixplus-scalar",[16,2446,774],{"href":771},[1035,2448,2451],{"id":2449,"className":2450},"matrixplus-scalar-matrix-netlogonumber",[14],[16,2452,1031,2455,693],{"className":2453,"href":2454},[19],"#----matrixplus-scalar-matrix-netlogonumber--",[74,2456,2458,2459,122,2461],{"className":2457},[1046],"matrix:plus-scalar ",[1049,2460,12],{},[1049,2462,2463],{},"netlogonumber",[33,2465,2313,2466,2468,2469,2319],{},[71,2467,624],{}," can add matrices and scalars\nmaking this function obsolete. Use ",[71,2470,624],{},[33,2472,2473,2474,2476,2477,679],{},"Reports a matrix, which is the result of adding the constant\n",[1211,2475,135],{}," to each element of the given ",[1211,2478,12],{},[690,2480,693,2483,693,2488,2511],{"className":2481,"id":2482},[1026],"plus",[37,2484,1031,2486,693],{"id":2485},"matrixplus",[16,2487,624],{"href":778},[1035,2489,2492],{"id":2490,"className":2491},"matrixplus-m1-m2-matrixplus-m1-m2",[14],[16,2493,1031,2496,1031,2504,693],{"className":2494,"href":2495},[19],"#----matrixplus-m1-m2----matrixplus-m1-m2---",[74,2497,2499,2500,122,2502],{"className":2498},[1046],"matrix:plus ",[1049,2501,1307],{},[1049,2503,380],{},[74,2505,2499,2507,122,2509],{"className":2506},[1046],[1049,2508,1307],{},[1049,2510,2360],{},[33,2512,2513],{},"Reports a matrix, which is the result of adding the given matrices\nand scalars. Scalars are added to each element.\nWithout parentheses, it takes two arguments. With parentheses it takes\ntwo or more. The arguments may either be numbers or matrices, but at\nleast one must be a matrix.",[690,2515,693,2518,693,2523,2539,2553],{"className":2516,"id":2517},[1026],"-plus-",[37,2519,1031,2521,693],{"id":2520},"matrix-1",[16,2522,787],{"href":784},[1035,2524,2527],{"id":2525,"className":2526},"m1-matrix-m2-1",[14],[16,2528,1031,2531,693],{"className":2529,"href":2530},[19],"#----m1-matrix-m2---1",[74,2532,2534,2536,2537],{"className":2533},[1046],[1049,2535,1307],{}," matrix:+ ",[1049,2538,380],{},[33,2540,2541,2542],{},"Reports a matrix, which is the result of adding the given matrices\nand/or scalars. This is exactly the same as ",[71,2543,2544,122,2547,122,2550],{},[74,2545,624],{"className":2546},[77,84],[74,2548,1307],{"className":2549},[77,84],[74,2551,380],{"className":2552},[77,84],[33,2554,2555,2556,2558],{},"Takes precedence after ",[71,2557,760],{},", same as normal addition.",[690,2560,693,2563,693,2568,2591],{"className":2561,"id":2562},[1026],"minus",[37,2564,1031,2566,693],{"id":2565},"matrixminus",[16,2567,794],{"href":791},[1035,2569,2572],{"id":2570,"className":2571},"matrixminus-m1-m2-matrixminus-m1-m2",[14],[16,2573,1031,2576,1031,2584,693],{"className":2574,"href":2575},[19],"#----matrixminus-m1-m2----matrixminus-m1-m2---",[74,2577,2579,2580,122,2582],{"className":2578},[1046],"matrix:minus ",[1049,2581,1307],{},[1049,2583,380],{},[74,2585,2579,2587,122,2589],{"className":2586},[1046],[1049,2588,1307],{},[1049,2590,2360],{},[33,2592,2593,2594,2596,2597,2599],{},"Reports a matrix, which is the result of subtracting all arguments\nbesides ",[1211,2595,1307],{}," from ",[1211,2598,1307],{},". Scalar arguments are treated as\nmatrices of the same size as the matrix arguments with every element\nequal to that scalar.\nWithout parentheses, it takes two arguments. With parentheses it takes\ntwo or more. The arguments may either be numbers or matrices, but at\nleast one must be a matrix.",[690,2601,693,2604,693,2608,2623,2626,2629],{"className":2602,"id":2603},[1026],"-",[37,2605,1031,2606,693],{"id":12},[16,2607,801],{"href":798},[1035,2609,2611],{"id":2374,"className":2610},[14],[16,2612,1031,2615,693],{"className":2613,"href":2614},[19],"#----m1-matrix--m2--",[74,2616,2618,2620,2621],{"className":2617},[1046],[1049,2619,1307],{}," matrix:- ",[1049,2622,380],{},[33,2624,2625],{},"Reports a matrix, which is the result of subtracting the given matrices\nand/or scalars. This is exactly the same as ",[68,2627,2628],{},"matrix:minus m1 m2",[33,2630,2555,2631,2633],{},[71,2632,760],{},", same as normal subtraction.",[690,2635,693,2638,693,2643,2657],{"className":2636,"id":2637},[1026],"inverse",[37,2639,1031,2641,693],{"id":2640},"matrixinverse",[16,2642,808],{"href":805},[1035,2644,2647],{"id":2645,"className":2646},"matrixinverse-matrix",[14],[16,2648,1031,2651,693],{"className":2649,"href":2650},[19],"#----matrixinverse-matrix--",[74,2652,2654,2655],{"className":2653},[1046],"matrix:inverse ",[1049,2656,12],{},[33,2658,2659,2660,2662],{},"Reports the inverse of the given ",[1211,2661,12],{},", or results in an error if the matrix is not invertible.",[690,2664,693,2667,693,2672,2686],{"className":2665,"id":2666},[1026],"transpose",[37,2668,1031,2670,693],{"id":2669},"matrixtranspose",[16,2671,815],{"href":812},[1035,2673,2676],{"id":2674,"className":2675},"matrixtranspose-matrix",[14],[16,2677,1031,2680,693],{"className":2678,"href":2679},[19],"#----matrixtranspose-matrix--",[74,2681,2683,2684],{"className":2682},[1046],"matrix:transpose ",[1049,2685,12],{},[33,2687,2688,2689,679],{},"Reports the transpose of the given ",[1211,2690,12],{},[690,2692,693,2695,693,2700,2714],{"className":2693,"id":2694},[1026],"real-eigenvalues",[37,2696,1031,2698,693],{"id":2697},"matrixreal-eigenvalues",[16,2699,822],{"href":819},[1035,2701,2704],{"id":2702,"className":2703},"matrixreal-eigenvalues-matrix",[14],[16,2705,1031,2708,693],{"className":2706,"href":2707},[19],"#----matrixreal-eigenvalues-matrix--",[74,2709,2711,2712],{"className":2710},[1046],"matrix:real-eigenvalues ",[1049,2713,12],{},[33,2715,2716,2717,679],{},"Reports a list containing the real eigenvalues of the given ",[1211,2718,12],{},[690,2720,693,2723,693,2728,2742],{"className":2721,"id":2722},[1026],"imaginary-eigenvalues",[37,2724,1031,2726,693],{"id":2725},"matriximaginary-eigenvalues",[16,2727,829],{"href":826},[1035,2729,2732],{"id":2730,"className":2731},"matriximaginary-eigenvalues-matrix",[14],[16,2733,1031,2736,693],{"className":2734,"href":2735},[19],"#----matriximaginary-eigenvalues-matrix--",[74,2737,2739,2740],{"className":2738},[1046],"matrix:imaginary-eigenvalues ",[1049,2741,12],{},[33,2743,2744,2745,679],{},"Reports a list containing the imaginary eigenvalues of the given ",[1211,2746,12],{},[690,2748,693,2751,693,2756,2770],{"className":2749,"id":2750},[1026],"eigenvectors",[37,2752,1031,2754,693],{"id":2753},"matrixeigenvectors",[16,2755,836],{"href":833},[1035,2757,2760],{"id":2758,"className":2759},"matrixeigenvectors-matrix",[14],[16,2761,1031,2764,693],{"className":2762,"href":2763},[19],"#----matrixeigenvectors-matrix--",[74,2765,2767,2768],{"className":2766},[1046],"matrix:eigenvectors ",[1049,2769,12],{},[33,2771,2772,2773,2775],{},"Reports a matrix that contains the eigenvectors of the given ",[1211,2774,12],{},". (Each eigenvector as a column of the resulting matrix.)",[690,2777,693,2780,693,2785,2799],{"className":2778,"id":2779},[1026],"det",[37,2781,1031,2783,693],{"id":2782},"matrixdet",[16,2784,843],{"href":840},[1035,2786,2789],{"id":2787,"className":2788},"matrixdet-matrix",[14],[16,2790,1031,2793,693],{"className":2791,"href":2792},[19],"#----matrixdet-matrix--",[74,2794,2796,2797],{"className":2795},[1046],"matrix:det ",[1049,2798,12],{},[33,2800,2801,2802,679],{},"Reports a the determinant of the ",[1211,2803,12],{},[690,2805,693,2808,693,2813,2827],{"className":2806,"id":2807},[1026],"rank",[37,2809,1031,2811,693],{"id":2810},"matrixrank",[16,2812,850],{"href":847},[1035,2814,2817],{"id":2815,"className":2816},"matrixrank-matrix",[14],[16,2818,1031,2821,693],{"className":2819,"href":2820},[19],"#----matrixrank-matrix--",[74,2822,2824,2825],{"className":2823},[1046],"matrix:rank ",[1049,2826,12],{},[33,2828,2829,2830,2832],{},"Reports the effective numerical rank of the ",[1211,2831,12],{},",obtained from SVD (Singular Value Decomposition).",[690,2834,693,2837,693,2842,2856],{"className":2835,"id":2836},[1026],"trace",[37,2838,1031,2840,693],{"id":2839},"matrixtrace",[16,2841,857],{"href":854},[1035,2843,2846],{"id":2844,"className":2845},"matrixtrace-matrix",[14],[16,2847,1031,2850,693],{"className":2848,"href":2849},[19],"#----matrixtrace-matrix--",[74,2851,2853,2854],{"className":2852},[1046],"matrix:trace ",[1049,2855,12],{},[33,2857,2858,2859,2861],{},"Reports the trace of the ",[1211,2860,12],{},", which is simply the sum of the main diagonal elements.",[690,2863,693,2866,693,2871,2888,2911],{"className":2864,"id":2865},[1026],"solve",[37,2867,1031,2869,693],{"id":2868},"matrixsolve",[16,2870,700],{"href":697},[1035,2872,2875],{"id":2873,"className":2874},"matrixsolve-a-c",[14],[16,2876,1031,2879,693],{"className":2877,"href":2878},[19],"#----matrixsolve-a-c--",[74,2880,2882,2883,122,2885],{"className":2881},[1046],"matrix:solve ",[1049,2884,16],{},[1049,2886,2887],{},"c",[33,2889,2890,2891,1885,2894,2897,2898,2900,2901,2903,2904,2906,2907,2909],{},"Reports the solution to a linear system of equations, specified by\nthe ",[1211,2892,2893],{},"A",[1211,2895,2896],{},"C"," matrices. In general, solving a set of\nlinear equations is akin to matrix division. That is, the goal is\nto find a matrix B such that ",[1211,2899,2893],{}," * B = ",[1211,2902,2896],{},". (For simple\nlinear systems, ",[1211,2905,2896],{}," and B can both be 1-dimensional matrices\n— i.e. vectors). If A is not a square matrix, then a “least squares” solution is returned.\n",[107,2908],{"value":1117},[107,2910],{"value":1120},[68,2912,2913],{},[71,2914,2915,2919,2921,2925,2927,122,2930,122,2933,131,2936,122,2939,1321,2942,122,2945,158,2949,2951,122,2954,122,2957,131,2960,1321,2963,158,2967,2969,122,2972,122,2975,122,2978,2981,2983,122,2986,179,2989,189,2992,199,2996,2999,3001,3005,3007],{},[74,2916,2918],{"className":2917},[77,278],";; To solve the set of equations x + 3y = 10 and 7x - 4y = 20",[160,2920],{},[74,2922,2924],{"className":2923},[77,278],";; We make our A matrix [[1 3][7 -4]], and our C matrix [[10][20]]",[160,2926],{},[74,2928,121],{"className":2929},[77,120],[74,2931,2893],{"className":2932},[77,84],[74,2934,130],{"className":2935},[77,84],[74,2937,136],{"className":2938},[77,135],[74,2940,144],{"className":2941},[77,135],[74,2943,1320],{"className":2944},[77,135],[74,2946,2948],{"className":2947},[77,135],"-4",[160,2950],{},[74,2952,121],{"className":2953},[77,120],[74,2955,2896],{"className":2956},[77,84],[74,2958,130],{"className":2959},[77,84],[74,2961,328],{"className":2962},[77,135],[74,2964,2966],{"className":2965},[77,135],"20",[160,2968],{},[74,2970,165],{"className":2971},[77,120],[74,2973,700],{"className":2974},[77,84],[74,2976,2893],{"className":2977},[77,84],[74,2979,2896],{"className":2980},[77,84],[160,2982],{},[74,2984,174],{"className":2985},[77,84],[74,2987,178],{"className":2988},[77,84],[74,2990,149],{"className":2991},[77,135],[74,2993,2995],{"className":2994},[77,135],"2.0000000000000004",[74,2997,203],{"className":2998},[77,84],[160,3000],{},[74,3002,3004],{"className":3003},[77,278],";; NOTE: as you can see, the results may be only approximate",[160,3006],{},[74,3008,3010],{"className":3009},[77,278],";; (In this case, the true solution should be x=4 and y=2.)",[690,3012,693,3015,693,3020,3035,3038,3047,3070,3100,3114],{"className":3013,"id":3014},[1026],"forecast-linear-growth",[37,3016,1031,3018,693],{"id":3017},"matrixforecast-linear-growth",[16,3019,707],{"href":704},[1035,3021,3024],{"id":3022,"className":3023},"matrixforecast-linear-growth-data-list",[14],[16,3025,1031,3028,693],{"className":3026,"href":3027},[19],"#----matrixforecast-linear-growth-data-list--",[74,3029,3031,3032],{"className":3030},[1046],"matrix:forecast-linear-growth ",[1049,3033,3034],{},"data-list",[33,3036,3037],{},"Reports a four-element list of the form:",[3039,3040,3041],"tt",{},[74,3042,3043,3044],{}," forecast constant slope R",[3045,3046,140],"sup",{},[33,3048,3049,3050,3053,3054,3056,3057,3059,3060,3062,3063,1885,3066,3069],{},"The ",[1211,3051,3052],{},"forecast"," is the predicted next value that would\nfollow in the sequence given by the ",[1211,3055,3034],{}," input, based\non a linear trend-line. Normally ",[1211,3058,3034],{}," will contain\nobservations on some variable, Y, from time t = 0 to time t = (n-1)\nwhere n is the number of observations. The ",[1211,3061,3052],{}," is the\npredicted value of Y at t = n. The ",[1211,3064,3065],{},"constant",[1211,3067,3068],{},"slope","\nare the parameters of the trend-line",[68,3071,3072],{},[71,3073,3074,122,3078,122,3081,122,3085,122,3088,122,3092,122,3096],{},[74,3075,3077],{"className":3076},[77,84],"Y",[74,3079,1120],{"className":3080},[77,2213],[74,3082,3084],{"className":3083},[77,84],"*constant*",[74,3086,2263],{"className":3087},[77,2213],[74,3089,3091],{"className":3090},[77,84],"*slope*",[74,3093,3095],{"className":3094},[77,2213],"*",[74,3097,3099],{"className":3098},[77,84],"t.",[33,3101,3049,3102,3107,3108,3110,3111,3113],{},[1211,3103,3104,3105],{},"R",[3045,3106,140],{}," value measures the goodness of fit of the\ntrend-line to the data, with an R",[3045,3109,140],{}," = 1 being a perfect\nfit and an R",[3045,3112,140],{}," of 0 indicating no discernible trend.\nLinear growth assumes that the variable Y grows by a constant\nabsolute amount each period.",[68,3115,3116],{},[71,3117,3118,3122,3124,122,3127,80,3130,122,3133,122,3137,122,3141,122,3145,122,3149,85,3153,3155,80,3158,122,3162,122,3166,122,3170,85,3174,3176,3180,3182,3186,3188,3192,3194,3198,3200],{},[74,3119,3121],{"className":3120},[77,278],";; a linear extrapolation of the next item in the list.",[160,3123],{},[74,3125,165],{"className":3126},[77,120],[74,3128,707],{"className":3129},[77,84],[74,3131,2966],{"className":3132},[77,135],[74,3134,3136],{"className":3135},[77,135],"25",[74,3138,3140],{"className":3139},[77,135],"28",[74,3142,3144],{"className":3143},[77,135],"32",[74,3146,3148],{"className":3147},[77,135],"35",[74,3150,3152],{"className":3151},[77,135],"39",[160,3154],{},[74,3156,174],{"className":3157},[77,84],[74,3159,3161],{"className":3160},[77,135],"42.733333333333334",[74,3163,3165],{"className":3164},[77,135],"20.619047619047638",[74,3167,3169],{"className":3168},[77,135],"3.6857142857142824",[74,3171,3173],{"className":3172},[77,135],"0.9953743395474031",[160,3175],{},[74,3177,3179],{"className":3178},[77,278],";; These results tell us:",[160,3181],{},[74,3183,3185],{"className":3184},[77,278],";; * the next predicted value is roughly 42.7333",[160,3187],{},[74,3189,3191],{"className":3190},[77,278],";; * the linear trend line is given by Y = 20.6190 + 3.6857 * t",[160,3193],{},[74,3195,3197],{"className":3196},[77,278],";; * Y grows by approximately 3.6857 units each period",[160,3199],{},[74,3201,3203],{"className":3202},[77,278],";; * the R^2 value is roughly 0.9954 (a good fit)",[690,3205,693,3208,693,3213,3227,3229,3236,3272,3284,3319,3344],{"className":3206,"id":3207},[1026],"forecast-compound-growth",[37,3209,1031,3211,693],{"id":3210},"matrixforecast-compound-growth",[16,3212,714],{"href":711},[1035,3214,3217],{"id":3215,"className":3216},"matrixforecast-compound-growth-data-list",[14],[16,3218,1031,3221,693],{"className":3219,"href":3220},[19],"#----matrixforecast-compound-growth-data-list--",[74,3222,3224,3225],{"className":3223},[1046],"matrix:forecast-compound-growth ",[1049,3226,3034],{},[33,3228,3037],{},[3039,3230,3231],{},[74,3232,3233,3234],{}," forecast constant growth-proportion R",[3045,3235,140],{},[33,3237,3238,3239,3251,3252,3260,3261,3265,3266,1885,3268,3271],{},"Whereas ",[71,3240,3243],{"className":3241},[3242],"netlogo-command",[16,3244,707],{"href":3245,"className":3246,"dataDisplayText":707,"rel":3248,"target":3250,"title":707},"/matrix/forecast-linear-growth",[3247],"netlogo-wiki-link",[3249],"noopener","_self","\nassumes growth by a constant absolute amount each period, ",[71,3253,3255],{"className":3254},[3242],[16,3256,714],{"href":3257,"className":3258,"dataDisplayText":714,"rel":3259,"target":3250,"title":714},"/matrix/forecast-compound-growth",[3247],[3249],"\nassumes that Y grows by a constant ",[3262,3263,3264],"strong",{},"proportion"," each period.\nThe ",[1211,3267,3065],{},[1211,3269,3270],{},"growth-proportion"," are the parameters\nof the trend-line",[3039,3273,3274,3275,3277,3278,3280,3283],{},"\nY = \n",[1211,3276,3065],{},"\n * \n",[1211,3279,3270],{},[3045,3281,3282],{},"\nt\n","\n.\n",[33,3285,3286,3287,3289,3290,3293,3294,3301,3302,3304,3305,3312,3313,3315,3316,3318],{},"Note that the growth proportion is typically interpreted as\n",[1211,3288,3270],{}," = ",[1211,3291,3292],{},"(1.0 + growth-rate)",". Therefore,\nif ",[71,3295,3297],{"className":3296},[3242],[16,3298,714],{"href":3257,"className":3299,"dataDisplayText":714,"rel":3300,"target":3250,"title":714},[3247],[3249],"\nreturns a ",[1211,3303,3270],{}," of 1.10, that implies that Y\ngrows by (1.10 - 1.0) = 10% each period. Note that if growth is\nnegative, ",[71,3306,3308],{"className":3307},[3242],[16,3309,714],{"href":3257,"className":3310,"dataDisplayText":714,"rel":3311,"target":3250,"title":714},[3247],[3249],"\nwill return a ",[1211,3314,3270],{}," of less than one. E.g., a\n",[1211,3317,3270],{}," of 0.90 implies a growth rate of -10%.",[33,3320,3321,3324,3325,3333,3334,3341,3342,679],{},[3262,3322,3323],{},"NOTE:"," The compound growth forecast is achieved by taking the\nln of Y. (See ",[71,3326,3328],{"className":3327},[3242],[16,3329,728],{"href":3330,"className":3331,"dataDisplayText":728,"rel":3332,"target":3250,"title":728},"/matrix/regress",[3247],[3249],", below.)\nBecause it is impossible to take the natural log of zero or a\nnegative number, ",[71,3335,3337],{"className":3336},[3242],[16,3338,714],{"href":3257,"className":3339,"dataDisplayText":714,"rel":3340,"target":3250,"title":714},[3247],[3249],"\nwill result in an error if it finds a zero or negative number in\n",[1211,3343,3034],{},[68,3345,3346],{},[71,3347,3348,3352,3354,122,3357,80,3360,122,3363,122,3366,122,3369,122,3372,122,3375,85,3378,3380,80,3383,122,3387,122,3391,122,3395,85,3399,3401,3404,3406,3410,3412,3416,3418,3422,3424],{},[74,3349,3351],{"className":3350},[77,278],";; a compound growth extrapolation of the next item in the list.",[160,3353],{},[74,3355,165],{"className":3356},[77,120],[74,3358,714],{"className":3359},[77,84],[74,3361,2966],{"className":3362},[77,135],[74,3364,3136],{"className":3365},[77,135],[74,3367,3140],{"className":3368},[77,135],[74,3370,3144],{"className":3371},[77,135],[74,3373,3148],{"className":3374},[77,135],[74,3376,3152],{"className":3377},[77,135],[160,3379],{},[74,3381,174],{"className":3382},[77,84],[74,3384,3386],{"className":3385},[77,135],"45.60964465307147",[74,3388,3390],{"className":3389},[77,135],"21.15254147944863",[74,3392,3394],{"className":3393},[77,135],"1.136621034423892",[74,3396,3398],{"className":3397},[77,135],"0.9760867518334806",[160,3400],{},[74,3402,3179],{"className":3403},[77,278],[160,3405],{},[74,3407,3409],{"className":3408},[77,278],";; * the next predicted value is approximately 45.610",[160,3411],{},[74,3413,3415],{"className":3414},[77,278],";; * the compound growth trend line is given by Y = 21.1525 * 1.1366 ^ t",[160,3417],{},[74,3419,3421],{"className":3420},[77,278],";; * Y grows by approximately 13.66% each period",[160,3423],{},[74,3425,3427],{"className":3426},[77,278],";; * the R^2 value is roughly 0.9761 (a good fit)",[690,3429,693,3432,693,3437,3451,3453,3469,3470,3477,3478,3486,3487,3490,3491,3493,3494,3496,3497,3505,3526,3529,3551],{"className":3430,"id":3431},[1026],"forecast-continuous-growth",[37,3433,1031,3435,693],{"id":3434},"matrixforecast-continuous-growth",[16,3436,721],{"href":718},[1035,3438,3441],{"id":3439,"className":3440},"matrixforecast-continuous-growth-data-list",[14],[16,3442,1031,3445,693],{"className":3443,"href":3444},[19],"#----matrixforecast-continuous-growth-data-list--",[74,3446,3448,3449],{"className":3447},[1046],"matrix:forecast-continuous-growth ",[1049,3450,3034],{},[33,3452,3037],{},[3039,3454,3455],{},[74,3456,122,3457,122,3459,3461,3462,3461,3465],{},[1211,3458,3052],{},[1211,3460,3065],{},"  ",[1211,3463,3464],{},"growth-rate",[1211,3466,3104,3467],{},[3045,3468,140],{},"\n.\nWhereas \n",[71,3471,3473],{"className":3472},[3242],[16,3474,714],{"href":3257,"className":3475,"dataDisplayText":714,"rel":3476,"target":3250,"title":714},[3247],[3249],"\n\nassumes discrete time with Y growing by a given proportion each\nfinite period of time (e.g., a month or a year), \n",[71,3479,3481],{"className":3480},[3242],[16,3482,721],{"href":3483,"className":3484,"dataDisplayText":721,"rel":3485,"target":3250,"title":721},"/matrix/forecast-continuous-growth",[3247],[3249],"\n\nassumes that Y is compounded \n",[3262,3488,3489],{},"continuously","\n (e.g., each second\nor fraction of a second). The \n",[1211,3492,3065],{},"\n and\n\n",[1211,3495,3464],{},"\n are the parameters of the trend-line\n",[3039,3498,3274,3499,3501,3502],{},[1211,3500,3065],{},"\n * e\n",[3045,3503,3504],{},"\n(growth-rate * t)\n",[33,3506,3507,3514,3515,3522,3523,3525],{},[71,3508,3510],{"className":3509},[3242],[16,3511,721],{"href":3483,"className":3512,"dataDisplayText":721,"rel":3513,"target":3250,"title":721},[3247],[3249],"\nis the “calculus” analog of ",[71,3516,3518],{"className":3517},[3242],[16,3519,714],{"href":3257,"className":3520,"dataDisplayText":714,"rel":3521,"target":3250,"title":714},[3247],[3249],".\nThe two will normally yield similar (but not identical) results, as\nshown in the example below. ",[1211,3524,3464],{}," may, of course, be\nnegative.",[3527,3528],"blockquote",{},[33,3530,3531,3533,3534,3541,3542,3341,3549,679],{},[1211,3532,3323],{}," The continuous growth forecast is achieved by taking\nthe ln of Y. (See ",[71,3535,3537],{"className":3536},[3242],[16,3538,728],{"href":3330,"className":3539,"dataDisplayText":728,"rel":3540,"target":3250,"title":728},[3247],[3249],",\nbelow.) Because it is impossible to take the natural log of zero or\na negative number, ",[71,3543,3545],{"className":3544},[3242],[16,3546,721],{"href":3483,"className":3547,"dataDisplayText":721,"rel":3548,"target":3250,"title":721},[3247],[3249],[1211,3550,3034],{},[68,3552,3553],{},[71,3554,3555,3559,3561,122,3564,80,3567,122,3570,122,3573,122,3576,122,3579,122,3582,85,3585,3587,80,3590,122,3594,122,3597,122,3601,85,3604,3606,3609,3611,3614,3616,3620,3622,3626,3628],{},[74,3556,3558],{"className":3557},[77,278],";; a continuous growth extrapolation of the next item in the list.",[160,3560],{},[74,3562,165],{"className":3563},[77,120],[74,3565,721],{"className":3566},[77,84],[74,3568,2966],{"className":3569},[77,135],[74,3571,3136],{"className":3572},[77,135],[74,3574,3140],{"className":3575},[77,135],[74,3577,3144],{"className":3578},[77,135],[74,3580,3148],{"className":3581},[77,135],[74,3583,3152],{"className":3584},[77,135],[160,3586],{},[74,3588,174],{"className":3589},[77,84],[74,3591,3593],{"className":3592},[77,135],"45.60964465307146",[74,3595,3390],{"className":3596},[77,135],[74,3598,3600],{"className":3599},[77,135],"0.12805985615332668",[74,3602,3398],{"className":3603},[77,135],[160,3605],{},[74,3607,3179],{"className":3608},[77,278],[160,3610],{},[74,3612,3409],{"className":3613},[77,278],[160,3615],{},[74,3617,3619],{"className":3618},[77,278],";; * the compound growth trend line is given by Y = 21.1525 * e ^ (0.1281 * t)",[160,3621],{},[74,3623,3625],{"className":3624},[77,278],";; * Y grows by approximately 12.81% each period if compounding takes place continuously",[160,3627],{},[74,3629,3427],{"className":3630},[77,278],[690,3632,693,3635,693,3640,3655,3661,3683],{"className":3633,"id":3634},[1026],"regress",[37,3636,1031,3638,693],{"id":3637},"matrixregress",[16,3639,728],{"href":725},[1035,3641,3644],{"id":3642,"className":3643},"matrixregress-data-matrix",[14],[16,3645,1031,3648,693],{"className":3646,"href":3647},[19],"#----matrixregress-data-matrix--",[74,3649,3651,3652],{"className":3650},[1046],"matrix:regress ",[1049,3653,3654],{},"data-matrix",[33,3656,3657,3658,3660],{},"All three of the forecast primitives above are just special cases\nof performing an OLS (ordinary-least-squares) linear regression —\nthe matrix:regress primitive provides a flexible/general-purpose\napproach. The input is a matrix ",[1211,3659,3654],{},", with the first\ncolumn being the observations on the dependent variable and each\nsubsequent column being the observations on the (1 or more)\nindependent variables. Thus each row consists of an observation of\nthe dependent variable followed by the corresponding observations\nfor each independent variable.",[33,3662,3663,3664,3666,3667,3674,3675,3682],{},"The output is a Logo nested list composed of two elements. The\nfirst element is a list containing the regression constant followed\nby the coefficients on each of the independent variables. The\nsecond element is a 3-element list containing the R",[3045,3665,140],{},"\nstatistic, the total sum of squares, and the residual sum of\nsquares. The following code example shows how the ",[71,3668,3670],{"className":3669},[3242],[16,3671,728],{"href":3330,"className":3672,"dataDisplayText":728,"rel":3673,"target":3250,"title":728},[3247],[3249]," primitive can be used to\nperform the same function as the code examples shown in the\nmatrix:forecast-*-growth primitives above. (However, keep in mind\nthat the ",[71,3676,3678],{"className":3677},[3242],[16,3679,728],{"href":3330,"className":3680,"dataDisplayText":728,"rel":3681,"target":3250,"title":728},[3247],[3249]," primitive is\nmore powerful than this, and can have many more independent\nvariables in the regression, as indicated in the fourth example\nbelow.)",[68,3684,3685],{},[71,3686,3687,3691,3693,122,3696,80,3699,122,3702,122,3705,122,3708,122,3711,122,3714,85,3717,3719,122,3722,500,3726,122,3730,122,3734,237,3737,122,3741,122,3745,3748,3749,3753,3755,122,3758,122,3762,122,3765,500,3768,122,3772,122,3775,518,3778,3780,122,3783,122,3787,122,3791,500,3794,122,3797,122,3800,518,3803,3805,122,3808,122,3812,122,3815,500,3818,122,3821,122,3824,518,3827,3829,122,3832,3836,3837,122,3840,500,3843,122,3846,122,3849,518,3852,3854,3858,3860,500,3863,500,3866,122,3869,122,3872,122,3875,122,3878,3881,3882,3881,3885,3881,3888,3891,3892,3894,3896,3900,3902,122,3905,3909,3910,122,3913,80,3917,122,3920,122,3923,122,3926,122,3929,122,3932,3935,3936,3938,122,3941,500,3945,122,3948,122,3951,237,3954,122,3957,122,3960,3748,3963,3966,3968,122,3971,122,3975,122,3978,500,3981,122,3984,122,3987,518,3990,3992,122,3995,122,3999,122,4003,122,4006,500,4009,122,4012,122,4015,518,4018,4020,122,4023,122,4027,122,4030,122,4033,500,4036,122,4039,122,4042,518,4045,4047,122,4050,4054,4055,122,4058,500,4061,122,4064,122,4067,518,4070,4072,4075,4077,500,4080,500,4083,122,4086,122,4089,122,4092,122,4096,3881,4099,3881,4102,3881,4105,3891,4108,4110,4112,4116,4118,122,4121,3909,4125,122,4128,80,4131,122,4134,122,4137,122,4140,122,4143,122,4146,3935,4149,4151,122,4154,500,4158,122,4161,122,4164,237,4167,122,4170,122,4173,3748,4176,4179,4181,122,4184,122,4188,122,4191,500,4194,122,4197,122,4200,518,4203,4205,122,4208,122,4212,122,4215,122,4218,500,4221,122,4224,122,4227,518,4230,4232,122,4235,4239,4240,122,4243,500,4246,122,4249,122,4252,518,4255,4257,122,4260,4054,4264,122,4267,500,4270,122,4273,122,4276,518,4279,4281,500,4284,500,4287,122,4290,122,4293,500,4296,122,4299,122,4302,4305,4306,3881,4309,3881,4312,3891,4315,4317,4319,4323,4325,4329,4331,4335,4337,122,4340,80,4344,122,4347,122,4350,122,4353,122,4356,85,4359,4361,122,4364,80,4368,122,4371,122,4374,122,4377,122,4380,85,4383,4385,122,4388,80,4392,122,4395,122,4398,122,4401,122,4404,85,4407,4409,122,4412,122,4415,500,4418,122,4421,122,4424,122,4427,518,4430,4432,131,4435,122,4439,122,4443,145,4447,122,4451,122,4455,158,4459,4461,4465,4467,4471,4473,4477,4479,4483,4485],{},[74,3688,3690],{"className":3689},[77,278],";; this is equivalent to what the matrix:forecast-linear-growth does",[160,3692],{},[74,3694,121],{"className":3695},[77,120],[74,3697,3034],{"className":3698},[77,84],[74,3700,2966],{"className":3701},[77,135],[74,3703,3136],{"className":3704},[77,135],[74,3706,3140],{"className":3707},[77,135],[74,3709,3144],{"className":3710},[77,135],[74,3712,3148],{"className":3713},[77,135],[74,3715,3152],{"className":3716},[77,135],[160,3718],{},[74,3720,121],{"className":3721},[77,120],[74,3723,3725],{"className":3724},[77,84],"indep-var",[74,3727,3729],{"className":3728},[77,2213],"n-values",[74,3731,3733],{"className":3732},[77,2213],"length",[74,3735,3034],{"className":3736},[77,84],[74,3738,3740],{"className":3739},[77,84],"x",[74,3742,3744],{"className":3743},[77,2213],"->",[74,3746,3740],{"className":3747},[77,84]," ]) ",[74,3750,3752],{"className":3751},[77,278],"; 0,1,2...,5",[160,3754],{},[74,3756,121],{"className":3757},[77,120],[74,3759,3761],{"className":3760},[77,84],"lin-output",[74,3763,728],{"className":3764},[77,84],[74,3766,895],{"className":3767},[77,84],[74,3769,3771],{"className":3770},[77,2213],"list",[74,3773,3034],{"className":3774},[77,84],[74,3776,3725],{"className":3777},[77,84],[160,3779],{},[74,3781,121],{"className":3782},[77,120],[74,3784,3786],{"className":3785},[77,84],"lincnst",[74,3788,3790],{"className":3789},[77,2213],"item",[74,3792,410],{"className":3793},[77,135],[74,3795,3790],{"className":3796},[77,2213],[74,3798,410],{"className":3799},[77,135],[74,3801,3761],{"className":3802},[77,84],[160,3804],{},[74,3806,121],{"className":3807},[77,120],[74,3809,3811],{"className":3810},[77,84],"linslpe",[74,3813,3790],{"className":3814},[77,2213],[74,3816,136],{"className":3817},[77,135],[74,3819,3790],{"className":3820},[77,2213],[74,3822,410],{"className":3823},[77,135],[74,3825,3761],{"className":3826},[77,84],[160,3828],{},[74,3830,121],{"className":3831},[77,120],[74,3833,3835],{"className":3834},[77,84],"linR2","   ",[74,3838,3790],{"className":3839},[77,2213],[74,3841,410],{"className":3842},[77,135],[74,3844,3790],{"className":3845},[77,2213],[74,3847,136],{"className":3848},[77,135],[74,3850,3761],{"className":3851},[77,84],[160,3853],{},[74,3855,3857],{"className":3856},[77,278],";;Note the \"6\" here is because we want to forecast the value at time t=6.",[160,3859],{},[74,3861,165],{"className":3862},[77,120],[74,3864,3771],{"className":3865},[77,2213],[74,3867,3786],{"className":3868},[77,84],[74,3870,2263],{"className":3871},[77,2213],[74,3873,3811],{"className":3874},[77,84],[74,3876,3095],{"className":3877},[77,2213],[74,3879,157],{"className":3880},[77,135],") (",[74,3883,3786],{"className":3884},[77,84],[74,3886,3811],{"className":3887},[77,84],[74,3889,3835],{"className":3890},[77,84],"))",[160,3893],{},[160,3895],{},[74,3897,3899],{"className":3898},[77,278],";; this is equivalent to what the matrix:forecast-compound-growth does",[160,3901],{},[74,3903,121],{"className":3904},[77,120],[74,3906,3908],{"className":3907},[77,84],"com-log-data-list","  (",[74,3911,2193],{"className":3912},[77,2213],[74,3914,3916],{"className":3915},[77,2213],"ln",[74,3918,2966],{"className":3919},[77,135],[74,3921,3136],{"className":3922},[77,135],[74,3924,3140],{"className":3925},[77,135],[74,3927,3144],{"className":3928},[77,135],[74,3930,3148],{"className":3931},[77,135],[74,3933,3152],{"className":3934},[77,135],"])",[160,3937],{},[74,3939,121],{"className":3940},[77,120],[74,3942,3944],{"className":3943},[77,84],"com-indep-var2",[74,3946,3729],{"className":3947},[77,2213],[74,3949,3733],{"className":3950},[77,2213],[74,3952,3908],{"className":3953},[77,84],[74,3955,3740],{"className":3956},[77,84],[74,3958,3744],{"className":3959},[77,2213],[74,3961,3740],{"className":3962},[77,84],[74,3964,3752],{"className":3965},[77,278],[160,3967],{},[74,3969,121],{"className":3970},[77,120],[74,3972,3974],{"className":3973},[77,84],"com-output",[74,3976,728],{"className":3977},[77,84],[74,3979,895],{"className":3980},[77,84],[74,3982,3771],{"className":3983},[77,2213],[74,3985,3908],{"className":3986},[77,84],[74,3988,3944],{"className":3989},[77,84],[160,3991],{},[74,3993,121],{"className":3994},[77,120],[74,3996,3998],{"className":3997},[77,84],"comcnst",[74,4000,4002],{"className":4001},[77,2213],"exp",[74,4004,3790],{"className":4005},[77,2213],[74,4007,410],{"className":4008},[77,135],[74,4010,3790],{"className":4011},[77,2213],[74,4013,410],{"className":4014},[77,135],[74,4016,3974],{"className":4017},[77,84],[160,4019],{},[74,4021,121],{"className":4022},[77,120],[74,4024,4026],{"className":4025},[77,84],"comprop",[74,4028,4002],{"className":4029},[77,2213],[74,4031,3790],{"className":4032},[77,2213],[74,4034,136],{"className":4035},[77,135],[74,4037,3790],{"className":4038},[77,2213],[74,4040,410],{"className":4041},[77,135],[74,4043,3974],{"className":4044},[77,84],[160,4046],{},[74,4048,121],{"className":4049},[77,120],[74,4051,4053],{"className":4052},[77,84],"comR2","       ",[74,4056,3790],{"className":4057},[77,2213],[74,4059,410],{"className":4060},[77,135],[74,4062,3790],{"className":4063},[77,2213],[74,4065,136],{"className":4066},[77,135],[74,4068,3974],{"className":4069},[77,84],[160,4071],{},[74,4073,3857],{"className":4074},[77,278],[160,4076],{},[74,4078,165],{"className":4079},[77,120],[74,4081,3771],{"className":4082},[77,2213],[74,4084,3998],{"className":4085},[77,84],[74,4087,3095],{"className":4088},[77,2213],[74,4090,4026],{"className":4091},[77,84],[74,4093,4095],{"className":4094},[77,2213],"^",[74,4097,157],{"className":4098},[77,135],[74,4100,3998],{"className":4101},[77,84],[74,4103,4026],{"className":4104},[77,84],[74,4106,4053],{"className":4107},[77,84],[160,4109],{},[160,4111],{},[74,4113,4115],{"className":4114},[77,278],";; this is equivalent to what the matrix:forecast-continuous-growth does",[160,4117],{},[74,4119,121],{"className":4120},[77,120],[74,4122,4124],{"className":4123},[77,84],"con-log-data-list",[74,4126,2193],{"className":4127},[77,2213],[74,4129,3916],{"className":4130},[77,2213],[74,4132,2966],{"className":4133},[77,135],[74,4135,3136],{"className":4136},[77,135],[74,4138,3140],{"className":4139},[77,135],[74,4141,3144],{"className":4142},[77,135],[74,4144,3148],{"className":4145},[77,135],[74,4147,3152],{"className":4148},[77,135],[160,4150],{},[74,4152,121],{"className":4153},[77,120],[74,4155,4157],{"className":4156},[77,84],"con-indep-var2",[74,4159,3729],{"className":4160},[77,2213],[74,4162,3733],{"className":4163},[77,2213],[74,4165,4124],{"className":4166},[77,84],[74,4168,3740],{"className":4169},[77,84],[74,4171,3744],{"className":4172},[77,2213],[74,4174,3740],{"className":4175},[77,84],[74,4177,3752],{"className":4178},[77,278],[160,4180],{},[74,4182,121],{"className":4183},[77,120],[74,4185,4187],{"className":4186},[77,84],"con-output",[74,4189,728],{"className":4190},[77,84],[74,4192,895],{"className":4193},[77,84],[74,4195,3771],{"className":4196},[77,2213],[74,4198,4124],{"className":4199},[77,84],[74,4201,4157],{"className":4202},[77,84],[160,4204],{},[74,4206,121],{"className":4207},[77,120],[74,4209,4211],{"className":4210},[77,84],"concnst",[74,4213,4002],{"className":4214},[77,2213],[74,4216,3790],{"className":4217},[77,2213],[74,4219,410],{"className":4220},[77,135],[74,4222,3790],{"className":4223},[77,2213],[74,4225,410],{"className":4226},[77,135],[74,4228,4187],{"className":4229},[77,84],[160,4231],{},[74,4233,121],{"className":4234},[77,120],[74,4236,4238],{"className":4237},[77,84],"conrate","     ",[74,4241,3790],{"className":4242},[77,2213],[74,4244,136],{"className":4245},[77,135],[74,4247,3790],{"className":4248},[77,2213],[74,4250,410],{"className":4251},[77,135],[74,4253,4187],{"className":4254},[77,84],[160,4256],{},[74,4258,121],{"className":4259},[77,120],[74,4261,4263],{"className":4262},[77,84],"conR2",[74,4265,3790],{"className":4266},[77,2213],[74,4268,410],{"className":4269},[77,135],[74,4271,3790],{"className":4272},[77,2213],[74,4274,136],{"className":4275},[77,135],[74,4277,4187],{"className":4278},[77,84],[160,4280],{},[74,4282,165],{"className":4283},[77,120],[74,4285,3771],{"className":4286},[77,2213],[74,4288,4211],{"className":4289},[77,84],[74,4291,3095],{"className":4292},[77,2213],[74,4294,4002],{"className":4295},[77,2213],[74,4297,4238],{"className":4298},[77,84],[74,4300,3095],{"className":4301},[77,2213],[74,4303,157],{"className":4304},[77,135],")) (",[74,4307,4211],{"className":4308},[77,84],[74,4310,4238],{"className":4311},[77,84],[74,4313,4263],{"className":4314},[77,84],[160,4316],{},[160,4318],{},[74,4320,4322],{"className":4321},[77,278],";; example of a regression with two independent variables:",[160,4324],{},[74,4326,4328],{"className":4327},[77,278],";; Pretend we have a dataset, and we want to know how well happiness",[160,4330],{},[74,4332,4334],{"className":4333},[77,278],";; is correlated to snack-food consumption and accomplishing goals.",[160,4336],{},[74,4338,121],{"className":4339},[77,120],[74,4341,4343],{"className":4342},[77,84],"happiness",[74,4345,140],{"className":4346},[77,135],[74,4348,149],{"className":4349},[77,135],[74,4351,153],{"className":4352},[77,135],[74,4354,1331],{"className":4355},[77,135],[74,4357,328],{"className":4358},[77,135],[160,4360],{},[74,4362,121],{"className":4363},[77,120],[74,4365,4367],{"className":4366},[77,84],"snack-food-consumed",[74,4369,144],{"className":4370},[77,135],[74,4372,149],{"className":4373},[77,135],[74,4375,144],{"className":4376},[77,135],[74,4378,1320],{"className":4379},[77,135],[74,4381,1331],{"className":4382},[77,135],[160,4384],{},[74,4386,121],{"className":4387},[77,120],[74,4389,4391],{"className":4390},[77,84],"goals-accomplished",[74,4393,140],{"className":4394},[77,135],[74,4396,144],{"className":4397},[77,135],[74,4399,153],{"className":4400},[77,135],[74,4402,1331],{"className":4403},[77,135],[74,4405,1341],{"className":4406},[77,135],[160,4408],{},[74,4410,165],{"className":4411},[77,120],[74,4413,728],{"className":4414},[77,84],[74,4416,895],{"className":4417},[77,84],[74,4419,3771],{"className":4420},[77,2213],[74,4422,4343],{"className":4423},[77,84],[74,4425,4367],{"className":4426},[77,84],[74,4428,4391],{"className":4429},[77,84],[160,4431],{},[74,4433,174],{"className":4434},[77,84],[74,4436,4438],{"className":4437},[77,135],"-0.14606741573033788",[74,4440,4442],{"className":4441},[77,135],"0.3033707865168543",[74,4444,4446],{"className":4445},[77,135],"0.8202247191011234",[74,4448,4450],{"className":4449},[77,135],"0.9801718440185063",[74,4452,4454],{"className":4453},[77,135],"40.8",[74,4456,4458],{"className":4457},[77,135],"0.8089887640449439",[160,4460],{},[74,4462,4464],{"className":4463},[77,278],";; linear regression: happiness = -0.146 + 0.303*snack-food-consumed + 0.820*goals-accomplished",[160,4466],{},[74,4468,4470],{"className":4469},[77,278],";; (Since the 0.820 coefficient is higher than the 0.303 coefficient, it appears that each goal",[160,4472],{},[74,4474,4476],{"className":4475},[77,278],";; accomplished yields more happiness than does each snack consumed, although both are positively",[160,4478],{},[74,4480,4482],{"className":4481},[77,278],";; correlated with happiness.)",[160,4484],{},[74,4486,4488],{"className":4487},[77,278],";; Also, we see that R^2 = 0.98, so the two factors together provide a good fit.",{"title":4490,"searchDepth":4491,"depth":4492,"links":4493},"",5,3,[4494,4500],{"id":25,"depth":4495,"text":31,"children":4496},2,[4497,4498,4499],{"id":39,"depth":4492,"text":45},{"id":54,"depth":4492,"text":60},{"id":97,"depth":4492,"text":103},{"id":665,"depth":4495,"text":671,"children":4501},[4502,4503,4504,4505,4506,4507,4513,4518,4523,4528,4533,4538,4543,4548,4553,4558,4563,4568,4573,4578,4583,4588,4593,4598,4603,4608,4613,4618,4623,4628,4633,4638,4643,4648,4653,4658,4663,4668,4673,4678,4683,4688,4693,4698,4703,4708,4713],{"id":682,"depth":4492,"text":688},{"id":731,"depth":4492,"text":737},{"id":860,"depth":4492,"text":866},{"id":924,"depth":4492,"text":930},{"id":1016,"depth":4492,"text":1022},{"id":1030,"depth":4492,"text":4508,"children":4509},"\n    matrix:make-constant\n  ",[4510],{"id":1037,"depth":4511,"text":4512},4,"\n    matrix:make-constant n-rows n-cols initial-value\n  ",{"id":1067,"depth":4492,"text":4514,"children":4515},"\n    matrix:make-identity\n  ",[4516],{"id":1072,"depth":4511,"text":4517},"\n    matrix:make-identity size\n  ",{"id":1094,"depth":4492,"text":4519,"children":4520},"\n    matrix:from-row-list\n  ",[4521],{"id":1099,"depth":4511,"text":4522},"\n    matrix:from-row-list nested-list\n  ",{"id":1190,"depth":4492,"text":4524,"children":4525},"\n    matrix:from-column-list\n  ",[4526],{"id":1195,"depth":4511,"text":4527},"\n    matrix:from-column-list nested-list\n  ",{"id":1221,"depth":4492,"text":4529,"children":4530},"\n    matrix:to-row-list\n  ",[4531],{"id":1226,"depth":4511,"text":4532},"\n    matrix:to-row-list matrix\n  ",{"id":1247,"depth":4492,"text":4534,"children":4535},"\n    matrix:to-column-list\n  ",[4536],{"id":1252,"depth":4511,"text":4537},"\n    matrix:to-column-list matrix\n  ",{"id":1273,"depth":4492,"text":4539,"children":4540},"\n    matrix:copy\n  ",[4541],{"id":1278,"depth":4511,"text":4542},"\n    matrix:copy matrix\n  ",{"id":1604,"depth":4492,"text":4544,"children":4545},"\n    matrix:pretty-print-text\n  ",[4546],{"id":1609,"depth":4511,"text":4547},"\n    matrix:pretty-print-text matrix\n  ",{"id":1630,"depth":4492,"text":4549,"children":4550},"\n    matrix:get\n  ",[4551],{"id":1635,"depth":4511,"text":4552},"\n    matrix:get matrix row-i col-j\n  ",{"id":1668,"depth":4492,"text":4554,"children":4555},"\n    matrix:get-row\n  ",[4556],{"id":1673,"depth":4511,"text":4557},"\n    matrix:get-row matrix row-i\n  ",{"id":1699,"depth":4492,"text":4559,"children":4560},"\n    matrix:get-column\n  ",[4561],{"id":1704,"depth":4511,"text":4562},"\n    matrix:get-column matrix col-j\n  ",{"id":1729,"depth":4492,"text":4564,"children":4565},"\n    matrix:set\n  ",[4566],{"id":1734,"depth":4511,"text":4567},"\n    matrix:set matrix row-i col-j new-value\n  ",{"id":1773,"depth":4492,"text":4569,"children":4570},"\n    matrix:set-row\n  ",[4571],{"id":1778,"depth":4511,"text":4572},"\n    matrix:set-row matrix row-i simple-list\n  ",{"id":1816,"depth":4492,"text":4574,"children":4575},"\n    matrix:set-column\n  ",[4576],{"id":1821,"depth":4511,"text":4577},"\n    matrix:set-column matrix col-j simple-list\n  ",{"id":1855,"depth":4492,"text":4579,"children":4580},"\n    matrix:swap-rows\n  ",[4581],{"id":1860,"depth":4511,"text":4582},"\n    matrix:swap-rows matrix row1 row2\n  ",{"id":1895,"depth":4492,"text":4584,"children":4585},"\n    matrix:swap-columns\n  ",[4586],{"id":1900,"depth":4511,"text":4587},"\n    matrix:swap-columns matrix col1 col2\n  ",{"id":1933,"depth":4492,"text":4589,"children":4590},"\n    matrix:set-and-report\n  ",[4591],{"id":1938,"depth":4511,"text":4592},"\n    matrix:set-and-report matrix row-i col-j new-value\n  ",{"id":2005,"depth":4492,"text":4594,"children":4595},"\n    matrix:dimensions\n  ",[4596],{"id":2010,"depth":4511,"text":4597},"\n    matrix:dimensions matrix\n  ",{"id":2037,"depth":4492,"text":4599,"children":4600},"\n    matrix:submatrix\n  ",[4601],{"id":2042,"depth":4511,"text":4602},"\n    matrix:submatrix matrix r1 c1 r2 c2\n  ",{"id":2196,"depth":4492,"text":4604,"children":4605},"\n    matrix:map\n  ",[4606],{"id":2201,"depth":4511,"text":4607},"\n    matrix:map reporter matrix\n    matrix:map reporter matrix matrices ...\n  ",{"id":2291,"depth":4492,"text":4609,"children":4610},"\n    matrix:times-scalar\n  ",[4611],{"id":2296,"depth":4511,"text":4612},"\n    matrix:times-scalar matrix factor\n  ",{"id":2334,"depth":4492,"text":4614,"children":4615},"\n    matrix:times\n  ",[4616],{"id":2339,"depth":4511,"text":4617},"\n    matrix:times m1 m2\n    matrix:times m1 m2 ...\n  ",{"id":12,"depth":4492,"text":4619,"children":4620},"\n    matrix:*\n  ",[4621],{"id":2374,"depth":4511,"text":4622},"\n    m1 matrix:* m2\n  ",{"id":2416,"depth":4492,"text":4624,"children":4625},"\n    matrix:times-element-wise\n  ",[4626],{"id":2421,"depth":4511,"text":4627},"\n    matrix:times-element-wise m1 m2\n  ",{"id":2444,"depth":4492,"text":4629,"children":4630},"\n    matrix:plus-scalar\n  ",[4631],{"id":2449,"depth":4511,"text":4632},"\n    matrix:plus-scalar matrix netlogonumber\n  ",{"id":2485,"depth":4492,"text":4634,"children":4635},"\n    matrix:plus\n  ",[4636],{"id":2490,"depth":4511,"text":4637},"\n    matrix:plus m1 m2\n    matrix:plus m1 m2 ...\n  ",{"id":2520,"depth":4492,"text":4639,"children":4640},"\n    matrix:+\n  ",[4641],{"id":2525,"depth":4511,"text":4642},"\n    m1 matrix:+ m2\n  ",{"id":2565,"depth":4492,"text":4644,"children":4645},"\n    matrix:minus\n  ",[4646],{"id":2570,"depth":4511,"text":4647},"\n    matrix:minus m1 m2\n    matrix:minus m1 m2 ...\n  ",{"id":12,"depth":4492,"text":4649,"children":4650},"\n    matrix:-\n  ",[4651],{"id":2374,"depth":4511,"text":4652},"\n    m1 matrix:- m2\n  ",{"id":2640,"depth":4492,"text":4654,"children":4655},"\n    matrix:inverse\n  ",[4656],{"id":2645,"depth":4511,"text":4657},"\n    matrix:inverse matrix\n  ",{"id":2669,"depth":4492,"text":4659,"children":4660},"\n    matrix:transpose\n  ",[4661],{"id":2674,"depth":4511,"text":4662},"\n    matrix:transpose matrix\n  ",{"id":2697,"depth":4492,"text":4664,"children":4665},"\n    matrix:real-eigenvalues\n  ",[4666],{"id":2702,"depth":4511,"text":4667},"\n    matrix:real-eigenvalues matrix\n  ",{"id":2725,"depth":4492,"text":4669,"children":4670},"\n    matrix:imaginary-eigenvalues\n  ",[4671],{"id":2730,"depth":4511,"text":4672},"\n    matrix:imaginary-eigenvalues matrix\n  ",{"id":2753,"depth":4492,"text":4674,"children":4675},"\n    matrix:eigenvectors\n  ",[4676],{"id":2758,"depth":4511,"text":4677},"\n    matrix:eigenvectors matrix\n  ",{"id":2782,"depth":4492,"text":4679,"children":4680},"\n    matrix:det\n  ",[4681],{"id":2787,"depth":4511,"text":4682},"\n    matrix:det matrix\n  ",{"id":2810,"depth":4492,"text":4684,"children":4685},"\n    matrix:rank\n  ",[4686],{"id":2815,"depth":4511,"text":4687},"\n    matrix:rank matrix\n  ",{"id":2839,"depth":4492,"text":4689,"children":4690},"\n    matrix:trace\n  ",[4691],{"id":2844,"depth":4511,"text":4692},"\n    matrix:trace matrix\n  ",{"id":2868,"depth":4492,"text":4694,"children":4695},"\n    matrix:solve\n  ",[4696],{"id":2873,"depth":4511,"text":4697},"\n    matrix:solve a c\n  ",{"id":3017,"depth":4492,"text":4699,"children":4700},"\n    matrix:forecast-linear-growth\n  ",[4701],{"id":3022,"depth":4511,"text":4702},"\n    matrix:forecast-linear-growth data-list\n  ",{"id":3210,"depth":4492,"text":4704,"children":4705},"\n    matrix:forecast-compound-growth\n  ",[4706],{"id":3215,"depth":4511,"text":4707},"\n    matrix:forecast-compound-growth data-list\n  ",{"id":3434,"depth":4492,"text":4709,"children":4710},"\n    matrix:forecast-continuous-growth\n  ",[4711],{"id":3439,"depth":4511,"text":4712},"\n    matrix:forecast-continuous-growth data-list\n  ",{"id":3637,"depth":4492,"text":4714,"children":4715},"\n    matrix:regress\n  ",[4716],{"id":3642,"depth":4511,"text":4717},"\n    matrix:regress data-matrix\n  ","Documentation for the Matrix extension.","md",{"source":4721,"metadataOutputPath":4722,"projectConfig":4723,"language":4725,"output":4734,"inheritFrom":4735,"version":4730,"icon":4736,"extensionName":4737,"assetsRoot":4732},"../../external/extensions/matrix/matrix.md","content/matrix.metadata.yaml",{"defaults":4724,"projectRoot":679,"outputRoot":4731,"scanRoot":4732,"engine":4733,"version":4730,"dedupeIdenticalDiskWrites":4734},{"language":4725,"output":4726,"inheritFrom":4727,"extension":4719,"title":4729,"version":4730},"en",false,[4728],0,"NetLogo User Manual","7.0.1","content","/Volumes/CCL/netlogo/Helio/external/extensions/matrix","mustache",true,[4728],"i-mdi-matrix",{"shortName":12,"fullName":21},"/matrix",{"title":5,"description":4718},"IclcFBc4MkF9wTpZCgWBRCk2XqCprTHrpcNqKJ_xAnk",[4742,4747],{"title":4743,"path":4744,"stem":4745,"description":4746},"Mathematica Link","/mathematica","mathematica","Information about integrating NetLogo with Mathematica for advanced mathematical analysis and computation.",{"title":4748,"path":4749,"stem":4750,"description":4751},"Matrix Extension Dictionary: -","/matrix/-","matrix/-","Documentation for the - primitive.",1761669089268]