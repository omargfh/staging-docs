[{"data":1,"prerenderedAt":1024},["ShallowReactive",2],{"/tutorial2":3,"/tutorial2-surround":1015},{"id":4,"title":5,"body":6,"description":985,"extension":986,"meta":987,"navigation":1001,"path":1011,"seo":1012,"stem":1013,"__hash__":1014},"content/tutorial2.md","Tutorial #2: Commands",{"type":7,"value":8,"toc":972},"minimark",[9,21,25,28,77,85,102,105,108,115,123,126,133,136,233,241,244,308,361,372,378,381,388,409,482,516,528,531,543,572,629,642,649,655,680,683,686,689,703,706,724,727,730,733,759,762,787,790,823,832,865,868,871,955,962,965],[10,11,15],"h1",{"id":12,"className":13},"tutorial-2-commands",[14],"section-heading",[16,17,5],"a",{"className":18,"href":20},[19],"section-anchor","#tutorial-2-commands",[22,23,24],"p",{},"So far you’ve successfully navigated your way through opening and running\nmodels, pressing buttons, changing sliders and switches, and gathering\ninformation from a model using plots and monitors.",[22,26,27],{},"In this section, the focus will start to shift from observing models to\nmanipulating models. You will start to see the inner workings of the models and\nbe able to change how they look.",[29,30,33,43],"div",{"className":31},[32],"toc",[34,35,38],"h4",{"id":36,"className":37},"table-of-contents",[14],[16,39,42],{"className":40,"href":41},[19],"#table-of-contents","Table of Contents",[44,45,46,53,59,65,71],"ul",{},[47,48,49],"li",{},[16,50,52],{"href":51},"#sample-model-traffic-basic","Sample Model: Traffic Basic",[47,54,55],{},[16,56,58],{"href":57},"#command-center","Command Center",[47,60,61],{},[16,62,64],{"href":63},"#working-with-colors","Working with colors",[47,66,67],{},[16,68,70],{"href":69},"#agent-monitors-and-agent-commanders","Agent Monitors and Agent Commanders",[47,72,73],{},[16,74,76],{"href":75},"#whats-next","What’s Next?",[78,79,82],"h2",{"id":80,"className":81},"sample-model-traffic-basic",[14],[16,83,52],{"className":84,"href":51},[19],[86,87,88],"blockquote",{},[44,89,90,93,96,99],{},[47,91,92],{},"Open the Models Library (from the File menu).",[47,94,95],{},"Open Traffic Basic, found in the “Social Science” section.",[47,97,98],{},"Run the model for a while to get a feel for it.",[47,100,101],{},"Consult the Info tab for any questions you may have.",[22,103,104],{},"In this model, you will notice one red car in a stream of blue cars. The stream\nof cars are all moving in the same direction. Every so often they “pile up” and\nstop moving. This is modeling how traffic jams can form without a specific cause\nlike an accident.",[22,106,107],{},"You may alter the settings and observe a few runs to get a fuller understanding\nof the model.",[86,109,110],{},[22,111,114],{"className":112},[113],"question","As you are using the Traffic Basic model, have you noticed any | additions",[22,116,117,118,122],{},"Looking at the Traffic Basic model, you may notice the environment is fairly\nsimple; a black background with a white street and number of blue cars and one\nred car. Changes that could be made to the model include: changing the color and\nshape of the cars, adding a house or street light, creating a stop light, or\neven creating another lane of traffic. Some of these suggested changes are\nvisual, to enhance the look of the model, while others are more behavioral. We\nwill be focusing more on the simpler or cosmetic changes throughout most of this\ntutorial. (",[16,119,121],{"href":120},"tutorial3","Tutorial #3"," will go into greater detail about\nbehavioral changes, which require changing the Code tab.)",[22,124,125],{},"To make these simple changes we will be using the Command Center.",[78,127,130],{"id":128,"className":129},"command-center",[14],[16,131,58],{"className":132,"href":57},[19],[22,134,135],{},"The Command Center is found in the Interface tab. It allows you to enter\ncommands or directions to a model. Commands are instructions you can give to\nNetLogo’s agents: turtles, patches, links, and the observer.",[86,137,138,141,155,168,173,177,180,184,187,191,200,205,213,217,220],{},[22,139,140],{},"In Traffic Basic:",[44,142,143,146,149,152],{},[47,144,145],{},"Press the “setup” button.",[47,147,148],{},"Locate the Command Center.",[47,150,151],{},"Click the mouse in the white box at the bottom of the Command Center.",[47,153,154],{},"Type the text shown here:",[22,156,157],{},[158,159],"img",{"alt":160,"className":161,"src":163,"width":164,"height":165,"style":166},"tutorial2/cc-set-patches-yellow.png",[162],"netlogo-image","/_content/images/tutorial2/cc-set-patches-yellow.png",769,134,{"aspectRatio":167},"769/134",[44,169,170],{},[47,171,172],{},"Press the return key.",[22,174,176],{"className":175},[113],"What happened to the View?",[22,178,179],{},"You may have noticed the background of the View has turned all yellow and the\nstreet has disappeared.",[22,181,183],{"className":182},[113],"Why didn’t the cars turn yellow too?",[22,185,186],{},"Looking back at the command that was written, we asked only the patches to\nchange their color. In this model, the cars are represented by a different\nkind of agent, called “turtles”. Therefore, the cars did not receive these\ninstructions and thus did not change.",[22,188,190],{"className":189},[113],"What happened in the Command Center?",[22,192,193,194],{},"You may have noticed that the command you just typed is now displayed in the\nCommand Center as shown below: ",[158,195],{"alt":196,"className":197,"src":198,"width":164,"height":165,"style":199},"tutorial2/commandcenterhistory.png",[162],"/_content/images/tutorial2/commandcenterhistory.png",{"aspectRatio":167},[44,201,202],{},[47,203,204],{},"Type in the bottom of the Command Center the text shown below:",[22,206,207],{},[158,208],{"alt":209,"className":210,"src":211,"width":164,"height":165,"style":212},"tutorial2/cc-set-turtles-brown.png",[162],"/_content/images/tutorial2/cc-set-turtles-brown.png",{"aspectRatio":167},[22,214,216],{"className":215},[113],"Was the result what you expected?",[22,218,219],{},"The view should have a yellow background with a line of brown cars in the\nmiddle:",[22,221,224,225],{"className":222},[223],"screenshot","\n  ",[158,226],{"alt":227,"width":228,"src":229,"height":230,"style":231},"screen shot","90%","/_content/images/tutorial2/export-view-brown-cars-on-yellow.png",117,{"aspectRatio":232},"663/117",[22,234,235,236,240],{},"The NetLogo world is a two dimensional world that is made up of turtles,\npatches, links, and an observer. The patches are the ground over which the\nturtles move. Links are connections between turtles. And the observer is a being\nthat oversees everything that is going on. (For more specifics, refer to the\n",[16,237,239],{"href":238},"/programming","NetLogo Programming Guide",".)",[22,242,243],{},"In the Command Center you can give commands to any of these types of agents. You\nchoose which type to talk to by using the popup menu located in the bottom left\ncorner. You can also use the tab key on your keyboard to cycle through the\ndifferent types.",[86,245,246,251,262,300,304],{},[44,247,248],{},[47,249,250],{},"In the Command Center, click on the “observer>” in the bottom left corner:",[22,252,253],{},[158,254],{"alt":255,"className":256,"src":257,"width":258,"height":259,"style":260},"tutorial2/cc-context-menu.png",[162],"/_content/images/tutorial2/cc-context-menu.png",777,125,{"aspectRatio":261},"777/125",[44,263,264,267,292,295],{},[47,265,266],{},"Choose “turtles” from the popup menu.",[47,268,269,270,291],{},"Type ",[271,272,273,280,281,280,286],"code",{},[274,275,279],"span",{"className":276},[277,278],"token","command","set"," ",[274,282,285],{"className":283},[277,284],"reporter","color",[274,287,290],{"className":288},[277,289],"constant","pink"," and press return.",[47,293,294],{},"Press the tab key until you see “patches>” in the bottom left corner.",[47,296,269,297,291],{},[271,298,299],{},"set pcolor white",[22,301,303],{"className":302},[113],"What does the View look like now?",[22,305,307],{"className":306},[113],"Do you notice any differences between these two commands and the | observer",[22,309,310,311,324,325,347,348,360],{},"The observer oversees the world and therefore can give a command to the patches\nor turtles using ",[271,312,315],{"className":313},[314],"netlogo-command",[16,316,320],{"href":317,"className":318,"dataDisplayText":320,"rel":321,"target":323,"title":320},"/dictionary#ask",[319],"netlogo-wiki-link","ask",[322],"noopener","_self",". Like in the first example (observer>\n",[271,326,327,280,330,334,335,280,338,280,342,346],{},[274,328,320],{"className":329},[277,278],[274,331,333],{"className":332},[277,284],"patches"," [",[274,336,279],{"className":337},[277,278],[274,339,341],{"className":340},[277,284],"pcolor",[274,343,345],{"className":344},[277,289],"yellow","]","), the observer has to ask the patches to set\ntheir pcolor to yellow. But when a command is directly given to a group of\nagents like in the second example (patches> ",[271,349,350,280,353,280,356],{},[274,351,279],{"className":352},[277,278],[274,354,341],{"className":355},[277,284],[274,357,359],{"className":358},[277,289],"white","), you only have\nto give the command itself.",[86,362,363,368],{},[44,364,365],{},[47,366,367],{},"Press “setup”.",[22,369,371],{"className":370},[113],"What happened?",[22,373,374,375,240],{},"Why did the View revert back to the old version, with the black background and\nwhite road? Upon pressing the “setup” button, the model will reconfigure itself\nback to the settings outlined in the Code tab. The Command Center doesn’t\npermanently change the model. It allows you to manipulate the NetLogo world\ndirectly to further answer those “What if” questions that pop up as you are\ninvestigating the models. (The Code tab is explained in the next tutorial, and\nin the ",[16,376,377],{"href":238},"Programming Guide",[22,379,380],{},"Now that we have familiarized ourselves with the Command Center, let’s look at\nsome more details about how colors work in NetLogo.",[78,382,385],{"id":383,"className":384},"working-with-colors",[14],[16,386,64],{"className":387,"href":63},[19],[22,389,390,391,399,400,408],{},"You may have noticed in the previous section that we used two different words\nfor changing color: ",[271,392,394],{"className":393},[314],[16,395,285],{"href":396,"className":397,"dataDisplayText":285,"rel":398,"target":323,"title":285},"/dictionary#color",[319],[322]," and ",[271,401,403],{"className":402},[314],[16,404,341],{"href":405,"className":406,"dataDisplayText":341,"rel":407,"target":323,"title":341},"/dictionary#pcolor",[319],[322],".",[86,410,411,415,434,438,441,466],{},[22,412,414],{"className":413},[113],"What is the difference between color and pcolor?",[44,416,417,420],{},[47,418,419],{},"Choose “turtles” from the popup menu in the Command Center (or use the tab\nkey).",[47,421,269,422,291],{},[271,423,424,280,427,280,430],{},[274,425,279],{"className":426},[277,278],[274,428,285],{"className":429},[277,284],[274,431,433],{"className":432},[277,289],"blue",[22,435,437],{"className":436},[113],"What happened to the cars?",[22,439,440],{},"Think about what you did to make the cars turn blue, and try to make the\npatches turn red.",[22,442,443,444,456,457],{},"If you try to ask the patches to ",[271,445,446,280,449,280,452],{},[274,447,279],{"className":448},[277,278],[274,450,285],{"className":451},[277,284],[274,453,455],{"className":454},[277,289],"red",", an error message occurs:\n",[158,458],{"alt":459,"className":460,"src":461,"width":462,"height":463,"style":464},"tutorial2/cc-error-patch-color.png",[162],"/_content/images/tutorial2/cc-error-patch-color.png",433,145,{"aspectRatio":465},"433/145",[44,467,468],{},[47,469,269,470,481],{},[271,471,472,280,475,280,478],{},[274,473,279],{"className":474},[277,278],[274,476,341],{"className":477},[277,284],[274,479,455],{"className":480},[277,289]," instead and press return.",[22,483,484,485,399,492,499,500,507,508,515],{},"We call ",[271,486,488],{"className":487},[314],[16,489,285],{"href":396,"className":490,"dataDisplayText":285,"rel":491,"target":323,"title":285},[319],[322],[271,493,495],{"className":494},[314],[16,496,341],{"href":405,"className":497,"dataDisplayText":341,"rel":498,"target":323,"title":341},[319],[322]," “variables”. Some commands and variables are\nspecific to turtles and some are specific to patches. For example, the ",[271,501,503],{"className":502},[314],[16,504,285],{"href":396,"className":505,"dataDisplayText":285,"rel":506,"target":323,"title":285},[319],[322],"\nvariable is a turtle variable, while the ",[271,509,511],{"className":510},[314],[16,512,341],{"href":405,"className":513,"dataDisplayText":341,"rel":514,"target":323,"title":341},[319],[322]," variable is a patch\nvariable.",[22,517,518,519,527],{},"Go ahead and practice altering the colors of the turtles and patches using the\n",[271,520,522],{"className":521},[314],[16,523,279],{"href":524,"className":525,"dataDisplayText":279,"rel":526,"target":323,"title":279},"/dictionary#set",[319],[322]," command and these two variables.",[22,529,530],{},"To be able to make more changes to the colors of turtles and patches, or shall\nwe say cars and backgrounds, we need to gain a little insight into how NetLogo\ndeals with colors.",[22,532,533,534],{},"In NetLogo, colors have a numeric value. In all of the exercises we have been\nusing the name of the color. This is because NetLogo recognizes 16 different\ncolor names. This does not mean that NetLogo only recognizes 16 colors. There\nare many shades in between these colors that can be used too. Here’s a chart\nthat shows the whole NetLogo color space: ",[158,535],{"alt":536,"className":537,"src":538,"width":539,"height":540,"style":541},"tutorial2/color chart",[162],"/_content/images/colors.png",510,450,{"aspectRatio":542},"510/450",[22,544,545,546,557,558,571],{},"To get an intermediate shade, you refer to it by a number instead, or by adding\nor subtracting a number from a name. For example, when you type ",[271,547,548,280,551,280,554],{},[274,549,279],{"className":550},[277,278],[274,552,285],{"className":553},[277,284],[274,555,455],{"className":556},[277,289],",\nthis does the same thing as if you had typed ",[271,559,560,280,563,280,566],{},[274,561,279],{"className":562},[277,278],[274,564,285],{"className":565},[277,284],[274,567,570],{"className":568},[277,569],"number","15",". And you can get a\nlighter or darker version of the same color by using a number that is a little\nlarger or a little smaller, as follows.",[86,573,574,601,604,626],{},[44,575,576,579],{},[47,577,578],{},"Choose “patches” from the popup menu in the Command Center (or use the tab\nkey).",[47,580,269,581,600],{},[271,582,583,280,586,280,589,280,592,280,596],{},[274,584,279],{"className":585},[277,278],[274,587,341],{"className":588},[277,284],[274,590,455],{"className":591},[277,289],[274,593,595],{"className":594},[277,284],"-",[274,597,599],{"className":598},[277,569],"2"," (The spacing around the ”-” is important.)",[22,602,603],{},"By subtracting from red, you make it darker.",[44,605,606],{},[47,607,269,608],{},[271,609,610,280,613,280,616,280,619,280,623],{},[274,611,279],{"className":612},[277,278],[274,614,341],{"className":615},[277,284],[274,617,455],{"className":618},[277,289],[274,620,622],{"className":621},[277,284],"+",[274,624,599],{"className":625},[277,569],[22,627,628],{},"By adding to red, you make it lighter.",[22,630,631,632,636,637,641],{},"You can use this technique on any of the colors listed in the chart. NetLogo\nallows you to use the whole spectrum of For information on the different ways\ncolors are represented in NetLogo see the ",[16,633,635],{"href":634},"/programming#colors","Colors","\nsection of the NetLogo Programming Guide. The\n",[16,638,640],{"href":639},"colorpicker","Color Picker Guide"," explains how to choose colors using a\ndialog.",[78,643,646],{"id":644,"className":645},"agent-monitors-and-agent-commanders",[14],[16,647,70],{"className":648,"href":69},[19],[22,650,651,652,654],{},"In the previous activity, we used the ",[271,653,279],{}," command to change the colors of all\nthe cars. But if you recall, the original model contained one red car amongst a\ngroup of blue cars. Let’s look at how to change only one car’s color.",[86,656,657,668],{},[44,658,659,662,665],{},[47,660,661],{},"Press “setup” to get the red car to reappear.",[47,663,664],{},"Right-click on the red car.",[47,666,667],{},"If there is another turtle close to the red turtle you’ll see more than one\nturtle listed at the bottom of the menu. Move your mouse over the turtle\nselections, notice when your mouse highlights a turtle menu item that turtle\nis highlighted in the view. Select “inspect turtle” from the sub-menu for\nthe red turtle.",[22,669,670,671],{},"A turtle monitor for that car will appear: ",[158,672],{"alt":673,"className":674,"src":675,"width":676,"height":677,"style":678},"tutorial2/car-inspector.png",[162],"/_content/images/tutorial2/car-inspector.png",302,696,{"aspectRatio":679},"302/696",[22,681,682],{},"The mini-view at the top of the agent monitor will always stay centered on this\nagent. You can zoom the view in and out using the slider below the view and you\ncan watch this turtle in the main view by pressing the “watch-me” button.",[22,684,685],{},"Taking a closer look at this turtle monitor, we can see all of the variables\nthat belong to the red car. A variable is a location that holds a value.",[22,687,688],{},"Let’s take a closer look at the turtle monitor:",[86,690,691,695,699],{},[22,692,694],{"className":693},[113],"What is this turtle’s who number?",[22,696,698],{"className":697},[113],"What color is this turtle?",[22,700,702],{"className":701},[113],"What shape is this turtle?",[22,704,705],{},"This turtle monitor is showing a turtle that has a who number of 0, a color of\n15 (red — see chart above), and the shape of a car.",[22,707,708,709,723],{},"There are two other ways to open a turtle monitor besides right-clicking. One\nway is to choose “Turtle Monitor” from the Tools menu, then type the who number\nof the turtle you want to inspect into the “who” field and press return. The\nother way is to type ",[271,710,711,280,715,280,719],{},[274,712,714],{"className":713},[277,278],"inspect",[274,716,718],{"className":717},[277,284],"turtle",[274,720,722],{"className":721},[277,569],"0"," (or other who number) into the Command\nCenter.",[22,725,726],{},"You close a turtle monitor by clicking the close box in the upper left hand\ncorner (Mac) or upper right hand corner (other operating systems).",[22,728,729],{},"Now that we know more about Agent Monitors, we have three ways to change an\nindividual turtle’s color.",[22,731,732],{},"One way is to use the box called an Agent Commander found at the bottom of an\nAgent Monitor. You type commands here, just like in the Command Center, but the\ncommands you type here are only done by this particular turtle.",[86,734,735,751,755],{},[44,736,737],{},[47,738,739,740,408],{},"In the Agent Commander of the Turtle Monitor for turtle 0, type\n",[271,741,742,280,745,280,748],{},[274,743,279],{"className":744},[277,278],[274,746,285],{"className":747},[277,284],[274,749,290],{"className":750},[277,289],[22,752,754],{"className":753},[113],"What happens in the View?",[22,756,758],{"className":757},[113],"Did anything change in the Turtle Monitor?",[22,760,761],{},"A second way to change one turtle’s color is to go directly to the color\nvariable in the Turtle Monitor and change the value.",[86,763,764,784],{},[44,765,766,769],{},[47,767,768],{},"Select the text to the right of “color” in the Turtle Monitor.",[47,770,771,772,408],{},"Type in a new color such as ",[271,773,774,280,778,280,781],{},[274,775,777],{"className":776},[277,289],"green",[274,779,622],{"className":780},[277,284],[274,782,599],{"className":783},[277,569],[22,785,371],{"className":786},[113],[22,788,789],{},"The third way to change an individual turtle’s or patch’s color is to use the\nobserver. Since, the observer oversees the NetLogo world, it can give commands\nthat affect individual turtles, as well as groups of turtles.",[86,791,792,819],{},[44,793,794,797],{},[47,795,796],{},"In the Command Center, select “observer” from the popup menu (or use the tab\nkey).",[47,798,269,799,291],{},[271,800,801,280,804,280,807,334,810,280,813,280,816,346],{},[274,802,320],{"className":803},[277,278],[274,805,718],{"className":806},[277,284],[274,808,722],{"className":809},[277,569],[274,811,279],{"className":812},[277,278],[274,814,285],{"className":815},[277,284],[274,817,433],{"className":818},[277,289],[22,820,822],{"className":821},[113],"What happens?",[86,824,825,828],{},[22,826,827],{},"Just as there are Turtle Monitors, there are also Patch Monitors, which work\nvery similarly.",[22,829,831],{"className":830},[113],"Can you make a patch monitor and use it to change the color of a single |",[22,833,834,835,856,857],{},"If you try to have the observer ",[271,836,837,280,840,280,844,334,847,280,850,280,853,346],{},[274,838,320],{"className":839},[277,278],[274,841,843],{"className":842},[277,284],"patch",[274,845,722],{"className":846},[277,569],[274,848,279],{"className":849},[277,278],[274,851,341],{"className":852},[277,284],[274,854,433],{"className":855},[277,289],", you’ll get an\nerror message: ",[158,858],{"alt":859,"className":860,"src":861,"width":164,"height":862,"style":863},"tutorial2/cc-error-expected-number.png",[162],"/_content/images/tutorial2/cc-error-expected-number.png",128,{"aspectRatio":864},"769/128",[22,866,867],{},"To ask an individual turtle to do something, we use its who number. But patches\ndon’t have who numbers, therefore we need to refer to them some other way.",[22,869,870],{},"Remember, patches are arranged on a coordinate system. Two numbers are needed to\nplot a point on a graph: an x-axis value and a y-axis value. Patch locations are\ndesignated in the same way as plotting a point.",[86,872,873,878,888,900,903,920,923,926],{},[44,874,875],{},[47,876,877],{},"Open a patch monitor for any patch.",[22,879,880],{},[158,881],{"alt":882,"className":883,"src":884,"width":676,"height":885,"style":886},"tutorial2/patch-inspector.png",[162],"/_content/images/tutorial2/patch-inspector.png",534,{"aspectRatio":887},"302/534",[22,889,890,891,895,896,899],{},"The monitor shows that for the patch in the picture, its\n",[16,892,894],{"href":893},"dictionary#pcor","pxcor"," variable is -19 and its\n",[16,897,898],{"href":893},"pycor"," variable is 0. If we go back to the analogy of\nthe coordinate plane and wanted to plot this point, the point would be found\non the x axis left of the origin, where x=-19 and y=0.",[22,901,902],{},"To tell this particular patch to change color:",[44,904,905],{},[47,906,907,908,919],{},"In the bottom of the patch monitor, enter ",[271,909,910,280,913,280,916],{},[274,911,279],{"className":912},[277,278],[274,914,341],{"className":915},[277,284],[274,917,433],{"className":918},[277,289]," and press\nreturn.",[22,921,922],{},"Typing a command in a turtle or patch monitor addresses only that turtle or\npatch.",[22,924,925],{},"You can also talk to a single patch from the Command Center:",[44,927,928],{},[47,929,930,931,919],{},"In the Command Center, enter ",[271,932,933,280,936,280,939,280,943,334,946,280,949,280,952,346],{},[274,934,320],{"className":935},[277,278],[274,937,843],{"className":938},[277,284],[274,940,942],{"className":941},[277,569],"-19",[274,944,722],{"className":945},[277,569],[274,947,279],{"className":948},[277,278],[274,950,341],{"className":951},[277,284],[274,953,777],{"className":954},[277,289],[78,956,959],{"id":957,"className":958},"whats-next",[14],[16,960,76],{"className":961,"href":75},[19],[22,963,964],{},"At this point, you may want to take some time to try out the techniques you’ve\nlearned on some of the other models in the Models Library.",[22,966,967,968,971],{},"In ",[16,969,970],{"href":120},"Tutorial #3: Procedures"," you can learn how to alter and\nextend existing models and build your own models.",{"title":973,"searchDepth":974,"depth":975,"links":976},"",5,3,[977,979,981,982,983,984],{"id":36,"depth":978,"text":42},4,{"id":80,"depth":980,"text":52},2,{"id":128,"depth":980,"text":58},{"id":383,"depth":980,"text":64},{"id":644,"depth":980,"text":70},{"id":957,"depth":980,"text":76},"Second tutorial in the NetLogo learning series, covering basic commands and programming concepts in NetLogo.","md",{"source":988,"metadataOutputPath":989,"projectConfig":990,"language":992,"output":1001,"inheritFrom":1002,"version":997,"keywords":1003,"tags":1008,"icon":1009,"assetsRoot":1010},"autogen/tutorial2.md","content/tutorial2.metadata.yaml",{"defaults":991,"projectRoot":408,"outputRoot":998,"scanRoot":999,"engine":1000,"version":997,"dedupeIdenticalDiskWrites":1001},{"language":992,"output":993,"inheritFrom":994,"extension":986,"title":996,"version":997},"en",false,[995],0,"NetLogo User Manual","7.0.1","content","autogen","handlebars",true,[995],[1004,1005,1006,1007],"Tutorial","Commands","Programming","NetLogo",[1004,1005,1006],"i-fluent-mdl2-learning-tools","/Volumes/CCL/netlogo/Helio/apps/docs-nuxt/autogen","/tutorial2",{"title":5,"description":985},"tutorial2","KBgXCzlhZpsOCGgifs8bTjpziHWYJmu5DPE4QP8I_C8",[1016,1021],{"title":1017,"path":1018,"stem":1019,"description":1020},"Tutorial #1: Models","/tutorial1","tutorial1","First tutorial in the NetLogo learning series, introducing basic concepts of exploring and running NetLogo models.",{"title":970,"path":1022,"stem":120,"description":1023},"/tutorial3","Third tutorial in the NetLogo learning series, focusing on creating and using procedures in NetLogo programming.",1761669088114]