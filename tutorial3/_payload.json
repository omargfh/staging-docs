[{"data":1,"prerenderedAt":3431},["ShallowReactive",2],{"/tutorial3":3,"/tutorial3-surround":3420},{"id":4,"title":5,"body":6,"description":3391,"extension":3392,"meta":3393,"navigation":3407,"path":3416,"seo":3417,"stem":3418,"__hash__":3419},"content/tutorial3.md","Tutorial #3: Procedures",{"type":7,"value":8,"toc":3368},"minimark",[9,21,25,134,142,145,148,151,154,161,164,189,203,206,209,283,295,298,325,328,419,430,433,436,443,449,459,462,469,472,492,503,506,509,543,554,565,657,682,688,739,748,751,759,766,769,798,832,841,871,874,877,884,887,1068,1079,1085,1092,1095,1098,1101,1126,1169,1175,1299,1326,1329,1400,1403,1421,1428,1431,1461,1471,1491,1494,1543,1554,1595,1598,1605,1612,1615,1618,1644,1655,1770,1787,1790,1800,1809,1816,1819,2065,2088,2123,2129,2136,2139,2150,2153,2160,2163,2177,2243,2255,2262,2265,2277,2284,2287,2299,2302,2305,2312,2318,2327,2330,2408,2411,2442,2449,2452,2509,2512,2515,2720,2723,2730,2733,2736,2739,2756,2759,2773,2776,2779,2786,2789,2792,2795],[10,11,15],"h1",{"id":12,"className":13},"tutorial-3-procedures",[14],"section-heading",[16,17,5],"a",{"className":18,"href":20},[19],"section-anchor","#tutorial-3-procedures",[22,23,24],"p",{},"This tutorial leads you through the process of building a complete model, built\nup in stages, with every step explained along the way.",[26,27,30,40],"div",{"className":28},[29],"toc",[31,32,35],"h4",{"id":33,"className":34},"table-of-contents",[14],[16,36,39],{"className":37,"href":38},[19],"#table-of-contents","Table of Contents",[41,42,43,50,56,62,68,74,80,86,92,98,104,110,116,122,128],"ul",{},[44,45,46],"li",{},[16,47,49],{"href":48},"#agents-and-procedures","Agents and procedures",[44,51,52],{},[16,53,55],{"href":54},"#making-the-setup-button","Making the setup button",[44,57,58],{},[16,59,61],{"href":60},"#switching-to-tick-based-view-updates","Switching to tick-based view updates",[44,63,64],{},[16,65,67],{"href":66},"#making-the-go-button","Making the go button",[44,69,70],{},[16,71,73],{"href":72},"#experimenting-with-commands","Experimenting with commands",[44,75,76],{},[16,77,79],{"href":78},"#patches-and-variables","Patches and variables",[44,81,82],{},[16,83,85],{"href":84},"#turtle-variables","Turtle variables",[44,87,88],{},[16,89,91],{"href":90},"#monitors","Monitors",[44,93,94],{},[16,95,97],{"href":96},"#switches-and-labels","Switches and labels",[44,99,100],{},[16,101,103],{"href":102},"#more-procedures","More procedures",[44,105,106],{},[16,107,109],{"href":108},"#plotting","Plotting",[44,111,112],{},[16,113,115],{"href":114},"#tick-counter","Tick counter",[44,117,118],{},[16,119,121],{"href":120},"#some-more-details","Some more details",[44,123,124],{},[16,125,127],{"href":126},"#whats-next","What’s next?",[44,129,130],{},[16,131,133],{"href":132},"#appendix-complete-code","Appendix: Complete code",[135,136,139],"h2",{"id":137,"className":138},"agents-and-procedures",[14],[16,140,49],{"className":141,"href":48},[19],[22,143,144],{},"In Tutorial #2, you learned how to use the command center and agent monitors to\ninspect and modify agents and make them do things. Now you’re ready to learn\nabout the real heart of a NetLogo model: the Code tab.",[22,146,147],{},"You’ve seen that agents in NetLogo are divided into patches, turtles, links, and\nthe observer. Patches are stationary and arranged in a grid. Turtles move over\nthat grid. Links connect two turtles. The observer oversees everything that’s\ngoing on and does whatever the turtles, patches and links can’t do for\nthemselves.",[22,149,150],{},"All four types of agents can run NetLogo commands. All four can also run\n“procedures”. A procedure combines a series of NetLogo commands into a single\nnew command that you define.",[22,152,153],{},"You will now learn to write procedures that make turtles move, eat, reproduce,\nand die. You will also learn how to make monitors, sliders, and plots. The model\nwe’ll build is a simple ecosystem model not unlike Wolf Sheep Predation from\nTutorial #1.",[135,155,158],{"id":156,"className":157},"making-the-setup-button",[14],[16,159,55],{"className":160,"href":54},[19],[22,162,163],{},"To start a new model, select “New” from the File menu. Then begin by creating a\nsetup button:",[165,166,167],"blockquote",{},[41,168,169,172,175,178,186],{},[44,170,171],{},"Click the “Add” icon in the toolbar at the top of the Interface tab.",[44,173,174],{},"On the menu next to Add, select Button (if it isn’t already selected).",[44,176,177],{},"Click wherever you want the button to appear in the empty white area of the\nInterface tab.",[44,179,180,181,185],{},"A dialog box for editing the button opens. Type ",[182,183,184],"code",{},"setup"," in the box labeled\n“Commands”.",[44,187,188],{},"Press the OK button when you’re done; the dialog box closes.",[22,190,191,192],{},"Now you have a setup button. Pressing the button runs a procedure called\n“setup”. A procedure is a sequence of NetLogo commands that we assign a new\nname. We’ll define that procedure soon, but we haven’t yet. The button refers to\na procedure that doesn’t exist, so the button turns red: ",[193,194],"img",{"alt":195,"className":196,"src":198,"width":199,"height":200,"style":201},"tutorial3/errors.png",[197],"netlogo-image","/_content/images/tutorial3/errors.png",541,286,{"aspectRatio":202},"541/286",[22,204,205],{},"If you want to see the actual error message, click the button.",[22,207,208],{},"Now we’ll create the “setup” procedure, so the error message will go away:",[165,210,211],{},[41,212,213,216],{},[44,214,215],{},"Switch to the Code tab.",[44,217,218,219],{},"Type the following:",[220,221,222],"pre",{},[182,223,224,225,224,232,236,239,240,245,239,247,224,251,256,257,224,261,224,266,270,271,239,273,277,224,279],{}," ",[226,227,231],"span",{"className":228},[229,230],"token","keyword"," to",[226,233,184],{"className":234},[229,235],"variable",[237,238],"br",{},"    ",[226,241,244],{"className":242},[229,243],"command","clear-all",[237,246],{},[226,248,250],{"className":249},[229,243],"create-turtles",[226,252,255],{"className":253},[229,254],"number","100"," [ ",[226,258,260],{"className":259},[229,243],"setxy",[226,262,265],{"className":263},[229,264],"reporter","random-xcor",[226,267,269],{"className":268},[229,264],"random-ycor"," ]",[237,272],{},[226,274,276],{"className":275},[229,243],"reset-ticks",[237,278],{},[226,280,282],{"className":281},[229,230]," end",[22,284,285,286],{},"When you’re done, the Code tab looks like this: ",[193,287],{"alt":288,"className":289,"src":290,"width":291,"height":292,"style":293},"tutorial3/setupcode.png",[197],"/_content/images/tutorial3/setupcode.png",556,254,{"aspectRatio":294},"556/254",[22,296,297],{},"Note that some lines are indented. Most people find it helpful to indent their\ncode. It isn’t mandatory, but it makes the code easier to read and change.",[22,299,300,301,314,315,324],{},"Your procedure begins with ",[182,302,305],{"className":303},[304],"netlogo-command",[16,306,310],{"href":307,"className":308,"dataDisplayText":310,"rel":311,"target":313,"title":310},"/dictionary#to",[309],"netlogo-wiki-link","to",[312],"noopener","_self"," and ends with ",[182,316,318],{"className":317},[304],[16,319,322],{"href":320,"className":321,"dataDisplayText":322,"rel":323,"target":313,"title":322},"/dictionary#end",[309],"end",[312],". Every procedure begins\nand ends with these words.",[22,326,327],{},"Let’s look at what you typed in and see what each line of your procedure does:",[41,329,330,341,348,359,365,405,412],{},[44,331,332,340],{},[182,333,334,224,337],{},[226,335,310],{"className":336},[229,230],[226,338,184],{"className":339},[229,235]," begins defining a procedure named “setup”.",[44,342,343,347],{},[226,344,345],{},[226,346,244],{}," resets the world to an initial, empty state. All the patches\nturn black and any turtles you might have created disappear. Basically, it\nwipes the slate clean for a new model run.",[44,349,350,358],{},[182,351,352,224,355],{},[226,353,250],{"className":354},[229,243],[226,356,255],{"className":357},[229,254]," creates 100 turtles. They start out standing at the\norigin, that is, the center of patch 0,0.",[44,360,361,362,364],{},"After ",[182,363,250],{}," we can put commands for the new turtles to run,\nenclosed by square brackets.",[44,366,367,378,379,387,388,395,396,404],{},[182,368,369,224,372,224,375],{},[226,370,260],{"className":371},[229,243],[226,373,265],{"className":374},[229,264],[226,376,269],{"className":377},[229,264]," is a command using “reporters”. A reporter, as\nopposed to a command, reports a result. First each turtle runs the reporter\n",[182,380,382],{"className":381},[304],[16,383,265],{"href":384,"className":385,"dataDisplayText":265,"rel":386,"target":313,"title":265},"/dictionary#random-cor",[309],[312]," which will report a random number from the\nallowable range of turtle coordinates along the X axis. Then each turtle runs\nthe reporter ",[182,389,391],{"className":390},[304],[16,392,269],{"href":384,"className":393,"dataDisplayText":269,"rel":394,"target":313,"title":269},[309],[312],", same for the Y axis. Finally each\nturtle runs the ",[182,397,399],{"className":398},[304],[16,400,260],{"href":401,"className":402,"dataDisplayText":260,"rel":403,"target":313,"title":260},"/dictionary#setxy",[309],[312]," command with those two numbers as inputs. That makes\nthe turtle move to the point with those coordinates.",[44,406,407,411],{},[226,408,409],{},[226,410,276],{}," starts the tick counter, now that setup is otherwise complete.",[44,413,414,418],{},[226,415,416],{},[226,417,322],{}," completes the definition of the “setup” procedure.",[22,420,421,422],{},"When you’re done typing, switch to the Interface tab and press the setup button\nyou made before. You will see the turtles scattered around the world:\n",[193,423],{"alt":424,"className":425,"src":426,"width":427,"height":427,"style":428},"tutorial3/scatter.png",[197],"/_content/images/tutorial3/scatter.png",420,{"aspectRatio":429},"420/420",[22,431,432],{},"Press setup a couple more times, and see how the arrangement of turtles is\ndifferent each time. Note that some turtles may be right on top of each other.",[22,434,435],{},"Think a bit about what you needed to do to make this happen. You needed to make\na button in the interface and make a procedure that the button uses. The button\nonly worked once you completed both of these separate steps. In the remainder of\nthis tutorial, you will often have to complete two or more similar steps to add\nanother feature to the model. If something doesn’t appear to work after you\ncompleted what you thought is the final step for that new feature, continue to\nread ahead to see if there is still more to do. After reading ahead for a couple\nof paragraphs, you should then go back over the directions to see if there is\nany step you might have missed.",[135,437,440],{"id":438,"className":439},"switching-to-tick-based-view-updates",[14],[16,441,61],{"className":442,"href":60},[19],[22,444,445,446,448],{},"Now that we’re using the tick counter (with ",[182,447,276],{},"), we should tell\nNetLogo that it only needs to update the view once per tick, instead of\ncontinuously updating it.",[165,450,451],{},[41,452,453,456],{},[44,454,455],{},"Find the view updates menu. It’s above the view and by default says\n“continuous”.",[44,457,458],{},"Choose “on ticks” instead.",[22,460,461],{},"This makes your model run faster and ensures a consistent appearance (since the\nupdates will happen at consistent times). See the Programming Guide for a fuller\ndiscussion of view updates.",[135,463,466],{"id":464,"className":465},"making-the-go-button",[14],[16,467,67],{"className":468,"href":66},[19],[22,470,471],{},"Now make a button called “go”. Follow the same steps you used to make the setup\nbutton, except:",[165,473,474],{},[41,475,476,486,489],{},[44,477,478,479,482,483,485],{},"For Commands enter ",[182,480,481],{},"go"," instead of ",[182,484,184],{},".",[44,487,488],{},"Check the “Forever” checkbox in the edit dialog.",[44,490,491],{},"Check the “Disable until ticks start” checkbox too.",[22,493,494],{},[193,495],{"alt":496,"className":497,"src":498,"width":499,"height":500,"style":501},"tutorial3/gobutton.png",[197],"/_content/images/tutorial3/gobutton.png",567,532,{"aspectRatio":502},"567/532",[22,504,505],{},"The “Forever” checkbox makes the button stay down once pressed, so its commands\nrun over and over again, not just once.",[22,507,508],{},"The “Disable until ticks start” prevents you from pressing go before setup.",[165,510,511],{},[41,512,513],{},[44,514,515,516],{},"Then add a go procedure to the Code tab:",[220,517,518],{},[182,519,224,520,224,523,526,239,528,532,239,534,538,224,540],{},[226,521,231],{"className":522},[229,230],[226,524,481],{"className":525},[229,235],[237,527],{},[226,529,531],{"className":530},[229,235],"move-turtles",[237,533],{},[226,535,537],{"className":536},[229,243],"tick",[237,539],{},[226,541,282],{"className":542},[229,230],[22,544,545,553],{},[182,546,548],{"className":547},[304],[16,549,537],{"href":550,"className":551,"dataDisplayText":537,"rel":552,"target":313,"title":537},"/dictionary#tick",[309],[312]," is a primitive that advances the tick counter by one tick.",[22,555,556,557,559,560,562,563,485],{},"But what is ",[182,558,531],{},"? Is it a primitive (in other words, built-in to\nNetLogo)? No, it’s another procedure that you’re about to add. So far, you have\nintroduced two procedures that you added yourself: ",[182,561,184],{}," and ",[182,564,481],{},[165,566,567],{},[41,568,569],{},[44,570,571,572,574,575,577,578],{},"Add the ",[182,573,531],{}," procedure after the ",[182,576,481],{},"procedure:",[220,579,580],{},[182,581,224,582,224,585,588,239,590,593,239,595,598,224,600,603,605,224,607,224,610,613,239,615,224,619,623,624,626,627,224,631,224,635,639,626,641,224,645,649,651,652,224,654],{},[226,583,231],{"className":584},[229,230],[226,586,481],{"className":587},[229,235],[237,589],{},[226,591,531],{"className":592},[229,235],[237,594],{},[226,596,537],{"className":597},[229,243],[237,599],{},[226,601,282],{"className":602},[229,230],[237,604],{},[237,606],{},[226,608,231],{"className":609},[229,230],[226,611,531],{"className":612},[229,235],[237,614],{},[226,616,618],{"className":617},[229,243],"ask",[226,620,622],{"className":621},[229,264],"turtles"," [",[237,625],{},"      ",[226,628,630],{"className":629},[229,243],"right",[226,632,634],{"className":633},[229,264],"random",[226,636,638],{"className":637},[229,254],"360",[237,640],{},[226,642,644],{"className":643},[229,243],"forward",[226,646,648],{"className":647},[229,254],"1",[237,650],{},"    ]",[237,653],{},[226,655,282],{"className":656},[229,230],[22,658,659,660,662,663,678,679,681],{},"Note there are no spaces around the hyphen in ",[182,661,531],{},". In Tutorial #2 we\nused ",[182,664,665,224,670,224,674],{},[226,666,669],{"className":667},[229,668],"constant","red",[226,671,673],{"className":672},[229,264],"-",[226,675,677],{"className":676},[229,254],"2",", with spaces, in order to subtract two numbers, but here we want\n",[182,680,531],{},", without spaces. The ”-” combines “move” and “turtles” into a\nsingle name.",[22,683,684,685,687],{},"Here is what each command in the ",[182,686,531],{}," procedure does:",[41,689,690,705,728],{},[44,691,692,704],{},[182,693,694,224,697,256,700,270],{},[226,695,618],{"className":696},[229,243],[226,698,622],{"className":699},[229,264],[226,701,703],{"className":702},[229,235],"..."," says that each turtle should run the commands in the\nbrackets.",[44,706,707,718,719,727],{},[182,708,709,224,712,224,715],{},[226,710,630],{"className":711},[229,243],[226,713,634],{"className":714},[229,264],[226,716,638],{"className":717},[229,254]," is another command that uses a reporter. First, each turtle\npicks a random whole number between 0 and 359. (",[182,720,722],{"className":721},[304],[16,723,634],{"href":724,"className":725,"dataDisplayText":634,"rel":726,"target":313,"title":634},"/dictionary#random",[309],[312]," doesn’t include the\nnumber you give it as a possible result.) Then the turtle turns right this\nnumber of degrees.",[44,729,730,738],{},[182,731,732,224,735],{},[226,733,644],{"className":734},[229,243],[226,736,648],{"className":737},[229,254]," makes the turtle move forward one step.",[22,740,741,742,744,745,747],{},"Why couldn’t we have just written all of these commands in ",[182,743,481],{}," instead of in a\nseparate procedure? We could have, but during the course of building your\nproject, it’s likely that you’ll add many other parts. We’d like to keep ",[182,746,481],{}," as\nsimple as possible, so that it is easy to understand. Eventually, it will\ninclude many other things you want to have happen as the model runs, such as\ncalculating something or plotting the results. Each of these things to do will\nhave its own procedure and each procedure will have its own unique name.",[22,749,750],{},"The ‘go’ button you made in the Interface tab is a forever button, meaning that\nit will continually run its commands until you shut it off (by clicking on it\nagain). After you have pressed ‘setup’ once, to create the turtles, press the\n‘go’ button. Watch what happens. Turn it off, and you’ll see that all the\nturtles stop in their tracks.",[22,752,753,754,758],{},"Note that if a turtle moves off the edge of the world, it “wraps”, that is, it\nappears on the other side. (This is the default behavior. It can be changed; see\nthe ",[16,755,757],{"href":756},"/programming#topology","Topology"," section of the Programming Guide for\nmore information.)",[135,760,763],{"id":761,"className":762},"experimenting-with-commands",[14],[16,764,73],{"className":765,"href":72},[19],[22,767,768],{},"We suggest you start experimenting with other turtle commands.",[22,770,771,772,789,790,792,793,795,796,485],{},"Type commands into the Command Center (like ",[182,773,774,224,778,224,782,224,786],{},[226,775,777],{"className":776},[229,235],"turtles>",[226,779,781],{"className":780},[229,243],"set",[226,783,785],{"className":784},[229,264],"color",[226,787,669],{"className":788},[229,668],"), or add\ncommands to ",[182,791,184],{},", ",[182,794,481],{},", or ",[182,797,531],{},[22,799,800,801,792,803,792,806,795,809,812,813,821,822,831],{},"Note that when you enter commands in the Command Center, you must choose\n",[182,802,777],{},[182,804,805],{},"patches>",[182,807,808],{},"links>",[182,810,811],{},"observer>"," in the popup menu on the left,\ndepending on which agents are going to run the commands. It’s just like using\n",[182,814,815,224,818],{},[226,816,618],{"className":817},[229,243],[226,819,622],{"className":820},[229,264]," or ",[182,823,824,224,827],{},[226,825,618],{"className":826},[229,243],[226,828,830],{"className":829},[229,264],"patches",", but saves typing. You can also use the tab key\nto switch agent types, which you might find more convenient than using the menu.",[22,833,834,835,224,837,840],{},"You might try typing ",[182,836,777],{},[182,838,839],{},"pen-down"," into the Command Center and then\npressing the go button.",[22,842,843,844,846,847,858,859,485],{},"Also, inside the ",[182,845,531],{}," procedure you can try changing\n",[182,848,849,224,852,224,855],{},[226,850,630],{"className":851},[229,243],[226,853,634],{"className":854},[229,264],[226,856,638],{"className":857},[229,254]," to ",[182,860,861,224,864,224,867],{},[226,862,630],{"className":863},[229,243],[226,865,634],{"className":866},[229,264],[226,868,870],{"className":869},[229,254],"45",[22,872,873],{},"Play around. It’s easy and the results are immediate and visible — one of\nNetLogo’s many strengths.",[22,875,876],{},"When you feel you’ve done enough experimenting for now, you’re ready to continue\nimproving the model you are building.",[135,878,881],{"id":879,"className":880},"patches-and-variables",[14],[16,882,79],{"className":883,"href":78},[19],[22,885,886],{},"Now we’ve got 100 turtles aimlessly moving around, completely unaware of\nanything else around them. Let’s make things a little more interesting by giving\nthese turtles a nice background against which to move.",[165,888,889,977,1001,1006,1051,1060],{},[41,890,891,934],{},[44,892,893,894,896,897],{},"Go back to the ",[182,895,184],{}," procedure. We can rewrite it as follows:",[220,898,899],{},[182,900,224,901,224,904,907,239,909,912,239,914,918,239,920,924,239,926,929,224,931],{},[226,902,231],{"className":903},[229,230],[226,905,184],{"className":906},[229,235],[237,908],{},[226,910,244],{"className":911},[229,243],[237,913],{},[226,915,917],{"className":916},[229,235],"setup-patches",[237,919],{},[226,921,923],{"className":922},[229,235],"setup-turtles",[237,925],{},[226,927,276],{"className":928},[229,243],[237,930],{},[226,932,282],{"className":933},[229,230],[44,935,936,937,939,940,942,943],{},"The new definition of ",[182,938,184],{}," refers to two new procedures. To define\n",[182,941,917],{},", add this:",[220,944,945],{},[182,946,224,947,224,950,953,239,955,224,958,256,961,224,964,224,968,270,972,224,974],{},[226,948,231],{"className":949},[229,230],[226,951,917],{"className":952},[229,235],[237,954],{},[226,956,618],{"className":957},[229,243],[226,959,830],{"className":960},[229,264],[226,962,781],{"className":963},[229,243],[226,965,967],{"className":966},[229,264],"pcolor",[226,969,971],{"className":970},[229,668],"green",[237,973],{},[226,975,282],{"className":976},[229,230],[22,978,979,980,982,983,991,992,1000],{},"The ",[182,981,917],{}," procedure sets the color of every patch to green to start\nwith. (A turtle’s color variable is ",[182,984,986],{"className":985},[304],[16,987,785],{"href":988,"className":989,"dataDisplayText":785,"rel":990,"target":313,"title":785},"/dictionary#color",[309],[312],"; a patch’s is ",[182,993,995],{"className":994},[304],[16,996,967],{"href":997,"className":998,"dataDisplayText":967,"rel":999,"target":313,"title":967},"/dictionary#pcolor",[309],[312],".)",[22,1002,1003,1004,485],{},"The only part remaining in our new ‘setup’ that is still undefined is\n",[182,1005,923],{},[41,1007,1008],{},[44,1009,1010,1011],{},"Add this procedure too:",[220,1012,1013],{},[182,1014,224,1015,224,1018,1021,239,1023,224,1026,1029,239,1031,224,1034,256,1037,224,1040,224,1043,270,1046,224,1048],{},[226,1016,231],{"className":1017},[229,230],[226,1019,923],{"className":1020},[229,235],[237,1022],{},[226,1024,250],{"className":1025},[229,243],[226,1027,255],{"className":1028},[229,254],[237,1030],{},[226,1032,618],{"className":1033},[229,243],[226,1035,622],{"className":1036},[229,264],[226,1038,260],{"className":1039},[229,243],[226,1041,265],{"className":1042},[229,264],[226,1044,269],{"className":1045},[229,264],[237,1047],{},[226,1049,282],{"className":1050},[229,230],[22,1052,1053,1054,1056,1057,1059],{},"Did you notice that the new ",[182,1055,923],{}," procedure has most of the same\ncommands as the old ",[182,1058,184],{}," procedure?",[41,1061,1062,1065],{},[44,1063,1064],{},"Switch back to the Interface tab.",[44,1066,1067],{},"Press the setup button.",[22,1069,1070,1071],{},"Voila! A lush NetLogo landscape complete with turtles and green patches appears:\n",[193,1072],{"alt":1073,"className":1074,"src":1075,"width":1076,"height":1076,"style":1077},"tutorial3/scatter-on-green.png",[197],"/_content/images/tutorial3/scatter-on-green.png",419,{"aspectRatio":1078},"419/419",[22,1080,1081,1082,1084],{},"After seeing the new ",[182,1083,184],{}," procedure work a few times, you may find it helpful\nto read through the procedure definitions again.",[135,1086,1089],{"id":1087,"className":1088},"turtle-variables",[14],[16,1090,85],{"className":1091,"href":84},[19],[22,1093,1094],{},"So we have some turtles running around on a landscape, but they aren’t doing\nanything with it. Let’s add some interaction between the turtles and the\npatches.",[22,1096,1097],{},"We’ll make the turtles eat “grass” (the green patches), reproduce, and die. The\ngrass will gradually grow back after it is eaten.",[22,1099,1100],{},"We’ll need a way of controlling when a turtle reproduces and dies. We’ll\ndetermine that by keeping track of how much “energy” each turtle has. To do that\nwe need to add a new turtle variable.",[22,1102,1103,1104,1111,1112,1121,1122,1125],{},"You’ve already seen built-in turtle variables like ",[182,1105,1107],{"className":1106},[304],[16,1108,785],{"href":988,"className":1109,"dataDisplayText":785,"rel":1110,"target":313,"title":785},[309],[312],". To make a new\nturtle variable, we add a ",[182,1113,1115],{"className":1114},[304],[16,1116,1119],{"href":1117,"className":1118,"dataDisplayText":1119,"rel":1120,"target":313,"title":1119},"/dictionary#turtles-own",[309],"turtles-own",[312]," declaration at the top of the Code\ntab, before all the procedures. Call it ",[182,1123,1124],{},"energy",":",[220,1127,1128],{},[182,1129,1130,623,1133,1136,1137,1139,224,1144,1147,1149,1150,1153,1149,1155,1159,1149,1161,1164],{},[226,1131,1119],{"className":1132},[229,230],[226,1134,1124],{"className":1135},[229,235],"]",[237,1138],{},[226,1140,1142,310],{"className":1141},[229,230],[237,1143],{},[226,1145,481],{"className":1146},[229,235],[237,1148],{},"  ",[226,1151,531],{"className":1152},[229,235],[237,1154],{},[226,1156,1158],{"className":1157},[229,235],"eat-grass",[237,1160],{},[226,1162,537],{"className":1163},[229,243],[226,1165,1167,322],{"className":1166},[229,230],[237,1168],{},[22,1170,1171,1172,1174],{},"Let’s use this newly defined variable (",[182,1173,1124],{},") to allow the turtles to eat.",[165,1176,1177],{},[41,1178,1179,1181,1217],{},[44,1180,215],{},[44,1182,1183,1184,1186,1187],{},"Rewrite the ",[182,1185,481],{}," procedure as follows:",[220,1188,1189],{},[182,1190,224,1191,224,1194,1197,239,1199,1202,239,1204,1207,239,1209,1212,224,1214],{},[226,1192,231],{"className":1193},[229,230],[226,1195,481],{"className":1196},[229,235],[237,1198],{},[226,1200,531],{"className":1201},[229,235],[237,1203],{},[226,1205,1158],{"className":1206},[229,235],[237,1208],{},[226,1210,537],{"className":1211},[229,243],[237,1213],{},[226,1215,282],{"className":1216},[229,230],[44,1218,1219,1220,1222,1223],{},"Add a new ",[182,1221,1158],{}," procedure:",[220,1224,1225],{},[182,1226,224,1227,224,1230,1233,239,1235,224,1238,623,1241,626,1243,224,1247,224,1250,224,1254,623,1257,1259,1260,224,1263,224,1266,1270,1259,1272,224,1275,224,1278,224,1281,224,1285,1289,1291,1292,651,1294,224,1296],{},[226,1228,231],{"className":1229},[229,230],[226,1231,1158],{"className":1232},[229,235],[237,1234],{},[226,1236,618],{"className":1237},[229,243],[226,1239,622],{"className":1240},[229,264],[237,1242],{},[226,1244,1246],{"className":1245},[229,243],"if",[226,1248,967],{"className":1249},[229,264],[226,1251,1253],{"className":1252},[229,264],"=",[226,1255,971],{"className":1256},[229,668],[237,1258],{},"        ",[226,1261,781],{"className":1262},[229,243],[226,1264,967],{"className":1265},[229,264],[226,1267,1269],{"className":1268},[229,668],"black",[237,1271],{},[226,1273,781],{"className":1274},[229,243],[226,1276,1124],{"className":1277},[229,235],[226,1279,1124],{"className":1280},[229,235],[226,1282,1284],{"className":1283},[229,264],"+",[226,1286,1288],{"className":1287},[229,254],"10",[237,1290],{},"      ]",[237,1293],{},[237,1295],{},[226,1297,282],{"className":1298},[229,230],[22,1300,1301,1302,1310,1311,1318,1319,1321,1322,1325],{},"We are using the ",[182,1303,1305],{"className":1304},[304],[16,1306,1246],{"href":1307,"className":1308,"dataDisplayText":1246,"rel":1309,"target":313,"title":1246},"/dictionary#if",[309],[312]," command for the first time. Look at the code carefully.\nEach turtle, when it runs these commands, compares the value of the patch color\nit is on (",[182,1312,1314],{"className":1313},[304],[16,1315,967],{"href":997,"className":1316,"dataDisplayText":967,"rel":1317,"target":313,"title":967},[309],[312],") to the value for ",[182,1320,971],{},". (A turtle has direct access to\nthe variables of the patch it is standing on.) If the patch color is green, the\ncomparison reports ",[182,1323,1324],{},"true",", and only then will the turtle run the commands inside\nthe brackets (otherwise it skips them). The commands make the turtle change the\npatch color to black and increase its own energy by 10. The patch turns black to\nsignify that the grass at that spot has been eaten. And the turtle is given more\nenergy, from having just eaten.",[22,1327,1328],{},"Next, let’s make the movement of turtles use up some of the turtle’s energy.",[165,1330,1331],{},[41,1332,1333],{},[44,1334,1335,1336,1338,1339],{},"Rewrite ",[182,1337,531],{}," as follows:",[220,1340,1341],{},[182,1342,224,1343,224,1346,1349,239,1351,224,1354,623,1357,626,1359,224,1362,224,1365,1368,626,1370,224,1373,1376,626,1378,224,1381,224,1384,224,1387,224,1390,1393,651,1395,224,1397],{},[226,1344,231],{"className":1345},[229,230],[226,1347,531],{"className":1348},[229,235],[237,1350],{},[226,1352,618],{"className":1353},[229,243],[226,1355,622],{"className":1356},[229,264],[237,1358],{},[226,1360,630],{"className":1361},[229,243],[226,1363,634],{"className":1364},[229,264],[226,1366,638],{"className":1367},[229,254],[237,1369],{},[226,1371,644],{"className":1372},[229,243],[226,1374,648],{"className":1375},[229,254],[237,1377],{},[226,1379,781],{"className":1380},[229,243],[226,1382,1124],{"className":1383},[229,235],[226,1385,1124],{"className":1386},[229,235],[226,1388,673],{"className":1389},[229,264],[226,1391,648],{"className":1392},[229,254],[237,1394],{},[237,1396],{},[226,1398,282],{"className":1399},[229,230],[22,1401,1402],{},"As each turtle wanders, it will lose one unit of energy at each step.",[165,1404,1405,1410],{},[41,1406,1407],{},[44,1408,1409],{},"Switch to the Interface tab now and press the setup button and the go\nbutton.",[22,1411,1412,1413],{},"You’ll see the patches turn black as turtles travel over them.\n",[193,1414],{"alt":1415,"className":1416,"src":1417,"width":1418,"height":427,"style":1419},"tutorial3/eating-grass.png",[197],"/_content/images/tutorial3/eating-grass.png",421,{"aspectRatio":1420},"421/420",[135,1422,1425],{"id":1423,"className":1424},"monitors",[14],[16,1426,91],{"className":1427,"href":90},[19],[22,1429,1430],{},"Next you will create two monitors in the Interface tab with the toolbar. (You\nmake them just like buttons and sliders, using the Add icon on the toolbar.)\nLet’s make the first monitor now.",[165,1432,1433,1438,1443],{},[41,1434,1435],{},[44,1436,1437],{},"Create a monitor by clicking the Add icon on the toolbar, selecting Monitor\nnext to it, and clicking on an open spot in the Interface.",[22,1439,1442],{"className":1440},[1441],"question","A dialog box will appear.",[41,1444,1445,1458],{},[44,1446,1447,1448,1457],{},"In the dialog type: ",[182,1449,1450,224,1454],{},[226,1451,1453],{"className":1452},[229,264],"count",[226,1455,622],{"className":1456},[229,264]," (see image below).",[44,1459,1460],{},"Press the OK button to close the dialog.",[22,1462,1463],{},[193,1464],{"alt":1465,"className":1466,"src":1467,"width":291,"height":1468,"style":1469},"tutorial3/monitor-1.png",[197],"/_content/images/tutorial3/monitor-1.png",362,{"aspectRatio":1470},"556/362",[22,1472,1473,1481,1482,1490],{},[182,1474,1476],{"className":1475},[304],[16,1477,622],{"href":1478,"className":1479,"dataDisplayText":622,"rel":1480,"target":313,"title":622},"/dictionary#turtles",[309],[312]," is an “agentset”, the set of all turtles. ",[182,1483,1485],{"className":1484},[304],[16,1486,1453],{"href":1487,"className":1488,"dataDisplayText":1453,"rel":1489,"target":313,"title":1453},"/dictionary#count",[309],[312]," tells us how\nmany agents are in that set.",[22,1492,1493],{},"Let’s make the second monitor now:",[165,1495,1496,1500,1503],{},[41,1497,1498],{},[44,1499,1437],{},[22,1501,1442],{"className":1502},[1441],[41,1504,1505,1529,1540],{},[44,1506,1507,1508,1457],{},"In the Reporter section of the dialog box type:\n",[182,1509,1510,224,1513,224,1516,623,1520,224,1523,224,1526,1136],{},[226,1511,1453],{"className":1512},[229,264],[226,1514,830],{"className":1515},[229,264],[226,1517,1519],{"className":1518},[229,264],"with",[226,1521,967],{"className":1522},[229,264],[226,1524,1253],{"className":1525},[229,264],[226,1527,971],{"className":1528},[229,668],[44,1530,1531,1532],{},"In the Display name section of the dialog box type: ",[182,1533,1534,224,1537],{},[226,1535,971],{"className":1536},[229,668],[226,1538,830],{"className":1539},[229,264],[44,1541,1542],{},"Press the OK button to close the dialog box.",[22,1544,1545],{},[193,1546],{"alt":1547,"className":1548,"src":1549,"width":1550,"height":1551,"style":1552},"tutorial3/monitor-2.png",[197],"/_content/images/tutorial3/monitor-2.png",672,368,{"aspectRatio":1553},"672/368",[22,1555,1556,1557,1564,1565,1573,1574,1582,1583,1594],{},"Here we’re using ",[182,1558,1560],{"className":1559},[304],[16,1561,1453],{"href":1487,"className":1562,"dataDisplayText":1453,"rel":1563,"target":313,"title":1453},[309],[312]," again to see how many agents are in an agentset.\n",[182,1566,1568],{"className":1567},[304],[16,1569,830],{"href":1570,"className":1571,"dataDisplayText":830,"rel":1572,"target":313,"title":830},"/dictionary#patches",[309],[312]," is the set of all the patches, but we don’t just want to know how\nmany patches there are total, we want to know how many of them are green. That’s\nwhat ",[182,1575,1577],{"className":1576},[304],[16,1578,1519],{"href":1579,"className":1580,"dataDisplayText":1519,"rel":1581,"target":313,"title":1519},"/dictionary#with",[309],[312]," does; it makes a smaller agentset of just those agents for whom\nthe condition in the brackets is true. The condition is ",[182,1584,1585,224,1588,224,1591],{},[226,1586,967],{"className":1587},[229,264],[226,1589,1253],{"className":1590},[229,264],[226,1592,971],{"className":1593},[229,668],", so\nthat gives us just the green patches.",[22,1596,1597],{},"Now we have two monitors that will report how many turtles and green patches we\nhave, to help us track what’s going on in our model. As the model runs, the\nnumbers in the monitors will automatically change.",[165,1599,1600],{},[41,1601,1602],{},[44,1603,1604],{},"Use the setup and go buttons and watch the numbers in the monitors change.",[135,1606,1609],{"id":1607,"className":1608},"switches-and-labels",[14],[16,1610,97],{"className":1611,"href":96},[19],[22,1613,1614],{},"The turtles aren’t just turning the patches black. They’re also gaining and\nlosing energy. As the model runs, try using a turtle monitor to watch one\nturtle’s energy go up and down.",[22,1616,1617],{},"It would be nicer if we could see every turtle’s energy all the time. We will\nnow do exactly that, and add a switch so we can turn the extra visual\ninformation on and off.",[165,1619,1620,1631,1635],{},[41,1621,1622,1625,1628],{},[44,1623,1624],{},"Click on the Add icon on the toolbar (in the Interface tab).",[44,1626,1627],{},"Select Switch from the menu next to Add.",[44,1629,1630],{},"Click on an open spot in the interface.",[22,1632,1634],{"className":1633},[1441],"A dialog will appear.",[41,1636,1637],{},[44,1638,1639,1640,1643],{},"Into the Global variable field, type ",[182,1641,1642],{},"show-energy?"," Don’t forget to include\nthe question mark in the name. (See image below.)",[22,1645,1646],{},[193,1647],{"alt":1648,"className":1649,"src":1650,"width":1651,"height":1652,"style":1653},"tutorial3/switch.png",[197],"/_content/images/tutorial3/switch.png",643,268,{"aspectRatio":1654},"643/268",[165,1656,1657],{},[41,1658,1659,1662],{},[44,1660,1661],{},"Now go back to the ‘go’ procedure using the Code tab with the Toolbar.",[44,1663,1183,1664,1186,1666],{},[182,1665,1158],{},[220,1667,1668],{},[182,1669,224,1670,224,1673,1676,239,1678,224,1681,623,1684,626,1686,224,1689,224,1692,224,1695,623,1698,1259,1700,224,1703,224,1706,1709,1259,1711,224,1714,224,1717,224,1720,224,1723,1726,1291,1728,626,1730,224,1734,1737,1739,1740,224,1743,224,1747,270,1750,1739,1752,224,1755,224,1758,270,1763,651,1765,224,1767],{},[226,1671,231],{"className":1672},[229,230],[226,1674,1158],{"className":1675},[229,235],[237,1677],{},[226,1679,618],{"className":1680},[229,243],[226,1682,622],{"className":1683},[229,264],[237,1685],{},[226,1687,1246],{"className":1688},[229,243],[226,1690,967],{"className":1691},[229,264],[226,1693,1253],{"className":1694},[229,264],[226,1696,971],{"className":1697},[229,668],[237,1699],{},[226,1701,781],{"className":1702},[229,243],[226,1704,967],{"className":1705},[229,264],[226,1707,1269],{"className":1708},[229,668],[237,1710],{},[226,1712,781],{"className":1713},[229,243],[226,1715,1124],{"className":1716},[229,235],[226,1718,1124],{"className":1719},[229,235],[226,1721,1284],{"className":1722},[229,264],[226,1724,1288],{"className":1725},[229,254],[237,1727],{},[237,1729],{},[226,1731,1733],{"className":1732},[229,243],"ifelse",[226,1735,1642],{"className":1736},[229,235],[237,1738],{},"        [ ",[226,1741,781],{"className":1742},[229,243],[226,1744,1746],{"className":1745},[229,264],"label",[226,1748,1124],{"className":1749},[229,235],[237,1751],{},[226,1753,781],{"className":1754},[229,243],[226,1756,1746],{"className":1757},[229,264],[226,1759,1762],{"className":1760},[229,1761],"string","\"\"",[237,1764],{},[237,1766],{},[226,1768,282],{"className":1769},[229,230],[22,1771,979,1772,1774,1775,1783,1784,1786],{},[182,1773,1158],{}," procedure introduces the ",[182,1776,1778],{"className":1777},[304],[16,1779,1733],{"href":1780,"className":1781,"dataDisplayText":1733,"rel":1782,"target":313,"title":1733},"/dictionary#ifelse",[309],[312]," command. Look at the code\ncarefully. Each turtle, when it runs these new commands, checks the value of\n",[182,1785,1642],{}," (determined by the switch). If the switch is on, comparison is\ntrue and the turtle will run the commands inside the first set of brackets. In\nthis case, it assigns the value for the energy to the label of the turtle. If\nthe comparison is false (the switch is off) then the turtle runs the commands\ninside the second set of brackets. In this case, it removes the text labels (by\nsetting the label of the turtle to be nothing).",[22,1788,1789],{},"(In NetLogo, a piece of text is called a “string”, short for string of\ncharacters. A string is a sequence of letters or other characters, written\nbetween double quotes. Here we have two double quotes right next to each other,\nwith nothing in between them. That’s an empty string. If a turtle’s label is an\nempty string, no text is attached to the turtle.)",[165,1791,1792],{},[41,1793,1794],{},[44,1795,1796,1797,1799],{},"Test this in the Interface tab, by running the model (using the setup and go\nbuttons) switching the ",[182,1798,1642],{}," switch back and forth.",[22,1801,1802,1803],{},"When the switch is on, you’ll see the energy of each turtle go up each time it\neats grass. You’ll also see its energy going down whenever it moves.\n",[193,1804],{"alt":1805,"className":1806,"src":1807,"width":427,"height":427,"style":1808},"tutorial3/show-energy.png",[197],"/_content/images/tutorial3/show-energy.png",{"aspectRatio":429},[135,1810,1813],{"id":1811,"className":1812},"more-procedures",[14],[16,1814,103],{"className":1815,"href":102},[19],[22,1817,1818],{},"Now our turtles are eating. Let’s make them reproduce and die, too. And let’s\nmake the grass grow back. We’ll add all three of these of these behaviors now,\nby making three separate procedures, one for each behavior.",[165,1820,1821],{},[41,1822,1823,1826,1878],{},[44,1824,1825],{},"Go to the Code tab.",[44,1827,1183,1828,1186,1830],{},[182,1829,481],{},[220,1831,1832],{},[182,1833,224,1834,224,1837,1840,239,1842,1845,239,1847,1850,239,1852,1856,239,1858,1862,239,1864,1868,239,1870,1873,224,1875],{},[226,1835,231],{"className":1836},[229,230],[226,1838,481],{"className":1839},[229,235],[237,1841],{},[226,1843,531],{"className":1844},[229,235],[237,1846],{},[226,1848,1158],{"className":1849},[229,235],[237,1851],{},[226,1853,1855],{"className":1854},[229,235],"reproduce",[237,1857],{},[226,1859,1861],{"className":1860},[229,235],"check-death",[237,1863],{},[226,1865,1867],{"className":1866},[229,235],"regrow-grass",[237,1869],{},[226,1871,537],{"className":1872},[229,243],[237,1874],{},[226,1876,282],{"className":1877},[229,230],[44,1879,1880,1881,792,1883,1885,1886,1888,1889],{},"Add the procedures for ",[182,1882,1855],{},[182,1884,1861],{},", and ",[182,1887,1867],{}," as\nshown below:",[220,1890,1891],{},[182,1892,224,1893,224,1896,1899,239,1901,224,1904,623,1907,626,1909,224,1912,224,1915,224,1919,623,1923,1259,1925,224,1928,224,1931,224,1934,224,1937,1940,1259,1942,224,1946,256,1949,224,1952,224,1955,270,1958,1291,1960,651,1962,224,1964,1967,1969,224,1971,224,1974,1977,239,1979,224,1982,623,1985,626,1987,224,1990,224,1993,224,1997,256,2001,270,2005,651,2007,224,2009,2012,2014,224,2016,224,2019,2022,239,2024,224,2027,623,2030,626,2032,224,2035,224,2038,224,2041,224,2045,256,2049,224,2052,224,2055,270,2058,651,2060,224,2062],{},[226,1894,231],{"className":1895},[229,230],[226,1897,1855],{"className":1898},[229,235],[237,1900],{},[226,1902,618],{"className":1903},[229,243],[226,1905,622],{"className":1906},[229,264],[237,1908],{},[226,1910,1246],{"className":1911},[229,243],[226,1913,1124],{"className":1914},[229,235],[226,1916,1918],{"className":1917},[229,264],">",[226,1920,1922],{"className":1921},[229,254],"50",[237,1924],{},[226,1926,781],{"className":1927},[229,243],[226,1929,1124],{"className":1930},[229,235],[226,1932,1124],{"className":1933},[229,235],[226,1935,673],{"className":1936},[229,264],[226,1938,1922],{"className":1939},[229,254],[237,1941],{},[226,1943,1945],{"className":1944},[229,243],"hatch",[226,1947,648],{"className":1948},[229,254],[226,1950,781],{"className":1951},[229,243],[226,1953,1124],{"className":1954},[229,235],[226,1956,1922],{"className":1957},[229,254],[237,1959],{},[237,1961],{},[237,1963],{},[226,1965,282],{"className":1966},[229,230],[237,1968],{},[237,1970],{},[226,1972,231],{"className":1973},[229,230],[226,1975,1861],{"className":1976},[229,235],[237,1978],{},[226,1980,618],{"className":1981},[229,243],[226,1983,622],{"className":1984},[229,264],[237,1986],{},[226,1988,1246],{"className":1989},[229,243],[226,1991,1124],{"className":1992},[229,235],[226,1994,1996],{"className":1995},[229,264],"\u003C=",[226,1998,2000],{"className":1999},[229,254],"0",[226,2002,2004],{"className":2003},[229,243],"die",[237,2006],{},[237,2008],{},[226,2010,282],{"className":2011},[229,230],[237,2013],{},[237,2015],{},[226,2017,231],{"className":2018},[229,230],[226,2020,1867],{"className":2021},[229,235],[237,2023],{},[226,2025,618],{"className":2026},[229,243],[226,2028,830],{"className":2029},[229,264],[237,2031],{},[226,2033,1246],{"className":2034},[229,243],[226,2036,634],{"className":2037},[229,264],[226,2039,255],{"className":2040},[229,254],[226,2042,2044],{"className":2043},[229,264],"\u003C",[226,2046,2048],{"className":2047},[229,254],"3",[226,2050,781],{"className":2051},[229,243],[226,2053,967],{"className":2054},[229,264],[226,2056,971],{"className":2057},[229,668],[237,2059],{},[237,2061],{},[226,2063,282],{"className":2064},[229,230],[22,2066,2067,2068,2075,2076,2078,2079,2087],{},"Each of these procedures uses the ",[182,2069,2071],{"className":2070},[304],[16,2072,1246],{"href":1307,"className":2073,"dataDisplayText":1246,"rel":2074,"target":313,"title":1246},[309],[312]," command. Each turtle, when it runs\n",[182,2077,1861],{}," it will check to see if its energy is less or equal to 0. If this\nis true, then the turtle is told to ",[182,2080,2082],{"className":2081},[304],[16,2083,2004],{"href":2084,"className":2085,"dataDisplayText":2004,"rel":2086,"target":313,"title":2004},"/dictionary#die",[309],[312]," (die is a NetLogo primitive).",[22,2089,2090,2091,2093,2094,2096,2097,2105,2106,224,2108,224,2111,2116,2117,2119,2120,2122],{},"When each turtle runs ",[182,2092,1855],{},", it checks the value of the turtle’s ",[182,2095,1124],{},"\nvariable. If it is greater than 50, then the turtle runs the commands inside the\nfirst set of brackets. In this case, it decreases the turtle’s energy by 50,\nthen ‘hatches’ a new turtle with an energy of 50. The ",[182,2098,2100],{"className":2099},[304],[16,2101,1945],{"href":2102,"className":2103,"dataDisplayText":1945,"rel":2104,"target":313,"title":1945},"/dictionary#hatch",[309],[312]," command is a\nNetLogo primitive which looks like this: ",[182,2107,1945],{},[2109,2110,254],"em",{},[226,2112,224,2113],{},[2109,2114,2115],{},"commands",". This\nturtle creates ",[2109,2118,254],{}," new turtles, each identical to its parent, and asks the\nnew turtle(s) that have been hatched to run ",[2109,2121,2115],{},". You can use the commands\nto give the new turtles different colors, headings, or whatever. In our case we\nrun one command. We set the energy for the newly hatched turtle to be 50.",[22,2124,2125,2126,2128],{},"When each patch runs ",[182,2127,1867],{}," it will check to see if a random integer\nfrom 0 to 99 is less than 3. If so, the patch color is set to green. This will\nhappen 3% of the time (on average) for each patch, since there are three numbers\n(0, 1, and 2) out of 100 possible that are less than 3.",[165,2130,2131],{},[41,2132,2133],{},[44,2134,2135],{},"Switch to the Interface tab now and press the setup and go buttons.",[22,2137,2138],{},"You should see some interesting behavior in your model now. Some turtles die\noff, some new turtles are created (hatched), and some grass grows back. This is\nexactly what we set out to do.",[22,2140,2141,2142,562,2146,2149],{},"If you continue to watch your monitors in your model, you will see that the\n",[2143,2144,2145],"strong",{},"count turtles",[2143,2147,2148],{},"green patches"," monitors both fluctuate. Is this pattern\nof fluctuation predictable? Is there a relationship between the variables?",[22,2151,2152],{},"It’d be nice if we had a easier way to track the changes in the model behavior\nover time. NetLogo allows us to plot data as we go along. That will be our next\nstep.",[135,2154,2157],{"id":2155,"className":2156},"plotting",[14],[16,2158,109],{"className":2159,"href":108},[19],[22,2161,2162],{},"To make plotting work, we’ll need to create a plot in the Interface tab and put\nsome commands inside it.",[22,2164,2165,2166,2168,2169,2171,2172,2174,2175,485],{},"The commands we put in the plots will run automatically when our ",[182,2167,184],{},"\nprocedure calls ",[182,2170,276],{}," and when our ",[182,2173,481],{}," procedure calls ",[182,2176,537],{},[165,2178,2179],{},[41,2180,2181,2184,2187,2190,2193,2196,2212,2215,2218],{},[44,2182,2183],{},"Create a plot by clicking the Add icon on the toolbar, selecting Plot next\nto it, and clicking on an open spot in the Interface.",[44,2185,2186],{},"Set its Name to “Totals” (see image below)",[44,2188,2189],{},"Set the X axis label to “time”",[44,2191,2192],{},"Set the Y axis label to “totals”",[44,2194,2195],{},"Change the name of the “default” pen to “turtles”.",[44,2197,2198,2199,2211],{},"Enter ",[182,2200,2201,224,2205,224,2208],{},[226,2202,2204],{"className":2203},[229,243],"plot",[226,2206,1453],{"className":2207},[229,264],[226,2209,622],{"className":2210},[229,264]," under Pen Update Commands.",[44,2213,2214],{},"Press the “Add Pen” button.",[44,2216,2217],{},"Change the name of the new pen to “grass”.",[44,2219,2198,2220,2211],{},[182,2221,2222,224,2225,224,2228,224,2231,623,2234,224,2237,224,2240,1136],{},[226,2223,2204],{"className":2224},[229,243],[226,2226,1453],{"className":2227},[229,264],[226,2229,830],{"className":2230},[229,264],[226,2232,1519],{"className":2233},[229,264],[226,2235,967],{"className":2236},[229,264],[226,2238,1253],{"className":2239},[229,264],[226,2241,971],{"className":2242},[229,668],[22,2244,2245,2246],{},"When you’re done, the dialog should look like this: ",[193,2247],{"alt":2248,"className":2249,"src":2250,"width":2251,"height":2252,"style":2253},"tutorial3/totals.png",[197],"/_content/images/tutorial3/totals.png",648,552,{"aspectRatio":2254},"648/552",[165,2256,2257],{},[41,2258,2259],{},[44,2260,2261],{},"Press OK in the Plot dialog to finish editing.",[22,2263,2264],{},"Note that when you create the plot you can also set the minimum and maximum\nvalues on the X and Y axes. You’ll want to leave the “Auto Scale” checkbox\nchecked, so that if anything you plot exceeds the minimum and maximum values for\nthe axes, the axes will automatically grow so you can see all the data.",[22,2266,2267,2268,2276],{},"Note that we used the ",[182,2269,2271],{"className":2270},[304],[16,2272,2204],{"href":2273,"className":2274,"dataDisplayText":2204,"rel":2275,"target":313,"title":2204},"/dictionary#plot",[309],[312]," command to add the next point to a plot. This\ncommand moves the current plot pen to the point that has an X coordinate equal\nto 1 greater than the previously plotted X coordinate and a Y coordinate equal\nto the value given in the plot command (in the first case, the number of\nturtles, and in the second case, the number of green patches). As the pens move\nthey each draw a line.",[165,2278,2279],{},[41,2280,2281],{},[44,2282,2283],{},"Setup and run the model again.",[22,2285,2286],{},"You can now watch the plot being drawn as the model is running. Your plot should\nhave the general shape of the one below, though your plot might not look exactly\nthe same.",[22,2288,2289,2290],{},"Remember that we left “Auto Scale?” on. This allows the plot to readjust itself\nwhen it runs out of room. ",[193,2291],{"alt":2292,"className":2293,"src":2294,"width":2295,"height":2296,"style":2297},"tutorial3/plotwindow.png",[197],"/_content/images/tutorial3/plotwindow.png",213,165,{"aspectRatio":2298},"213/165",[22,2300,2301],{},"If you forget which pen is which, you can edit the plot and check the “Show\nlegend?” checkbox.",[22,2303,2304],{},"You might try running the model several times to see what aspects of the plot\nare the same and which are different from run to run.",[135,2306,2309],{"id":2307,"className":2308},"tick-counter",[14],[16,2310,115],{"className":2311,"href":114},[19],[22,2313,2314,2315,2317],{},"To make comparisons between plots from one model run and another, it is often\nuseful to do the comparison for the same length of model run. Learning how to\nstop or start an action at a specific time can help make this happen by stopping\nthe model at the same point each model run. Keeping track of how many times the\n",[182,2316,481],{}," procedure is run is a useful way to cue these actions. That’s what the tick\ncounter does.",[22,2319,2320,2321,2323,2324,2326],{},"You’re already using the tick counter in your model, with the ",[182,2322,276],{}," and\n",[182,2325,537],{}," commands, which also trigger plotting.",[22,2328,2329],{},"You can also use the tick counter for other things, such as to set a limit on\nthe total length of a run.",[165,2331,2332],{},[41,2333,2334,2405],{},[44,2335,2336,2337,1222,2339],{},"Change the ",[182,2338,481],{},[220,2340,2341],{},[182,2342,224,2343,224,2346,2349,239,2351,224,2354,224,2358,224,2362,256,2366,270,2370,239,2372,2375,239,2377,2380,239,2382,2385,239,2387,2390,239,2392,2395,239,2397,2400,224,2402],{},[226,2344,231],{"className":2345},[229,230],[226,2347,481],{"className":2348},[229,235],[237,2350],{},[226,2352,1246],{"className":2353},[229,243],[226,2355,2357],{"className":2356},[229,264],"ticks",[226,2359,2361],{"className":2360},[229,264],">=",[226,2363,2365],{"className":2364},[229,254],"500",[226,2367,2369],{"className":2368},[229,243],"stop",[237,2371],{},[226,2373,531],{"className":2374},[229,235],[237,2376],{},[226,2378,1158],{"className":2379},[229,235],[237,2381],{},[226,2383,1861],{"className":2384},[229,235],[237,2386],{},[226,2388,1855],{"className":2389},[229,235],[237,2391],{},[226,2393,1867],{"className":2394},[229,235],[237,2396],{},[226,2398,537],{"className":2399},[229,243],[237,2401],{},[226,2403,282],{"className":2404},[229,230],[44,2406,2407],{},"Now setup and run the model.",[22,2409,2410],{},"The graph and model won’t keep running forever. They should stop automatically\nwhen the tick counter in the Interface tab’s toolbar reaches 500.",[22,2412,979,2413,2420,2421,2429,2430,2438,2439,2441],{},[182,2414,2416],{"className":2415},[304],[16,2417,537],{"href":550,"className":2418,"dataDisplayText":537,"rel":2419,"target":313,"title":537},[309],[312]," command advances the tick counter by 1. ",[182,2422,2424],{"className":2423},[304],[16,2425,2357],{"href":2426,"className":2427,"dataDisplayText":2357,"rel":2428,"target":313,"title":2357},"/dictionary#ticks",[309],[312]," is a reporter\nwhich reports the current value of the tick counter. ",[182,2431,2433],{"className":2432},[304],[16,2434,276],{"href":2435,"className":2436,"dataDisplayText":276,"rel":2437,"target":313,"title":276},"/dictionary#reset-ticks",[309],[312],", in your\n",[182,2440,184],{}," procedure, takes care of restarting the tick counter at 0 when a new run\nis set up and ready to begin.",[135,2443,2446],{"id":2444,"className":2445},"some-more-details",[14],[16,2447,121],{"className":2448,"href":120},[19],[22,2450,2451],{},"First, instead of always using 100 turtles, you can have a varying number of\nturtles.",[165,2453,2454],{},[41,2455,2456,2459,2462],{},[44,2457,2458],{},"Create a slider named “number”: click the Add icon on the toolbar, select\nSlider next to it, and click on an open spot in the interface.",[44,2460,2461],{},"Try changing the minimum and maximum values in the slider.",[44,2463,2464,2465,2467,2468,2476,2477],{},"Then inside of ",[182,2466,923],{},", instead of ",[182,2469,2470,224,2473],{},[226,2471,250],{"className":2472},[229,243],[226,2474,255],{"className":2475},[229,254]," you can\ntype:",[220,2478,2479],{},[182,2480,224,2481,224,2484,2487,239,2489,224,2492,256,2495,224,2498,224,2501,270,2504,224,2506],{},[226,2482,231],{"className":2483},[229,230],[226,2485,923],{"className":2486},[229,235],[237,2488],{},[226,2490,250],{"className":2491},[229,243],[226,2493,254],{"className":2494},[229,235],[226,2496,260],{"className":2497},[229,243],[226,2499,265],{"className":2500},[229,264],[226,2502,269],{"className":2503},[229,264],[237,2505],{},[226,2507,282],{"className":2508},[229,230],[22,2510,2511],{},"Test this change and compare how having more or fewer turtles initially affect\nthe plots over time.",[22,2513,2514],{},"Second, wouldn’t it be nice to adjust the energy the turtles gain and lose as\nthey eat grass and reproduce?",[165,2516,2517],{},[41,2518,2519,2525,2531,2639],{},[44,2520,2521,2522,485],{},"Make a slider called ",[182,2523,2524],{},"energy-from-grass",[44,2526,2527,2528,485],{},"Make another slider called ",[182,2529,2530],{},"birth-energy",[44,2532,2533,2534,2537,2538],{},"Then, inside of ",[182,2535,2536],{},"eat-grass,"," make this change:",[220,2539,2540],{},[182,2541,224,2542,224,2545,2548,239,2550,224,2553,623,2556,626,2558,224,2561,224,2564,224,2567,623,2570,1259,2572,224,2575,224,2578,2581,1259,2583,224,2586,2589,2590,224,2593,224,2596,2599,2600,1291,2602,626,2604,224,2607,2610,1739,2612,224,2615,224,2618,270,2621,1739,2623,224,2626,224,2629,270,2632,651,2634,224,2636],{},[226,2543,231],{"className":2544},[229,230],[226,2546,1158],{"className":2547},[229,235],[237,2549],{},[226,2551,618],{"className":2552},[229,243],[226,2554,622],{"className":2555},[229,264],[237,2557],{},[226,2559,1246],{"className":2560},[229,243],[226,2562,967],{"className":2563},[229,264],[226,2565,1253],{"className":2566},[229,264],[226,2568,971],{"className":2569},[229,668],[237,2571],{},[226,2573,781],{"className":2574},[229,243],[226,2576,967],{"className":2577},[229,264],[226,2579,1269],{"className":2580},[229,668],[237,2582],{},[226,2584,781],{"className":2585},[229,243],[226,2587,1124],{"className":2588},[229,235]," (",[226,2591,1124],{"className":2592},[229,235],[226,2594,1284],{"className":2595},[229,264],[226,2597,2524],{"className":2598},[229,235],")",[237,2601],{},[237,2603],{},[226,2605,1733],{"className":2606},[229,243],[226,2608,1642],{"className":2609},[229,235],[237,2611],{},[226,2613,781],{"className":2614},[229,243],[226,2616,1746],{"className":2617},[229,264],[226,2619,1124],{"className":2620},[229,235],[237,2622],{},[226,2624,781],{"className":2625},[229,243],[226,2627,1746],{"className":2628},[229,264],[226,2630,1762],{"className":2631},[229,1761],[237,2633],{},[237,2635],{},[226,2637,282],{"className":2638},[229,230],[44,2640,2641,2642,2644,2645],{},"And, inside of ",[182,2643,1855],{},", make this change:",[220,2646,2647],{},[182,2648,224,2649,224,2652,2655,239,2657,224,2660,623,2663,626,2665,224,2668,224,2671,224,2674,623,2677,1259,2679,224,2682,224,2685,224,2688,224,2691,2694,1259,2696,224,2699,256,2702,224,2705,224,2708,270,2711,1291,2713,651,2715,224,2717],{},[226,2650,231],{"className":2651},[229,230],[226,2653,1855],{"className":2654},[229,235],[237,2656],{},[226,2658,618],{"className":2659},[229,243],[226,2661,622],{"className":2662},[229,264],[237,2664],{},[226,2666,1246],{"className":2667},[229,243],[226,2669,1124],{"className":2670},[229,235],[226,2672,1918],{"className":2673},[229,264],[226,2675,2530],{"className":2676},[229,235],[237,2678],{},[226,2680,781],{"className":2681},[229,243],[226,2683,1124],{"className":2684},[229,235],[226,2686,1124],{"className":2687},[229,235],[226,2689,673],{"className":2690},[229,264],[226,2692,2530],{"className":2693},[229,235],[237,2695],{},[226,2697,1945],{"className":2698},[229,243],[226,2700,648],{"className":2701},[229,254],[226,2703,781],{"className":2704},[229,243],[226,2706,1124],{"className":2707},[229,235],[226,2709,2530],{"className":2710},[229,235],[237,2712],{},[237,2714],{},[237,2716],{},[226,2718,282],{"className":2719},[229,230],[22,2721,2722],{},"Finally, what other slider could you add to vary how often grass grows back? Are\nthere rules you can add to the movement of the turtles or to the newly hatched\nturtles that happen only at certain times? Try writing them.",[135,2724,2727],{"id":2725,"className":2726},"whats-next",[14],[16,2728,127],{"className":2729,"href":126},[19],[22,2731,2732],{},"So now you have a simple model of an ecosystem. Patches grow grass. Turtles\nwander, eat the grass, reproduce, and die.",[22,2734,2735],{},"You have created an interface containing buttons, sliders, switches, monitors,\nand a plot. You’ve even written a series of procedures to give the turtles\nsomething to do.",[22,2737,2738],{},"That’s where this tutorial leaves off.",[22,2740,2741,2742,2746,2747,2751,2752,485],{},"If you’d like to look at some more documentation about NetLogo, the\n",[16,2743,2745],{"href":2744},"interface","Interface Guide"," section of the manual walks you through every\nelement of the NetLogo interface in order and explains its function. For a\ndetailed description and specifics about writing procedures, refer to the\n",[16,2748,2750],{"href":2749},"/programming","Programming Guide",". All of the primitives are listed and\ndescribed in the ",[16,2753,2755],{"href":2754},"dictionary","NetLogo Dictionary",[22,2757,2758],{},"Also, you can continue experimenting with and expanding this model if you’d\nlike, experimenting with different variables and behaviors for the agents.",[22,2760,2761,2762,2772],{},"Alternatively, you may want to revisit the first model in the tutorial, Wolf\nSheep Predation. This is the model you used in ",[182,2763,2764,224,2768],{},[226,2765,2767],{"className":2766},[229,235],"Tutorial",[226,2769,2771],{"className":2770},[229,235],"#1",". In the Wolf Sheep\nPredation model, you saw sheep move around, consume resources that are\nreplenished occasionally (grass), reproduce under certain conditions, and die if\nthey ran out of resources. But that model had another type of creature moving\naround — wolves. The addition of wolves requires some additional procedures and\nsome new primitives. Wolves and sheep are two different “breeds” of turtle. To\nsee how to use breeds, study Wolf Sheep Predation.",[22,2774,2775],{},"Alternatively, you can look at other models (including the many models in the\nCode Examples section of the Models Library) or even go ahead and build your own\nmodel. You don’t even have to model anything. It can be interesting just to\nwatch patches and turtles forming patterns, to try to create a game to play, or\nwhatever.",[22,2777,2778],{},"Hopefully you have learned some things, both in terms of the NetLogo language\nand about how to go about building a model. The entire set of procedures that\nwas created above is shown below.",[135,2780,2783],{"id":2781,"className":2782},"appendix-complete-code",[14],[16,2784,133],{"className":2785,"href":132},[19],[22,2787,2788],{},"The complete model is also available in NetLogo’s Models Library, in the Code\nExamples section. It’s called “Tutorial 3”.",[22,2790,2791],{},"Notice that this listing is full of “comments”, which begin with semicolons.\nComments let you mix an explanation the code right in with the code itself. You\nmight use comments to help others understand your model, or you might use them\nas notes to yourself.",[22,2793,2794],{},"In the Code tab, comments are gray, so your eyes can pick them out easily.",[220,2796,2797],{},[182,2798,2799,623,2802,2805,2806,2811,2813,2814,2818,2820,224,2825,2828,1149,2830,2833,1149,2835,2838,1149,2840,2843,1149,2845,2848,2853,2855,224,2860,2863,1149,2865,224,2868,256,2871,224,2874,224,2877,270,2880,2885,2887,224,2892,2895,1149,2897,224,2900,239,2903,2907,1149,2909,224,2912,256,2915,224,2918,224,2921,270,2924,2929,2931,224,2936,2939,1149,2941,224,2944,224,2947,224,2950,256,2953,2956,2957,2961,1149,2963,2966,1149,2968,2971,1149,2973,2976,1149,2978,2981,1149,2983,2986,1149,2988,2991,2992,2996,3001,3003,224,3008,3011,1149,3013,224,3016,623,3019,239,3021,224,3024,224,3027,3030,239,3032,224,3035,3038,239,3040,224,3043,224,3046,224,3049,224,3052,1149,3055,3059,3061,3062,3067,3069,224,3074,3077,1149,3079,224,3082,623,3085,239,3087,224,3090,224,3093,224,3096,623,3099,626,3101,224,3104,224,3107,3110,3112,3113,3117,626,3119,224,3122,224,3125,224,3128,224,3131,3134,651,3136,1149,3138,224,3141,3144,3146,3147,224,3150,224,3153,3156,3157,3161,3146,3163,224,3166,224,3169,3172,3173,3177,3061,3179,3184,3186,224,3191,3194,1149,3196,224,3199,623,3202,239,3204,224,3207,224,3210,224,3213,623,3216,626,3218,224,3221,224,3224,224,3227,224,3230,1149,3233,3237,626,3239,224,3242,256,3245,224,3248,224,3251,3156,3254,3258,651,3260,3061,3262,3267,3269,224,3274,3277,1149,3279,224,3282,623,3285,239,3287,224,3290,224,3293,224,3296,256,3299,3156,3302,3306,3061,3308,3313,3315,224,3320,3323,1149,3325,224,3328,256,3331,3335,239,3337,224,3340,224,3343,224,3346,224,3349,256,3352,224,3355,224,3358,270,3361,3061,3363],{},[226,2800,1119],{"className":2801},[229,230],[226,2803,1124],{"className":2804},[229,235],"] ",[226,2807,2810],{"className":2808},[229,2809],"comment",";; for keeping track of when the turtle is ready",[237,2812],{},"                     ",[226,2815,2817],{"className":2816},[229,2809],";; to reproduce and when it will die",[237,2819],{},[226,2821,2823,310],{"className":2822},[229,230],[237,2824],{},[226,2826,184],{"className":2827},[229,235],[237,2829],{},[226,2831,244],{"className":2832},[229,243],[237,2834],{},[226,2836,917],{"className":2837},[229,235],[237,2839],{},[226,2841,923],{"className":2842},[229,235],[237,2844],{},[226,2846,276],{"className":2847},[229,243],[226,2849,2851,322],{"className":2850},[229,230],[237,2852],{},[237,2854],{},[226,2856,2858,310],{"className":2857},[229,230],[237,2859],{},[226,2861,917],{"className":2862},[229,235],[237,2864],{},[226,2866,618],{"className":2867},[229,243],[226,2869,830],{"className":2870},[229,264],[226,2872,781],{"className":2873},[229,243],[226,2875,967],{"className":2876},[229,264],[226,2878,971],{"className":2879},[229,668],[226,2881,2883,322],{"className":2882},[229,230],[237,2884],{},[237,2886],{},[226,2888,2890,310],{"className":2889},[229,230],[237,2891],{},[226,2893,923],{"className":2894},[229,235],[237,2896],{},[226,2898,250],{"className":2899},[229,243],[226,2901,254],{"className":2902},[229,235],[226,2904,2906],{"className":2905},[229,2809],";; uses the value of the number slider to create turtles",[237,2908],{},[226,2910,618],{"className":2911},[229,243],[226,2913,622],{"className":2914},[229,264],[226,2916,260],{"className":2917},[229,243],[226,2919,265],{"className":2920},[229,264],[226,2922,269],{"className":2923},[229,264],[226,2925,2927,322],{"className":2926},[229,230],[237,2928],{},[237,2930],{},[226,2932,2934,310],{"className":2933},[229,230],[237,2935],{},[226,2937,481],{"className":2938},[229,235],[237,2940],{},[226,2942,1246],{"className":2943},[229,243],[226,2945,2357],{"className":2946},[229,264],[226,2948,2361],{"className":2949},[229,264],[226,2951,2365],{"className":2952},[229,254],[226,2954,2369],{"className":2955},[229,243]," ]  ",[226,2958,2960],{"className":2959},[229,2809],";; stop after 500 ticks",[237,2962],{},[226,2964,531],{"className":2965},[229,235],[237,2967],{},[226,2969,1158],{"className":2970},[229,235],[237,2972],{},[226,2974,1861],{"className":2975},[229,235],[237,2977],{},[226,2979,1855],{"className":2980},[229,235],[237,2982],{},[226,2984,1867],{"className":2985},[229,235],[237,2987],{},[226,2989,537],{"className":2990},[229,243],"                    ",[226,2993,2995],{"className":2994},[229,2809],";; increase the tick counter by 1 each time through",[226,2997,2999,322],{"className":2998},[229,230],[237,3000],{},[237,3002],{},[226,3004,3006,310],{"className":3005},[229,230],[237,3007],{},[226,3009,531],{"className":3010},[229,235],[237,3012],{},[226,3014,618],{"className":3015},[229,243],[226,3017,622],{"className":3018},[229,264],[237,3020],{},[226,3022,630],{"className":3023},[229,243],[226,3025,634],{"className":3026},[229,264],[226,3028,638],{"className":3029},[229,254],[237,3031],{},[226,3033,644],{"className":3034},[229,243],[226,3036,648],{"className":3037},[229,254],[237,3039],{},[226,3041,781],{"className":3042},[229,243],[226,3044,1124],{"className":3045},[229,235],[226,3047,1124],{"className":3048},[229,235],[226,3050,673],{"className":3051},[229,264],[226,3053,648],{"className":3054},[229,254],[226,3056,3058],{"className":3057},[229,2809],";; when the turtle moves it looses one unit of energy",[237,3060],{},"  ]",[226,3063,3065,322],{"className":3064},[229,230],[237,3066],{},[237,3068],{},[226,3070,3072,310],{"className":3071},[229,230],[237,3073],{},[226,3075,1158],{"className":3076},[229,235],[237,3078],{},[226,3080,618],{"className":3081},[229,243],[226,3083,622],{"className":3084},[229,264],[237,3086],{},[226,3088,1246],{"className":3089},[229,243],[226,3091,967],{"className":3092},[229,264],[226,3094,1253],{"className":3095},[229,264],[226,3097,971],{"className":3098},[229,668],[237,3100],{},[226,3102,781],{"className":3103},[229,243],[226,3105,967],{"className":3106},[229,264],[226,3108,1269],{"className":3109},[229,668],[237,3111],{},"           ",[226,3114,3116],{"className":3115},[229,2809],";; the value of energy-from-grass slider is added to energy",[237,3118],{},[226,3120,781],{"className":3121},[229,243],[226,3123,1124],{"className":3124},[229,235],[226,3126,1124],{"className":3127},[229,235],[226,3129,1284],{"className":3130},[229,264],[226,3132,2524],{"className":3133},[229,235],[237,3135],{},[237,3137],{},[226,3139,1733],{"className":3140},[229,243],[226,3142,1642],{"className":3143},[229,235],[237,3145],{},"    [ ",[226,3148,781],{"className":3149},[229,243],[226,3151,1746],{"className":3152},[229,264],[226,3154,1124],{"className":3155},[229,235]," ] ",[226,3158,3160],{"className":3159},[229,2809],";; the label is set to be the value of the energy",[237,3162],{},[226,3164,781],{"className":3165},[229,243],[226,3167,1746],{"className":3168},[229,264],[226,3170,1762],{"className":3171},[229,1761]," ]     ",[226,3174,3176],{"className":3175},[229,2809],";; the label is set to an empty text value",[237,3178],{},[226,3180,3182,322],{"className":3181},[229,230],[237,3183],{},[237,3185],{},[226,3187,3189,310],{"className":3188},[229,230],[237,3190],{},[226,3192,1855],{"className":3193},[229,235],[237,3195],{},[226,3197,618],{"className":3198},[229,243],[226,3200,622],{"className":3201},[229,264],[237,3203],{},[226,3205,1246],{"className":3206},[229,243],[226,3208,1124],{"className":3209},[229,235],[226,3211,1918],{"className":3212},[229,264],[226,3214,2530],{"className":3215},[229,235],[237,3217],{},[226,3219,781],{"className":3220},[229,243],[226,3222,1124],{"className":3223},[229,235],[226,3225,1124],{"className":3226},[229,235],[226,3228,673],{"className":3229},[229,264],[226,3231,2530],{"className":3232},[229,235],[226,3234,3236],{"className":3235},[229,2809],";; take away birth-energy to give birth",[237,3238],{},[226,3240,1945],{"className":3241},[229,243],[226,3243,648],{"className":3244},[229,254],[226,3246,781],{"className":3247},[229,243],[226,3249,1124],{"className":3250},[229,235],[226,3252,2530],{"className":3253},[229,235],[226,3255,3257],{"className":3256},[229,2809],";; give this birth-energy to the offspring",[237,3259],{},[237,3261],{},[226,3263,3265,322],{"className":3264},[229,230],[237,3266],{},[237,3268],{},[226,3270,3272,310],{"className":3271},[229,230],[237,3273],{},[226,3275,1861],{"className":3276},[229,235],[237,3278],{},[226,3280,618],{"className":3281},[229,243],[226,3283,622],{"className":3284},[229,264],[237,3286],{},[226,3288,1246],{"className":3289},[229,243],[226,3291,1124],{"className":3292},[229,235],[226,3294,1996],{"className":3295},[229,264],[226,3297,2000],{"className":3298},[229,254],[226,3300,2004],{"className":3301},[229,243],[226,3303,3305],{"className":3304},[229,2809],";; removes the turtle if it has no energy left",[237,3307],{},[226,3309,3311,322],{"className":3310},[229,230],[237,3312],{},[237,3314],{},[226,3316,3318,310],{"className":3317},[229,230],[237,3319],{},[226,3321,1867],{"className":3322},[229,235],[237,3324],{},[226,3326,618],{"className":3327},[229,243],[226,3329,830],{"className":3330},[229,264],[226,3332,3334],{"className":3333},[229,2809],";; 3 out of 100 times, the patch color is set to green",[237,3336],{},[226,3338,1246],{"className":3339},[229,243],[226,3341,634],{"className":3342},[229,264],[226,3344,255],{"className":3345},[229,254],[226,3347,2044],{"className":3348},[229,264],[226,3350,2048],{"className":3351},[229,254],[226,3353,781],{"className":3354},[229,243],[226,3356,967],{"className":3357},[229,264],[226,3359,971],{"className":3360},[229,668],[237,3362],{},[226,3364,3366,322],{"className":3365},[229,230],[237,3367],{},{"title":3369,"searchDepth":3370,"depth":3371,"links":3372},"",5,3,[3373,3375,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,3388,3389,3390],{"id":33,"depth":3374,"text":39},4,{"id":137,"depth":3376,"text":49},2,{"id":156,"depth":3376,"text":55},{"id":438,"depth":3376,"text":61},{"id":464,"depth":3376,"text":67},{"id":761,"depth":3376,"text":73},{"id":879,"depth":3376,"text":79},{"id":1087,"depth":3376,"text":85},{"id":1423,"depth":3376,"text":91},{"id":1607,"depth":3376,"text":97},{"id":1811,"depth":3376,"text":103},{"id":2155,"depth":3376,"text":109},{"id":2307,"depth":3376,"text":115},{"id":2444,"depth":3376,"text":121},{"id":2725,"depth":3376,"text":127},{"id":2781,"depth":3376,"text":133},"Third tutorial in the NetLogo learning series, focusing on creating and using procedures in NetLogo programming.","md",{"source":3394,"metadataOutputPath":3395,"projectConfig":3396,"language":3398,"output":3407,"inheritFrom":3408,"version":3403,"keywords":3409,"tags":3413,"icon":3414,"assetsRoot":3415},"autogen/tutorial3.md","content/tutorial3.metadata.yaml",{"defaults":3397,"projectRoot":485,"outputRoot":3404,"scanRoot":3405,"engine":3406,"version":3403,"dedupeIdenticalDiskWrites":3407},{"language":3398,"output":3399,"inheritFrom":3400,"extension":3392,"title":3402,"version":3403},"en",false,[3401],0,"NetLogo User Manual","7.0.1","content","autogen","handlebars",true,[3401],[2767,3410,3411,3412],"Procedures","Advanced Programming","NetLogo",[2767,3410,3411],"i-fluent-mdl2-learning-tools","/Volumes/CCL/netlogo/Helio/apps/docs-nuxt/autogen","/tutorial3",{"title":5,"description":3391},"tutorial3","EoNxcJD2NcQ-BqnRnO2RI6EFwxiRIuDGXWRf_9bFuM8",[3421,3426],{"title":3422,"path":3423,"stem":3424,"description":3425,"children":-1},"Tutorial #2: Commands","/tutorial2","tutorial2","Second tutorial in the NetLogo learning series, covering basic commands and programming concepts in NetLogo.",{"title":3427,"path":3428,"stem":3429,"description":3430,"children":-1},"Version History","/versions","versions","History of NetLogo versions, including release notes, changes, and feature additions across different releases.",1761668935950]