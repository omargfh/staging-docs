[{"data":1,"prerenderedAt":257},["ShallowReactive",2],{"/matrix/solve":3,"/matrix/solve-surround":246},{"id":4,"title":5,"body":6,"description":215,"extension":216,"meta":217,"navigation":232,"path":242,"seo":243,"stem":244,"__hash__":245},"content/matrix/solve.md","Matrix Extension Dictionary: solve",{"type":7,"value":8,"toc":204},"minimark",[9],[10,11,15,16,15,26,50,79],"div",{"className":12,"id":14},[13],"dict_entry","solve","\n  ",[17,18,20,21,15],"h3",{"id":19},"matrixsolve","\n    ",[22,23,25],"a",{"href":24},"#solve","matrix:solve",[27,28,32],"h4",{"id":29,"className":30},"matrixsolve-a-c",[31],"section-heading",[22,33,20,37,15],{"className":34,"href":36},[35],"section-anchor","#----matrixsolve-a-c--",[38,39,42,43,46,47],"span",{"className":40},[41],"prim_example","matrix:solve ",[44,45,22],"i",{}," ",[44,48,49],{},"c",[51,52,53,54,58,59,62,63,65,66,68,69,71,72,76],"p",{},"Reports the solution to a linear system of equations, specified by\nthe ",[55,56,57],"em",{},"A"," and ",[55,60,61],{},"C"," matrices. In general, solving a set of\nlinear equations is akin to matrix division. That is, the goal is\nto find a matrix B such that ",[55,64,57],{}," * B = ",[55,67,61],{},". (For simple\nlinear systems, ",[55,70,61],{}," and B can both be 1-dimensional matrices\n— i.e. vectors). If A is not a square matrix, then a “least squares” solution is returned.\n",[73,74],"binding",{"value":75},"! prevent interpretation of extension objects as staches",[73,77],{"value":78},"=",[80,81,82],"pre",{},[83,84,85,91,94,98,100,46,105,46,109,113,114,46,119,123,124,46,128,132,133,135,46,138,46,141,113,144,123,148,132,152,154,46,158,46,161,46,164,167,169,46,173,177,178,182,183,187,188,192,194,198,200],"code",{},[38,86,90],{"className":87},[88,89],"token","comment",";; To solve the set of equations x + 3y = 10 and 7x - 4y = 20",[92,93],"br",{},[38,95,97],{"className":96},[88,89],";; We make our A matrix [[1 3][7 -4]], and our C matrix [[10][20]]",[92,99],{},[38,101,104],{"className":102},[88,103],"command","let",[38,106,57],{"className":107},[88,108],"variable",[38,110,112],{"className":111},[88,108],"matrix:from-row-list"," [[",[38,115,118],{"className":116},[88,117],"number","1",[38,120,122],{"className":121},[88,117],"3","][",[38,125,127],{"className":126},[88,117],"7",[38,129,131],{"className":130},[88,117],"-4","]]",[92,134],{},[38,136,104],{"className":137},[88,103],[38,139,61],{"className":140},[88,108],[38,142,112],{"className":143},[88,108],[38,145,147],{"className":146},[88,117],"10",[38,149,151],{"className":150},[88,117],"20",[92,153],{},[38,155,157],{"className":156},[88,103],"print",[38,159,25],{"className":160},[88,108],[38,162,57],{"className":163},[88,108],[38,165,61],{"className":166},[88,108],[92,168],{},[38,170,172],{"className":171},[88,108],"=>",[38,174,176],{"className":175},[88,108],"{{matrix:","  [ [ ",[38,179,181],{"className":180},[88,117],"4"," ][ ",[38,184,186],{"className":185},[88,117],"2.0000000000000004"," ] ]",[38,189,191],{"className":190},[88,108],"}}",[92,193],{},[38,195,197],{"className":196},[88,89],";; NOTE: as you can see, the results may be only approximate",[92,199],{},[38,201,203],{"className":202},[88,89],";; (In this case, the true solution should be x=4 and y=2.)",{"title":205,"searchDepth":206,"depth":207,"links":208},"",5,3,[209],{"id":19,"depth":207,"text":210,"children":211},"\n    matrix:solve\n  ",[212],{"id":29,"depth":213,"text":214},4,"\n    matrix:solve a c\n  ","Documentation for the solve primitive.","md",{"source":218,"metadataOutputPath":219,"projectConfig":220,"language":222,"output":232,"inheritFrom":233,"version":227,"layout":234,"dictionaryDisplayName":235,"dictionaryHomeDirectory":236,"indexFileURI":237,"currentItemId":14,"currentItemLabel":25,"primRoot":238,"icon":239,"extensionName":240,"assetsRoot":230},"../../external/extensions/matrix/matrix/solve.md","content/matrix/solve.metadata.yaml",{"defaults":221,"projectRoot":228,"outputRoot":229,"scanRoot":230,"engine":231,"version":227,"dedupeIdenticalDiskWrites":232},{"language":222,"output":223,"inheritFrom":224,"extension":216,"title":226,"version":227},"en",false,[225],0,"NetLogo User Manual","7.0.1",".","content","/Volumes/CCL/netlogo/Helio/external/extensions/matrix","mustache",true,[225],"catalog","Matrix Extension Dictionary","/matrix.html","/_index/extensions/matrix.txt","matrix","i-mdi-matrix",{"shortName":238,"fullName":241},"Matrix","/matrix/solve",{"title":5,"description":215},"matrix/solve","vBwGHcH9j6fP6OItRV4qaRUgzLO7bT3ZOj-KIU8fQJA",[247,252],{"title":248,"path":249,"stem":250,"description":251,"children":-1},"Matrix Extension Dictionary: set-row","/matrix/set-row","matrix/set-row","Documentation for the set-row primitive.",{"title":253,"path":254,"stem":255,"description":256,"children":-1},"Matrix Extension Dictionary: submatrix","/matrix/submatrix","matrix/submatrix","Documentation for the submatrix primitive.",1761668960086]