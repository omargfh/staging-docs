[{"data":1,"prerenderedAt":4108},["ShallowReactive",2],{"/transition":3,"/transition-surround":4097},{"id":4,"title":5,"body":6,"description":4067,"extension":4068,"meta":4069,"navigation":4083,"path":4093,"seo":4094,"stem":4095,"__hash__":4096},"content/transition.md","Transition Guide",{"type":7,"value":8,"toc":3984},"minimark",[9,21,25,28,38,111,119,127,139,146,156,195,206,223,232,281,287,321,328,337,347,356,384,391,400,437,486,489,514,520,529,548,551,554,616,619,622,632,643,652,659,668,677,680,689,692,701,737,746,761,770,791,797,917,931,940,985,1006,1018,1026,1035,1042,1045,1065,1074,1091,1104,1120,1127,1136,1148,1160,1169,1172,1180,1187,1194,1203,1206,1209,1212,1354,1357,1429,1432,1487,1490,1499,1502,1511,1527,1532,1543,1557,1567,1585,1597,1606,1609,1612,1615,1618,1621,1630,1633,1636,1639,1648,1651,1654,1657,1664,1673,1676,1693,1701,1704,1727,1736,1739,1742,1751,1762,1771,1781,1795,1810,1819,1822,1829,1844,1847,1869,1875,1894,1897,1969,1972,1996,1999,2021,2029,2032,2054,2057,2091,2094,2122,2134,2141,2150,2182,2191,2230,2238,2252,2291,2300,2336,2339,2367,2370,2393,2396,2399,2402,2414,2479,2488,2491,2494,2497,2504,2538,2554,2557,2577,2580,2603,2634,2647,2668,2740,2743,2876,2881,2903,2912,2935,2976,2982,2992,3003,3017,3028,3041,3065,3068,3100,3106,3109,3117,3120,3157,3172,3175,3184,3206,3217,3220,3241,3244,3247,3258,3267,3270,3305,3308,3387,3396,3399,3402,3405,3408,3411,3414,3423,3432,3435,3438,3542,3545,3548,3648,3651,3654,3663,3707,3716,3743,3751,3760,3797,3823,3830,3837,3846,3872,3881,3889,3898,3928,3934,3937,3965,3968],[10,11,15],"h1",{"id":12,"className":13},"transition-guide",[14],"section-heading",[16,17,5],"a",{"className":18,"href":20},[19],"section-anchor","#transition-guide",[22,23,24],"p",{},"Many models created in earlier versions of NetLogo also work in NetLogo 7.0.\nHowever, some models will need changes. If an old model isn’t working, this\nsection of the User Manual may be able to help you.",[22,26,27],{},"What issues may arise depends on what version of NetLogo the model was created\nwith.",[22,29,30,31,37],{},"This guide only covers changes most likely to cause issues for users. See the\n",[16,32,36],{"href":33,"rel":34},"https://github.com/NetLogo/NetLogo/wiki/Release-notes",[35],"nofollow","release notes"," for more\ncomplete details on differences between versions.",[39,40,43,53],"div",{"className":41},[42],"toc",[44,45,48],"h4",{"id":46,"className":47},"table-of-contents",[14],[16,49,52],{"className":50,"href":51},[19],"#table-of-contents","Table of Contents",[54,55,56,63,69,75,81,87,93,99,105],"ul",{},[57,58,59],"li",{},[16,60,62],{"href":61},"#changes-for-netlogo-700","Changes for NetLogo 7.0.0",[57,64,65],{},[16,66,68],{"href":67},"#changes-for-netlogo-610","Changes for NetLogo 6.1.0",[57,70,71],{},[16,72,74],{"href":73},"#changes-for-netlogo-603","Changes for NetLogo 6.0.3",[57,76,77],{},[16,78,80],{"href":79},"#changes-for-netlogo-60","Changes for NetLogo 6.0",[57,82,83],{},[16,84,86],{"href":85},"#changes-for-netlogo-52","Changes for NetLogo 5.2",[57,88,89],{},[16,90,92],{"href":91},"#changes-for-netlogo-50","Changes for NetLogo 5.0",[57,94,95],{},[16,96,98],{"href":97},"#changes-for-netlogo-41","Changes for NetLogo 4.1",[57,100,101],{},[16,102,104],{"href":103},"#changes-for-netlogo-40","Changes for NetLogo 4.0",[57,106,107],{},[16,108,110],{"href":109},"#changes-for-netlogo-31","Changes for NetLogo 3.1",[112,113,116],"h2",{"id":114,"className":115},"changes-for-netlogo-700",[14],[16,117,62],{"className":118,"href":61},[19],[22,120,121,122,126],{},"See the following page for a list of important changes since NetLogo 6.4:\n",[16,123,125],{"href":124},"netlogo7intro","NetLogo 7.0.0 Changes Overview",".",[22,128,129,130,134,135,126],{},"Changes directly affecting models are\n",[16,131,133],{"href":132},"netlogo7intro#new-file-format","the new file format"," and\n",[16,136,138],{"href":137},"netlogo7intro#widget-sizes","widget size conversion",[112,140,143],{"id":141,"className":142},"changes-for-netlogo-610",[14],[16,144,68],{"className":145,"href":67},[19],[147,148,151],"h3",{"id":149,"className":150},"cf-extension-removal",[14],[16,152,155],{"className":153,"href":154},[19],"#cf-extension-removal","CF Extension Removal",[22,157,158,159,163,164,167,168,163,181,190,191,194],{},"The CF extension is no longer bundled with NetLogo. The multi-conditional\n",[160,161,162],"code",{},"cf:ifelse"," and ",[160,165,166],{},"cf:ifelse-value"," primitives are now now supported directly in\nNetLogo without an extension by ",[160,169,172],{"className":170},[171],"netlogo-command",[16,173,179],{"href":174,"rel":175,"className":177,"dataDisplayText":179,"target":180,"title":179},"/dictionary#ifelse",[176],"noopener",[178],"netlogo-wiki-link","ifelse","_self",[160,182,184],{"className":183},[171],[16,185,189],{"href":186,"rel":187,"className":188,"dataDisplayText":189,"target":180,"title":189},"/dictionary#ifelse-value",[176],[178],"ifelse-value",". Simply remove\nthe ",[160,192,193],{},"cf:"," from the primitives in your models and they should work as they did\nbefore with CF.",[147,196,199],{"id":197,"className":198},"ifelse-value-precedence-change-with-infix-operators",[14],[16,200,203,205],{"className":201,"href":202},[19],"#ifelse-value-precedence-change-with-infix-operators",[160,204,189],{}," Precedence Change with Infix Operators",[22,207,208,209,211,212,215,216,219,220,222],{},"In previous versions, ",[160,210,189],{}," expressions would be parsed before infix\nexpressions they were a part of, like ",[160,213,214],{},"+"," or ",[160,217,218],{},"-",". Now ",[160,221,189],{}," has a lower\nprecedence to let it work with a variable number of clauses.",[22,224,225,226,228,229,231],{},"This used to work, but will now complain about finding a block or list where it\nwanted a number, since the ",[160,227,214],{}," is parsed before the ",[160,230,189],{},":",[233,234,235],"pre",{},[160,236,237,243,244,249,250,255,256,260,261,264,265,243,268,249,272,255,276,280],{},[238,239,189],"span",{"className":240},[241,242],"token","reporter"," (",[238,245,248],{"className":246},[241,247],"constant","true",") [",[238,251,254],{"className":252},[241,253],"number","10","] [",[238,257,259],{"className":258},[241,253],"3","] ",[238,262,214],{"className":263},[241,242]," ",[238,266,189],{"className":267},[241,242],[238,269,271],{"className":270},[241,247],"false",[238,273,275],{"className":274},[241,253],"5",[238,277,279],{"className":278},[241,253],"7","]",[22,282,283,284,286],{},"Now you just need to wrap your ",[160,285,189],{}," in parenthesis to tell NetLogo\nthat you want to add the separate expressions:",[233,288,289],{},[160,290,291,292,243,295,249,298,255,301,304,305,243,308,243,311,249,314,255,317,320],{},"(",[238,293,189],{"className":294},[241,242],[238,296,248],{"className":297},[241,247],[238,299,254],{"className":300},[241,253],[238,302,259],{"className":303},[241,253],"]) ",[238,306,214],{"className":307},[241,242],[238,309,189],{"className":310},[241,242],[238,312,271],{"className":313},[241,247],[238,315,275],{"className":316},[241,253],[238,318,279],{"className":319},[241,253],"])",[112,322,325],{"id":323,"className":324},"changes-for-netlogo-603",[14],[16,326,74],{"className":327,"href":73},[19],[147,329,332],{"id":330,"className":331},"arduino-extension-changes",[14],[16,333,336],{"className":334,"href":335},[19],"#arduino-extension-changes","Arduino Extension Changes",[22,338,339,340,343,344,346],{},"The ",[160,341,342],{},"arduino"," extension has substantially changed the way it receives values\nfrom Arduino boards. Please consult the arduino example sketch (included within\nthe “models” folder under Chapter 8 of the IABM textbook) for an updated sketch\ncompatible with the Arduino example model. If you have an existing arduino\nsketch, you will need to adjust the format used to send values to NetLogo. Old\nsketches will have code which sends back messages like “;A,2.5;”. For the new\nversion of the ",[160,345,342],{}," extension to receive the same message, sketches should\nsend “;A,D,2.5;” instead. The added ‘D,’ informs Netlogo that the value being\nsent is a number and not a string.",[147,348,351],{"id":349,"className":350},"cf-extension-changes",[14],[16,352,355],{"className":353,"href":354},[19],"#cf-extension-changes","CF Extension Changes",[22,357,358,359,362,363,163,365,367,368,370,371,163,373,375,376,380,381,383],{},"All primitives have been removed from the ",[160,360,361],{},"cf"," extension and replaced by the\n",[160,364,162],{},[160,366,166],{}," multi-branch primitives. We encourage existing\n",[160,369,361],{}," users to adjust their code to use these new primitives. Over time, we hope\nto use these primitives as an example on which to remodel NetLogo’s existing\n",[160,372,179],{},[160,374,189],{}," primitives. Because this would be a relatively large\nlanguage change, we would love to hear any\n",[16,377,379],{"href":378},"mailto:ccl-feedback@ccl.northwestern.edu","feedback address"," you may have from\nusing these ",[160,382,361],{}," extension primitives.",[112,385,388],{"id":386,"className":387},"changes-for-netlogo-60",[14],[16,389,80],{"className":390,"href":79},[19],[147,392,395],{"id":393,"className":394},"tasks-replaced-by-anonymous-procedures",[14],[16,396,399],{"className":397,"href":398},[19],"#tasks-replaced-by-anonymous-procedures","Tasks replaced by Anonymous Procedures",[22,401,402,403,406,407,411,412,415,416,419,420,423,424,134,427,430,431,134,434,126],{},"In NetLogo 6.0, tasks have been replaced by anonymous procedures. This means\nthat ",[160,404,405],{},"task"," is no longer a primitive, it’s been replaced by the new\n",[16,408,410],{"href":409},"dictionary#arrow","arrow syntax"," for creating anonymous procedures.\nSimilarly, question mark variables like ",[160,413,414],{},"?",", ",[160,417,418],{},"?1",", and ",[160,421,422],{},"?2"," are now just\nordinary names in NetLogo and can be used to name procedure variables, let\nvariables, or anonymous procedure variables. Finally, ",[160,425,426],{},"is-reporter-task?",[160,428,429],{},"is-command-task?"," have been replaced by ",[160,432,433],{},"is-anonymous-reporter?",[160,435,436],{},"is-anonymous-command?",[22,438,439,440,456,457,480,481,485],{},"To make this transition easier, we’ve added an automatic conversion step which\nshould allow most models saved in NetLogo 5 to be converted to use the new\nsyntax automatically. The autoconverter has been a substantial piece of effort\nand we’ve tested it on all the models in the models library. To use it, ensure\nthe model compiles and run properly in NetLogo 5 or later, then save it from\nNetLogo 5 or later. Then, simply open the model in NetLogo 6. If all goes well,\nyou’ll see the converter has changed code like ",[160,441,442,445,446,264,450,264,453,280],{},[238,443,405],{"className":444},[241,242]," [",[238,447,418],{"className":448},[241,449],"variable",[238,451,214],{"className":452},[241,242],[238,454,422],{"className":455},[241,449]," to\n",[160,458,459,460,264,463,260,466,264,470,264,473,264,476,479],{},"[ [",[238,461,418],{"className":462},[241,449],[238,464,422],{"className":465},[241,449],[238,467,469],{"className":468},[241,242],"->",[238,471,418],{"className":472},[241,449],[238,474,214],{"className":475},[241,242],[238,477,422],{"className":478},[241,449]," ]",". The question marks are meant to serve as temporary\nplaceholders for conversion. They enable your model to run, but you can (and\nshould) replace these variables with meaningful names. If you open a model with\ntasks and it has ",[482,483,484],"em",{},"not"," been converted, the autoconverter wasn’t able to convert\nyour model. Rather than attempt to autoconvert your model and break something,\nthe model will open, you will be shown the appropriate errors and given a chance\nto edit your model.",[22,487,488],{},"While we have tested the autoconverter thoroughly, we expect there to be some\ncases it doesn’t cover.",[54,490,491,494],{},[57,492,493],{},"If you make use of extensions that aren’t yet compiled for NetLogo 6, the\nautoconverter will not work until those extensions have been updated.",[57,495,496,497,215,500,503,504,163,506,508,509,215,511,513],{},"If your code uses ",[160,498,499],{},"run",[160,501,502],{},"runresult"," to evaluate strings containing tasks,\nthe autoconverter will not change those strings to be anonymous procedures. To\nmake ",[160,505,499],{},[160,507,502],{}," work as expected, look at strings in your model and\nchange any which rely on ",[160,510,405],{},[160,512,414],{},"-variables to instead rely on anonymous\nprocedures",[22,515,516,517,519],{},"If your model doesn’t fall into the above categories and doesn’t convert or\nconverts incorrectly, please email our\n",[16,518,379],{"href":378}," and we’ll be happy\nto offer whatever assistance we can.",[147,521,524],{"id":522,"className":523},"link-reporters-overhauled-to-be-more-consistent-and-flexible",[14],[16,525,528],{"className":526,"href":527},[19],"#link-reporters-overhauled-to-be-more-consistent-and-flexible","Link reporters overhauled to be more consistent and flexible",[22,530,531,532,535,536,539,540,543,544,547],{},"In previous versions of NetLogo, link reporters have had a number of\ninconsistencies regarding directed and undirected links. For example, ",[160,533,534],{},"my-links","\nwould report ",[482,537,538],{},"all"," links connected to a turtle, whereas ",[160,541,542],{},"link-neighbors"," would\nonly report neighbors connected by ",[482,545,546],{},"undirected"," links. Furthermore, it was quite\ndifficult to work with models where the links could either be directed or\nundirected.",[22,549,550],{},"To alleviate these issues, the link primitives have been overhauled in 6.0.\nThese changes only affect existing models that use both directed and undirected\nlinks while also using the unbreeded link primitives.",[22,552,553],{},"The changes are as follows:",[54,555,556,586,610],{},[57,557,558,559,562,563,565,566,585],{},"Link reporters that contain the word “out” now utilize both directed, outgoing\nlinks and undirected links. That is, they now specify links that can be used\nto get from the current node to other nodes. For example, ",[160,560,561],{},"out-link-neighbor?","\nwill report ",[160,564,248],{}," if the current turtle is connected to the given turtle by\neither an outgoing directed link or an undirected link. If you only want\ndirected, outgoing links, you can use a breed-specific reporter or\n",[160,567,568,264,572,576,577,264,581,479],{},[238,569,571],{"className":570},[241,242],"my-out-links",[238,573,575],{"className":574},[241,242],"with"," [ ",[238,578,580],{"className":579},[241,449],"is-directed?",[238,582,584],{"className":583},[241,242],"self",". Generally, when working with models\nthat have both directed and undirected links, you will probably want to use\nthe “out” primitives for most things now.",[57,587,588,589,562,592,594,595,126],{},"Link reporters that contain the word “in” now utilize both directed, incoming\nlinks and undirected links. That is, they now specify links that can be used\nto get to the current node from other nodes. For example, ",[160,590,591],{},"in-link-neighbor?",[160,593,248],{}," if the current turtle is connected to the given turtle by\neither an incoming directed link or an undirected link. If you only want\ndirected, incoming links, you can use a breed-specific reporter or\n",[160,596,597,264,601,576,604,264,607,479],{},[238,598,600],{"className":599},[241,242],"my-in-links",[238,602,575],{"className":603},[241,242],[238,605,580],{"className":606},[241,449],[238,608,584],{"className":609},[241,242],[57,611,612,613,615],{},"Link reporters that do not specify “out” or “in” utilize ",[482,614,538],{}," links.",[22,617,618],{},"Furthermore, there are no longer restrictions regarding which reporters can be\nused with which breeds. For unbreeded links, this makes it possible to use the\nsame primitives regardless of whether your network ends up being directed or\nundirected.",[22,620,621],{},"The new behavior (including all changed primitives) is summarized by the\nfollowing table, where “un” refers to undirected links, “out” refers to\ndirected, outgoing links, and “in” refers to directed, incoming links.",[623,624,627],"h5",{"id":625,"className":626},"new-link-reporter-behavior",[14],[16,628,631],{"className":629,"href":630},[19],"#new-link-reporter-behavior","New link reporter behavior",[22,633,634],{},[635,636],"img",{"alt":637,"src":638,"width":639,"height":640,"style":641},"Table showing new link behavior","/_content/images/transition/new-link-behavior.png",511,401,{"aspectRatio":642},"511/401",[623,644,647],{"id":645,"className":646},"old-link-reporter-behavior",[14],[16,648,651],{"className":649,"href":650},[19],"#old-link-reporter-behavior","Old link reporter behavior",[22,653,654],{},[635,655],{"alt":656,"src":657,"width":639,"height":640,"style":658},"Table showing old link behavior","/_content/images/transition/old-link-behavior.png",{"aspectRatio":642},[147,660,663],{"id":661,"className":662},"removal-of-applets",[14],[16,664,667],{"className":665,"href":666},[19],"#removal-of-applets","Removal of Applets",[22,669,670,671,676],{},"Oracle, the company behind Java, has announced that Java applets are deprecated\n(see\n",[16,672,675],{"href":673,"rel":674},"https://blogs.oracle.com/java-platform-group/entry/moving_to_a_plugin_free",[35],"this blog post","\nfor more information). This comes as the major browsers have removed support for\nplug-ins (like java applets) or announced that they plan to do so.",[22,678,679],{},"Instead of using applets to distribute your model, NetLogo offers the option to\nexport to NetLogo Web. While NetLogo Web doesn’t yet offer the full\nfunctionality of desktop NetLogo (in particular, extensions aren’t supported),\nit is now capable of running most of the models in the NetLogo models library\nand we hope that most model distributors will find that it meets their needs. To\nexport to NetLogo Web, choose the “Save As NetLogo Web” option from the “File”\nmenu.",[147,681,684],{"id":682,"className":683},"changes-to-the-netlogo-user-interface",[14],[16,685,688],{"className":686,"href":687},[19],"#changes-to-the-netlogo-user-interface","Changes to the NetLogo User Interface",[22,690,691],{},"Users will notice several tweaks to the NetLogo User interface when opening\nNetLogo 6 for the first time. We’ve removed the bar border above the view. To\nopen the 3D View in 6.0, you can right click on the view and choose “Switch to\n3D View”, or choose the same option from the “Tools” menu. Ticks are now\ndisplayed in the interface tab toolbar beneath the speed slider. To adjust the\nlabel used for “ticks” and other view properties, you can choose the “Settings”\nbutton at the far right of the interface tab toolbar or right-click on the view\nand choose “Edit…” from the context menu that appears.",[147,693,696],{"id":694,"className":695},"nobody-not-permitted-as-a-chooser-value",[14],[16,697,700],{"className":698,"href":699},[19],"#nobody-not-permitted-as-a-chooser-value","Nobody Not Permitted as a Chooser Value",[22,702,703,704,707,708,215,718,415,721,723,724,726,727,729,730,732,733,736],{},"In NetLogo 6.0, ",[160,705,706],{},"nobody"," is no longer a valid chooser value. Just as you can’t\nput ",[160,709,710,264,714],{},[238,711,713],{"className":712},[241,242],"turtle",[238,715,717],{"className":716},[241,253],"0",[160,719,720],{},"turtles",[160,722,706],{}," refers to a non-literal value which isn’t\nsupported in choosers. As part of this transition, choosers containing ",[160,725,706],{},"\n(or ",[160,728,706],{}," within a nested list) will have all uses of ",[160,731,706],{}," changed to\n",[160,734,735],{},"\"nobody\""," when opened in NetLogo 6.0.",[147,738,741],{"id":739,"className":740},"breeds-must-have-singular-and-plural-names",[14],[16,742,745],{"className":743,"href":744},[19],"#breeds-must-have-singular-and-plural-names","Breeds must have singular and plural names",[22,747,748,749,760],{},"In NetLogo 6.0, you must specify both plural and singular breed names. In prior\nversions, declarations like ",[160,750,751,445,756,280],{},[238,752,755],{"className":753},[241,754],"keyword","breed",[238,757,759],{"className":758},[241,449],"mice"," were legal, but this support has been\nremoved in 6.0. If you have models which use only plural breed names, it is\nrecommended that you convert them to specify both names before opening in 6.0\nsince doing so will permit the NetLogo converter to work most effectively on any\nother code in your model which needs conversion.",[147,762,765],{"id":763,"className":764},"removal-of-movie-prims",[14],[16,766,769],{"className":767,"href":768},[19],"#removal-of-movie-prims","Removal of “Movie” Prims",[22,771,772,773,776,777,779,780,783,784,786,787,790],{},"The NetLogo movie prims hadn’t been updated in quite some time and generated\ninvalid quicktime movie files. They have been replaced by prims in the new ",[160,774,775],{},"vid","\nextension. The full documentation for the ",[160,778,775],{}," extension is available in the\n",[16,781,782],{"href":775},"Vid Extension"," section of the manual. As with all extensions, users\nwill need to include ",[160,785,775],{}," in the ",[160,788,789],{},"extensions"," section of their NetLogo model.",[22,792,793,794,796],{},"Many of the movie primitives have direct parallels in the ",[160,795,775],{}," extension which\ncan be found in the following table:",[39,798,801],{"className":799},[800],"table-container",[802,803,804,817],"table",{},[805,806,807],"thead",{},[808,809,810,814],"tr",{},[811,812,813],"th",{},"movie prim",[811,815,816],{},"vid prim",[818,819,820,833,852,864,876,905],"tbody",{},[808,821,822,828],{},[823,824,825],"td",{},[160,826,827],{},"movie-cancel",[823,829,830],{},[160,831,832],{},"vid:reset-recorder",[808,834,835,840],{},[823,836,837],{},[160,838,839],{},"movie-close",[823,841,842],{},[160,843,844,264,848],{},[238,845,847],{"className":846},[241,449],"vid:save-recording",[238,849,851],{"className":850},[241,449],"*file-name*",[808,853,854,859],{},[823,855,856],{},[160,857,858],{},"movie-grab-view",[823,860,861],{},[160,862,863],{},"vid:record-view",[808,865,866,871],{},[823,867,868],{},[160,869,870],{},"movie-grab-interface",[823,872,873],{},[160,874,875],{},"vid:record-interface",[808,877,878,889],{},[823,879,880],{},[160,881,882,264,886],{},[238,883,885],{"className":884},[241,449],"movie-start",[238,887,851],{"className":888},[241,449],[823,890,891],{},[160,892,893,264,897,264,901],{},[238,894,896],{"className":895},[241,449],"vid:start-recorder",[238,898,900],{"className":899},[241,449],"*optional-width*",[238,902,904],{"className":903},[241,449],"*optional-height*",[808,906,907,912],{},[823,908,909],{},[160,910,911],{},"movie-status",[823,913,914],{},[160,915,916],{},"vid:recorder-status",[22,918,919,920,923,924,926,927,930],{},"When you first open a file in NetLogo 6.0, your file will be automatically\nconverted to use the new primitives. This will include adding a new global\nvariable - ",[160,921,922],{},"_recording-save-file-name"," to track the name of the active\nrecording, as well as adding the ",[160,925,775],{}," extension to the model. You should verify\nthat the conversion took place correctly. There is no replacement for\n",[160,928,929],{},"movie-set-frame-rate",". The vid extension records frames at 25 per second,\nslightly more than the default 15 frames-per-second of the movie prims. If your\nrecording is sensitive to framerate, consider recording each existing frame\ntwice (2/25 is fairly close to 1/15) or consider using a postprocessing tool\n(like gstreamer or ffmpeg) to adjust the video playback speed.",[147,932,935],{"id":933,"className":934},"improved-name-collision-detection",[14],[16,936,939],{"className":937,"href":938},[19],"#improved-name-collision-detection","Improved Name Collision Detection",[22,941,942,943,957,958,972,973,215,976,979,980,215,982,984],{},"In NetLogo 6.0, expanded error-checking in the NetLogo compiler causes models\nwhich define ",[160,944,945,576,949,264,953,479],{},[238,946,948],{"className":947},[241,754],"undirected-link-breed",[238,950,952],{"className":951},[241,449],"undirected-links",[238,954,956],{"className":955},[241,449],"undirected-link"," and/or\n",[160,959,960,576,964,264,968,479],{},[238,961,963],{"className":962},[241,754],"directed-link-breed",[238,965,967],{"className":966},[241,449],"directed-links",[238,969,971],{"className":970},[241,449],"directed-link"," to error for redefining a\nprimitive reporter (either ",[160,974,975],{},"is-directed-link?",[160,977,978],{},"is-undirected-link?","). If\nyour model doesn’t use ",[160,981,975],{},[160,983,978],{}," at all,\nsimply changing the breed names should resolve the error.",[22,986,987,988,991,992,957,994,996,997,999,1000,1002,1003,126],{},"If you used either of the ",[160,989,990],{},"is-\u003Cdirectedness>-link?"," prim, there are several ways\nyou might modify your model to account for this change. If your model has no\nother breeded links, consider removing the link breed and using the built-in\nlink primitives. If your model has other breeded links, but only of different\ndirectedness, simply changing the breed name (and all related primitive names)\nshould resolve the problem. Note that in this case ",[160,993,975],{},[160,995,978],{}," continue to behave the same as before. If your model has\nother breeded links of the same directedness, the change will vary depending on\nyour model. The breed name(s) must be changed, but you must decide whether you\nused ",[160,998,975],{}," / ",[160,1001,978],{}," to check link directedness or\nto check that link breed membership. If you used it to check link directedness\nleaving it as-is should keep the current behavior of the model. Otherwise, it\ncan simply be replaced by ",[160,1004,1005],{},"is-\u003Cbreed>?",[147,1007,1010],{"id":1008,"className":1009},"removal-of-hubnet-set-client-interface",[14],[16,1011,1014,1015],{"className":1012,"href":1013},[19],"#removal-of-hubnet-set-client-interface","Removal of ",[160,1016,1017],{},"hubnet-set-client-interface",[22,1019,339,1020,1022,1023,1025],{},[160,1021,1017],{}," primitive was rendered obsolete by the\nintroduction of the HubNet client editor and end of support for calculator\nHubNet. We have found it used in very few models and have decided to remove it\nfrom the language. On opening an existing model in 6.0, the autoconverter should\nremove all uses of ",[160,1024,1017],{}," from your code.",[147,1027,1030],{"id":1028,"className":1029},"improved-updated-extensions-api",[14],[16,1031,1034],{"className":1032,"href":1033},[19],"#improved--updated-extensions-api","Improved & Updated Extensions API",[22,1036,1037,1038,1041],{},"One of our goals in NetLogo 6.0 has been to make it easier to develop extensions\nand easy to develop more ",[482,1039,1040],{},"powerful"," extensions. To that end, we’ve bumped the\nextension API from 5.0 to 6.0. Existing extensions will need to recompile\nchanging the “NetLogo-Extension-API-Version” in their jar’s MANIFEST.MF from 5.0\nto 6.0.",[22,1043,1044],{},"Some of the changes we’ve made to the extensions API include:",[54,1046,1047,1056,1062],{},[57,1048,1049,1052,1053,126],{},[160,1050,1051],{},"org.nlogo.api.Context"," now allows access to the current world and workspace\nobjects without requiring a cast to an ",[160,1054,1055],{},"org.nlogo.nvm.ExtensionContext",[57,1057,1058,1061],{},[160,1059,1060],{},"org.nlogo.api.Workspace"," has been introduced as a stable API for extensions\nto depend on.",[57,1063,1064],{},"A NetLogo jar is now available from BinTray.",[22,1066,1067,1068,1073],{},"For a full list of changes between 5.0 and 6.0, please visit our\n",[16,1069,1072],{"href":1070,"rel":1071},"https://github.com/NetLogo/NetLogo/wiki/6.0-Extension-and-Controlling-API-Transition-Guide",[35],"Extension Transition Guide","\non GitHub.",[22,1075,1076,1077,1082,1083,1090],{},"In service of making it easier to build extensions, we’ve expanded and improved\nthe\n",[16,1078,1081],{"href":1079,"rel":1080},"https://github.com/NetLogo/NetLogo-Extension-Plugin",[35],"NetLogo Extension Plugin","\nfor ",[16,1084,1087],{"href":1085,"rel":1086},"http://www.scala-sbt.org/",[35],[160,1088,1089],{},"sbt",", the Scala Build Tool. Sbt is a powerful\ntool for building JVM projects and can be used in projects that use Scala, Java,\nor a combination of the two. We’re now using the Extension Plugin to build all\nof the bundled extensions and we strongly recommend extension authors take\nadvantage of the plugin as it makes configuring a NetLogo extension build\nextremely straightforward. The plugin handles fetching the NetLogo jar which\nextensions compile against as well as generation of a jar for the extension\ncontaining the appropriate metadata.",[147,1092,1095],{"id":1093,"className":1094},"add-range-primitive",[14],[16,1096,1099,1100,1103],{"className":1097,"href":1098},[19],"#add-range-primitive","Add ",[160,1101,1102],{},"range"," primitive",[22,1105,1106,1107,1109,1110,1112,1113,1116,1117,1119],{},"A new ",[160,1108,1102],{}," primitive was added in NetLogo 6. As “range” may appear in\nexisting models as a procedure or variable name, we have added an autoconversion\nstep which will ensure that these models continue to operate immediately upon\nopening in NetLogo 6. Existing uses of ",[160,1111,1102],{}," in models authored before NetLogo\n6 will be converted to ",[160,1114,1115],{},"_range"," upon first opening in NetLogo 6. Once the model\nopens, you can rename ",[160,1118,1115],{}," to suit your model.",[112,1121,1124],{"id":1122,"className":1123},"changes-for-netlogo-52",[14],[16,1125,86],{"className":1126,"href":85},[19],[147,1128,1131],{"id":1129,"className":1130},"hsb-primitives",[14],[16,1132,1135],{"className":1133,"href":1134},[19],"#hsb-primitives","hsb primitives",[22,1137,1138,1139,415,1142,163,1145,126],{},"In 5.2, the hsb primitives have been changed to work with the standard scale\nvalues of 360 for hue, and 100 for saturation and brightness. This affects the\nprimitives ",[160,1140,1141],{},"hsb",[160,1143,1144],{},"extract-hsb",[160,1146,1147],{},"approximate-hsb",[22,1149,1150,1151,415,1154,163,1157,126],{},"The old primitives, scaled to 255, are automatically transitioned to and have\nbeen renamed ",[160,1152,1153],{},"__hsb-old",[160,1155,1156],{},"__extract-hsb-old",[160,1158,1159],{},"__approximate-hsb-old",[147,1161,1164],{"id":1162,"className":1163},"gogo-extension",[14],[16,1165,1168],{"className":1166,"href":1167},[19],"#gogo-extension","GoGo extension",[22,1170,1171],{},"The GoGo extension has been upgraded to use newer GoGo boards with the HID\ninterface. Many of the older primitives no longer work, and will alert you to\nupgrading your GoGo board’s firmware.",[22,1173,1174,1175,126],{},"If you need to continue to use a serial interface, you can use the bundled\ngogo-serial extension. Change your model to use gogo-serial as opposed to gogo.\nMore details ",[16,1176,1179],{"href":1177,"rel":1178},"https://github.com/NetLogo/NetLogo/wiki/GoGo-Upgrade",[35],"here",[22,1181,1182,1183],{},"If you cannot upgrade to use the new HID extension nor the new serial extension,\nthe original extension can be found at\n",[16,1184,1185],{"href":1185,"rel":1186},"https://github.com/NetLogo/GoGo-RXTX-Extension",[35],[112,1188,1191],{"id":1189,"className":1190},"changes-for-netlogo-50",[14],[16,1192,92],{"className":1193,"href":91},[19],[147,1195,1198],{"id":1196,"className":1197},"plotting",[14],[16,1199,1202],{"className":1200,"href":1201},[19],"#plotting","Plotting",[22,1204,1205],{},"In 5.0, you don’t have to put your plotting code in the Code tab anymore.\nInstead, you can put it inside the plots themselves, in the Interface tab.",[22,1207,1208],{},"Nonetheless, the old style and all of the existing plotting primitives are still\nsupported. We recommend changing your model to use the new style, but if you\ndon’t, it should still work.",[22,1210,1211],{},"The following example shows how to change a model to use the new style. Suppose\nyou have a typical NetLogo 4.1 model with one plot called “populations” and two\npens called “robots” and “humans”. The old code might look like:",[233,1213,1214],{},[160,1215,1216,264,1220,1224,1227,1228,1233,1227,1235,1239,1227,1241,1245,1251,1253,264,1258,1262,1227,1264,1267,1227,1269,1273,1227,1275,1278,1283,1285,264,1290,1293,1227,1295,264,1299,1304,1227,1306,264,1310,1314,1227,1316,264,1320,264,1324,1328,1227,1330,264,1333,1337,1227,1339,264,1342,264,1345,1349],{},[238,1217,1219],{"className":1218},[241,754],"to",[238,1221,1223],{"className":1222},[241,449],"setup",[1225,1226],"br",{},"  ",[238,1229,1232],{"className":1230},[241,1231],"command","clear-all",[1225,1234],{},[238,1236,1238],{"className":1237},[241,449],"...",[1225,1240],{},[238,1242,1244],{"className":1243},[241,449],"do-plotting",[238,1246,1248,1250],{"className":1247},[241,754],[1225,1249],{},"end",[1225,1252],{},[238,1254,1256,1219],{"className":1255},[241,754],[1225,1257],{},[238,1259,1261],{"className":1260},[241,449],"go",[1225,1263],{},[238,1265,1238],{"className":1266},[241,449],[1225,1268],{},[238,1270,1272],{"className":1271},[241,1231],"tick",[1225,1274],{},[238,1276,1244],{"className":1277},[241,449],[238,1279,1281,1250],{"className":1280},[241,754],[1225,1282],{},[1225,1284],{},[238,1286,1288,1219],{"className":1287},[241,754],[1225,1289],{},[238,1291,1244],{"className":1292},[241,449],[1225,1294],{},[238,1296,1298],{"className":1297},[241,1231],"set-current-plot",[238,1300,1303],{"className":1301},[241,1302],"string","\"populations\"",[1225,1305],{},[238,1307,1309],{"className":1308},[241,1231],"set-current-plot-pen",[238,1311,1313],{"className":1312},[241,1302],"\"robots\"",[1225,1315],{},[238,1317,1319],{"className":1318},[241,1231],"plot",[238,1321,1323],{"className":1322},[241,242],"count",[238,1325,1327],{"className":1326},[241,449],"robots",[1225,1329],{},[238,1331,1309],{"className":1332},[241,1231],[238,1334,1336],{"className":1335},[241,1302],"\"humans\"",[1225,1338],{},[238,1340,1319],{"className":1341},[241,1231],[238,1343,1323],{"className":1344},[241,242],[238,1346,1348],{"className":1347},[241,449],"humans",[238,1350,1352,1250],{"className":1351},[241,754],[1225,1353],{},[22,1355,1356],{},"Here are the steps to make the transition:",[54,1358,1359,1377,1391,1397],{},[57,1360,1361,1362,1373,1374,1376],{},"Copy the ",[160,1363,1364,264,1367,264,1370],{},[238,1365,1319],{"className":1366},[241,1231],[238,1368,1323],{"className":1369},[241,242],[238,1371,1327],{"className":1372},[241,449]," command and paste it into the Update Commands\nfield for the robots pen in the plot edit dialog. Remove it from the\n",[160,1375,1244],{}," procedure.",[57,1378,339,1379,1390],{},[160,1380,1381,264,1384,264,1387],{},[238,1382,1319],{"className":1383},[241,1231],[238,1385,1323],{"className":1386},[241,242],[238,1388,1348],{"className":1389},[241,449]," command can be moved in the same way for the humans\npen.",[57,1392,1393,1394,1396],{},"After those lines are removed from the ",[160,1395,1244],{}," procedure, it doesn’t\nactually do anything anymore! Remove it.",[57,1398,1399,1400,1402,1403,134,1405,1407,1408,1410,1411,1413,1414,1417,1418,1420,1421,1423,1424,134,1426,1428],{},"The final step is to replace the ",[160,1401,1244],{}," procedure calls in ",[160,1404,1223],{},[160,1406,1261],{},". In ",[160,1409,1223],{},", the ",[160,1412,1244],{}," call should be changed to ",[160,1415,1416],{},"reset-ticks",".\nIn ",[160,1419,1261],{},", the do-plotting call should be changed to ",[160,1422,1272],{},". ",[160,1425,1416],{},[160,1427,1272],{}," will both cause plotting to happen automatically.",[22,1430,1431],{},"The resulting (much simpler) code looks like this:",[233,1433,1434],{},[160,1435,1436,264,1439,1442,1227,1444,1447,1227,1449,1452,1227,1454,1457,1462,1464,264,1469,1472,1227,1474,1477,1227,1479,1482],{},[238,1437,1219],{"className":1438},[241,754],[238,1440,1223],{"className":1441},[241,449],[1225,1443],{},[238,1445,1232],{"className":1446},[241,1231],[1225,1448],{},[238,1450,1238],{"className":1451},[241,449],[1225,1453],{},[238,1455,1416],{"className":1456},[241,1231],[238,1458,1460,1250],{"className":1459},[241,754],[1225,1461],{},[1225,1463],{},[238,1465,1467,1219],{"className":1466},[241,754],[1225,1468],{},[238,1470,1261],{"className":1471},[241,449],[1225,1473],{},[238,1475,1238],{"className":1476},[241,449],[1225,1478],{},[238,1480,1272],{"className":1481},[241,1231],[238,1483,1485,1250],{"className":1484},[241,754],[1225,1486],{},[22,1488,1489],{},"For more details on how plotting works in NetLogo 5.0, see the Plotting Sections\nof the Programming Guide and the Interface Guide. For details on how plotting\ninteracts with the tick counter, read on.",[147,1491,1494],{"id":1492,"className":1493},"tick-counter",[14],[16,1495,1498],{"className":1496,"href":1497},[19],"#tick-counter","Tick counter",[22,1500,1501],{},"The way the tick counter works has changed in 5.0. Instead of being initially\nset to 0, the tick counter is initially blank.",[44,1503,1505],{"id":1416,"className":1504},[14],[16,1506,1509],{"className":1507,"href":1508},[19],"#reset-ticks",[160,1510,1416],{},[22,1512,1513,1514,1516,1517,1520,1521,215,1523,1526],{},"You must use ",[160,1515,1416],{}," to start the tick counter at 0 before using ",[160,1518,1519],{},"ticks",",\n",[160,1522,1272],{},[160,1524,1525],{},"tick-advance"," for the first time.",[22,1528,1529,1531],{},[160,1530,1416],{}," should go at the end of your setup procedure. Putting it there\nwill allow your model to work with 5.0’s new plotting features.",[44,1533,1536],{"id":1534,"className":1535},"reset-ticks-and-plotting",[14],[16,1537,1540,1542],{"className":1538,"href":1539},[19],"#reset-ticks-and-plotting",[160,1541,1416],{}," and plotting",[22,1544,1545,1546,163,1548,1550,1551,1553,1554,1556],{},"In 5.0, you don’t have to put your plotting code in the Code tab anymore.\nInstead, you can put it inside the plots themselves, in the Interface tab. Code\ninside plots is triggered by ",[160,1547,1416],{},[160,1549,1272],{},". Resetting the tick\ncounter runs plot setup code, and then it also runs plot update code to plot the\ninitial state of the model. The initial state of the model won’t be in place\nuntil the end of ",[160,1552,1223],{},", so that’s why ",[160,1555,1416],{}," should go at the end.",[44,1558,1561],{"id":1559,"className":1560},"__clear-all-and-reset-ticks",[14],[16,1562,1565],{"className":1563,"href":1564},[19],"#__clear-all-and-reset-ticks",[160,1566,1559],{},[22,1568,1569,1570,1572,1573,1576,1577,1579,1580,163,1582,1584],{},"In order for models from previous NetLogo versions to work in 5.0 without\nchanges, when an old model is opened in 5.0, any occurrences of ",[160,1571,1232],{}," (or\n",[160,1574,1575],{},"ca",") are automatically changed to ",[160,1578,1559],{},", which combines\nthe effects of ",[160,1581,1232],{},[160,1583,1416],{},". The two underscores on the name\nindicate that this is not a normal primitive, but exists only for backwards\ncompatibility.",[22,1586,1587,1588,1590,1591,1593,1594,1596],{},"You should remove ",[160,1589,1559],{}," from your code, replace it with\n",[160,1592,1232],{},", and put ",[160,1595,1416],{}," at the end of your setup procedure. (This\ndoesn’t happen automatically because the structure of NetLogo models is too\nfree-form for an automatic converter to reliably make the change for you.)",[147,1598,1601],{"id":1599,"className":1600},"unicode-characters",[14],[16,1602,1605],{"className":1603,"href":1604},[19],"#unicode-characters","Unicode characters",[22,1607,1608],{},"NetLogo 5.0 fully supports international characters cross-platform, using the\nUnicode character set. NetLogo 5.0 model files always represent Unicode\ncharacters using the UTF-8 encoding.",[22,1610,1611],{},"Previous versions of NetLogo allowed Unicode characters to be used in some\ncontexts. However, model files were saved in the platform’s default encoding,\nwhich on most systems was something other than UTF-8. Characters were handled\ncorrectly on the same platform (e.g. two Windows machines), but could be altered\nif the model was moved between platforms (e.g. from Windows to Mac or vice\nversa).",[22,1613,1614],{},"When opening an existing model in NetLogo 5.0, if the model contains\ninternational or other non-ASCII characters, the characters may be interpreted\nincorrectly, because they were originally written in a platform-specific\nencoding, but then read back in in UTF-8.",[22,1616,1617],{},"If only a few characters are affected, you might find it easiest just to fix\nthem manually.",[22,1619,1620],{},"But if you expect a large number of characters to be affected, and you want them\ntranslated automatically, you can use a third party utility to re-encode your\n.nlogo file from its original encoding into UTF-8. After conversion, open the\nmodel in NetLogo 5.0 and all characters should be correct.",[147,1622,1625],{"id":1623,"className":1624},"info-tabs",[14],[16,1626,1629],{"className":1627,"href":1628},[19],"#info-tabs","Info tabs",[22,1631,1632],{},"NetLogo 5.0 uses the Markdown markup language to allow you to format your Info\ntab, including headers, bold and italics, images, and so forth.",[22,1634,1635],{},"Earlier versions of NetLogo used a custom markup language with much more limited\ncapabilities.",[22,1637,1638],{},"When opening a model from an older version, NetLogo 5.0 translates your old\nmarkup into Markdown. Most of the time this produces good results, but you may\nwant to check the results yourself and make sure that your Info tab still looks\ngood.",[147,1640,1643],{"id":1641,"className":1642},"model-speed",[14],[16,1644,1647],{"className":1645,"href":1646},[19],"#model-speed","Model speed",[22,1649,1650],{},"In NetLogo 5.0 every model has a “target frame rate” which affects the default\nspeed at which the model runs, when the speed slider is in the middle, on the\n“normal speed” setting.",[22,1652,1653],{},"The default target frame rate for new models, and for models that were created\nin earlier versions of NetLogo, is 30 frames per second. If you are using\ntick-based updates, as we recommend for most models, then that translates to 30\nticks per second.",[22,1655,1656],{},"If your model runs slower in 5.0 than it ran in 4.1, it’s probably just because\nits speed is being limited by this rate. If you want, you can press the Settings\nbutton in the Interface tab and change the frame rate to a higher number.",[22,1658,1659,1660,1663],{},"Some old models used the ",[160,1661,1662],{},"every"," command to set a default speed. In most case\nthis can be now removed from the code, and the target frame rate setting used\ninstead.",[147,1665,1668],{"id":1666,"className":1667},"list-performance",[14],[16,1669,1672],{"className":1670,"href":1671},[19],"#list-performance","List performance",[22,1674,1675],{},"The underlying data structure for NetLogo lists has changed.",[22,1677,1678,1679,134,1682,1685,1686,163,1689,1692],{},"In NetLogo 4.1, a NetLogo list was represented internally as a singly linked\nlist. Some operations on singly linked lists are fast (such as ",[160,1680,1681],{},"first",[160,1683,1684],{},"butfirst",") but others are slow because they could require traversing the whole\nlist (such as ",[160,1687,1688],{},"item",[160,1690,1691],{},"last",").",[22,1694,1695,1696,1700],{},"In NetLogo 5.0, lists are now actually trees internally. As a result, some\noperations are a little slower, but other operations are drastically faster on\nlong lists. See the\n",[16,1697,1699],{"href":1698},"/programming#lists","Lists section of the Programming Guide"," for details.",[22,1702,1703],{},"Some models may run a little slower with the new data structure, especially if\nyou make heavy use of short lists. But other models will run faster — perhaps\ndramatically faster.",[22,1705,1706,1707,1710,1711,1714,1715,1717,1718,1721,1722,163,1724,1726],{},"Some special ways of writing list-processing code that were useful in NetLogo\n4.1 are no longer needed in 5.0. For example, since in 4.1 ",[160,1708,1709],{},"fput"," was fast and\n",[160,1712,1713],{},"lput"," was slow, modelers sometimes built up lists in reverse order using\n",[160,1716,1709],{},", perhaps calling ",[160,1719,1720],{},"reverse"," later to restore the intended order. In\nNetLogo 5.0, you don’t need to code that way anymore. ",[160,1723,1709],{},[160,1725,1713],{}," are the\nsame speed.",[147,1728,1731],{"id":1729,"className":1730},"extensions-api",[14],[16,1732,1735],{"className":1733,"href":1734},[19],"#extensions-api","Extensions API",[22,1737,1738],{},"If you are the author of an extension, you will need to recompile it against the\n5.0 NetLogo.jar and lib directory for it to work with 5.0.",[22,1740,1741],{},"You may also need to be aware of the following changes:",[44,1743,1746],{"id":1744,"className":1745},"syntax-constants",[14],[16,1747,1750],{"className":1748,"href":1749},[19],"#syntax-constants","Syntax constants",[22,1752,1753,1754,1757,1758,1761],{},"The code for specifying the syntax of a primitive has changed slightly, for\nexample ",[160,1755,1756],{},"Syntax.TYPE_STRING"," is now ",[160,1759,1760],{},"Syntax.StringType()",". (From Java, the pair\nof parentheses at the end is required. In Scala, you can omit them.)",[44,1763,1766],{"id":1764,"className":1765},"logolist-construction",[14],[16,1767,1770],{"className":1768,"href":1769},[19],"#logolist-construction","LogoList construction",[22,1772,1773,1774,1777,1778,126],{},"One significant change is that ",[160,1775,1776],{},"org.nlogo.api.LogoList"," no longer has a public\nconstructor. Instead, there are two new ways to construct a ",[160,1779,1780],{},"LogoList",[22,1782,1783,1784,1787,1788,1790,1791,1794],{},"If you have a ",[160,1785,1786],{},"java.lang.Iterable",", you can copy the contents into a fresh\n",[160,1789,1780],{}," by passing it to the static method ",[160,1792,1793],{},"LogoList.fromJava()",". See the\narray extension source code for a sample usage.",[22,1796,1797,1798,1801,1802,1806,1807,126],{},"Or, to build up a new list one item a time, use ",[160,1799,1800],{},"org.nlogo.api.LogoListBuilder",".\nThe ",[16,1803,1805],{"href":1804},"/extensions","Extensions Guide"," has sample code showing the use of\n",[160,1808,1809],{},"LogoListBuilder",[44,1811,1814],{"id":1812,"className":1813},"primitive-classes",[14],[16,1815,1818],{"className":1816,"href":1817},[19],"#primitive-classes","Primitive classes",[22,1820,1821],{},"In prior NetLogo versions, the extensions API required that each extension\nprimitive have its own separate top-level class with a no-argument constructor.\nThese limitations have now been lifted. Also, api.Primitive objects are now made\nonly once, when the extension is loaded, instead of every time the Code tab was\nrecompiled.",[112,1823,1826],{"id":1824,"className":1825},"changes-for-netlogo-41",[14],[16,1827,98],{"className":1828,"href":97},[19],[147,1830,1833],{"id":1831,"className":1832},"combining-set-and-of",[14],[16,1834,1837,1838,163,1841],{"className":1835,"href":1836},[19],"#combining-set-and-of","Combining ",[160,1839,1840],{},"set",[160,1842,1843],{},"of",[22,1845,1846],{},"The following syntax is no longer supported:",[233,1848,1849],{},[160,1850,1851,445,1854,260,1858,264,1861,264,1865],{},[238,1852,1840],{"className":1853},[241,1231],[238,1855,1857],{"className":1856},[241,449],"\u003Cvariable>",[238,1859,1843],{"className":1860},[241,242],[238,1862,1864],{"className":1863},[241,449],"\u003Cagent>",[238,1866,1868],{"className":1867},[241,449],"\u003Cvalue>",[22,1870,1871,1872,231],{},"Commands of this form must be rewritten using ",[160,1873,1874],{},"ask",[233,1876,1877],{},[160,1878,1879,264,1882,576,1885,264,1888,264,1891,479],{},[238,1880,1874],{"className":1881},[241,1231],[238,1883,1864],{"className":1884},[241,449],[238,1886,1840],{"className":1887},[241,1231],[238,1889,1857],{"className":1890},[241,449],[238,1892,1868],{"className":1893},[241,449],[22,1895,1896],{},"Or, if the new value must be computed by the asking agent and not by the agent\nwhose variable is being set:",[233,1898,1899],{},[160,1900,1901,1906,1908,264,1912,264,1916,1919,1921,264,1924,576,1927,264,1930,264,1933,479,1936,1938,1940,1944,1946,264,1949,576,1952,264,1955,445,1958,260,1962,264,1965,479],{},[238,1902,1905],{"className":1903},[241,1904],"comment",";; OPTION #1 (using let):",[1225,1907],{},[238,1909,1911],{"className":1910},[241,1231],"let",[238,1913,1915],{"className":1914},[241,449],"new-value",[238,1917,1868],{"className":1918},[241,449],[1225,1920],{},[238,1922,1874],{"className":1923},[241,1231],[238,1925,1864],{"className":1926},[241,449],[238,1928,1840],{"className":1929},[241,1231],[238,1931,1857],{"className":1932},[241,449],[238,1934,1915],{"className":1935},[241,449],[1225,1937],{},[1225,1939],{},[238,1941,1943],{"className":1942},[241,1904],";; OPTION #2 (using myself):",[1225,1945],{},[238,1947,1874],{"className":1948},[241,1231],[238,1950,1864],{"className":1951},[241,449],[238,1953,1840],{"className":1954},[241,1231],[238,1956,1857],{"className":1957},[241,449],[238,1959,1961],{"className":1960},[241,449],"value",[238,1963,1843],{"className":1964},[241,242],[238,1966,1968],{"className":1967},[241,242],"myself",[22,1970,1971],{},"So for example, this:",[233,1973,1974],{},[160,1975,1976,445,1979,260,1983,264,1986,264,1989,264,1992],{},[238,1977,1840],{"className":1978},[241,1231],[238,1980,1982],{"className":1981},[241,242],"color",[238,1984,1843],{"className":1985},[241,242],[238,1987,713],{"className":1988},[241,242],[238,1990,717],{"className":1991},[241,253],[238,1993,1995],{"className":1994},[241,247],"red",[22,1997,1998],{},"Can be rewritten as:",[233,2000,2001],{},[160,2002,2003,264,2006,264,2009,576,2012,264,2015,264,2018,479],{},[238,2004,1874],{"className":2005},[241,1231],[238,2007,713],{"className":2008},[241,242],[238,2010,717],{"className":2011},[241,253],[238,2013,1840],{"className":2014},[241,1231],[238,2016,1982],{"className":2017},[241,242],[238,2019,1995],{"className":2020},[241,247],[22,2022,2023,2024,215,2026,2028],{},"It is not necessary to use ",[160,2025,1911],{},[160,2027,1968],{}," since red is red from the point of\nview of both agents.",[22,2030,2031],{},"However, this:",[233,2033,2034],{},[160,2035,2036,445,2039,260,2042,264,2045,264,2048,264,2051],{},[238,2037,1840],{"className":2038},[241,1231],[238,2040,1982],{"className":2041},[241,242],[238,2043,1843],{"className":2044},[241,242],[238,2046,713],{"className":2047},[241,242],[238,2049,717],{"className":2050},[241,253],[238,2052,1982],{"className":2053},[241,242],[22,2055,2056],{},"Must be rewritten as:",[233,2058,2059],{},[160,2060,2061,264,2064,264,2068,2071,2073,264,2076,264,2079,576,2082,264,2085,264,2088,479],{},[238,2062,1911],{"className":2063},[241,1231],[238,2065,2067],{"className":2066},[241,449],"new-color",[238,2069,1982],{"className":2070},[241,242],[1225,2072],{},[238,2074,1874],{"className":2075},[241,1231],[238,2077,713],{"className":2078},[241,242],[238,2080,717],{"className":2081},[241,253],[238,2083,1840],{"className":2084},[241,1231],[238,2086,1982],{"className":2087},[241,242],[238,2089,2067],{"className":2090},[241,449],[22,2092,2093],{},"or",[233,2095,2096],{},[160,2097,2098,264,2101,264,2104,576,2107,264,2110,445,2113,260,2116,264,2119,479],{},[238,2099,1874],{"className":2100},[241,1231],[238,2102,713],{"className":2103},[241,242],[238,2105,717],{"className":2106},[241,253],[238,2108,1840],{"className":2109},[241,1231],[238,2111,1982],{"className":2112},[241,242],[238,2114,1982],{"className":2115},[241,242],[238,2117,1843],{"className":2118},[241,242],[238,2120,1968],{"className":2121},[241,242],[22,2123,2124,2125,2127,2128,2130,2131,2133],{},"in order not to change the meaning, since the two agents may have different\nstarting values for ",[160,2126,1982],{},". The form using ",[160,2129,1968],{}," is briefer, but the former\nusing ",[160,2132,1911],{}," may be considered clearer, depending on context and individual\npreference.",[112,2135,2138],{"id":2136,"className":2137},"changes-for-netlogo-40",[14],[16,2139,104],{"className":2140,"href":103},[19],[147,2142,2145],{"id":2143,"className":2144},"who-numbering",[14],[16,2146,2149],{"className":2147,"href":2148},[19],"#who-numbering","Who numbering",[22,2151,2152,2153,2162,2163,2171,2172,2181],{},"Prior to NetLogo 4.0, a dead turtle’s who number (stored in the ",[160,2154,2156],{"className":2155},[171],[16,2157,2161],{"href":2158,"rel":2159,"className":2160,"dataDisplayText":2161,"target":180,"title":2161},"/dictionary#who",[176],[178],"who"," turtle\nvariable) could be reassigned to a later newborn turtle. In NetLogo 4.0, who\nnumbers are never reused until who numbering is reset to 0 by the ",[160,2164,2166],{"className":2165},[171],[16,2167,1232],{"href":2168,"rel":2169,"className":2170,"dataDisplayText":1232,"target":180,"title":1232},"/dictionary#clear-all",[176],[178],"\nor ",[160,2173,2175],{"className":2174},[171],[16,2176,2180],{"href":2177,"rel":2178,"className":2179,"dataDisplayText":2180,"target":180,"title":2180},"/dictionary#clear-turtles",[176],[178],"clear-turtles"," command. This change in behavior may break a few old\nmodels.",[147,2183,2186],{"id":2184,"className":2185},"turtle-creation-randomized-vs-ordered",[14],[16,2187,2190],{"className":2188,"href":2189},[19],"#turtle-creation-randomized-vs-ordered","Turtle creation: randomized vs. “ordered”",[22,2192,2193,2194,243,2203,2211,2212,2221,2222,1692],{},"NetLogo 4.0 provides two different observer commands for creating turtles,\n",[160,2195,2197],{"className":2196},[171],[16,2198,2202],{"href":2199,"rel":2200,"className":2201,"dataDisplayText":2202,"target":180,"title":2202},"/dictionary#create-turtles",[176],[178],"create-turtles",[160,2204,2206],{"className":2205},[171],[16,2207,2210],{"href":2199,"rel":2208,"className":2209,"dataDisplayText":2210,"target":180,"title":2210},[176],[178],"crt",") and ",[160,2213,2215],{"className":2214},[171],[16,2216,2220],{"href":2217,"rel":2218,"className":2219,"dataDisplayText":2220,"target":180,"title":2220},"/dictionary#create-ordered-turtles",[176],[178],"create-ordered-turtles","\n(",[160,2223,2225],{"className":2224},[171],[16,2226,2229],{"href":2217,"rel":2227,"className":2228,"dataDisplayText":2229,"target":180,"title":2229},[176],[178],"cro",[22,2231,2232,2234,2235,2237],{},[160,2233,2210],{}," gives the new turtles random colors and random integer headings. ",[160,2236,2229],{},"\nassigns colors sequentially and gives the turtles sequential equally spaced\nheadings, with the first turtle facing north (heading of 0).",[22,2239,2240,2241,2243,2244,2246,2247,2249,2250,126],{},"Prior to NetLogo 4.0, the ",[160,2242,2210],{}," command behaved the way ",[160,2245,2229],{}," does now. If your\nold model depends on the “ordered” behavior, you will need to change your code\nto use ",[160,2248,2229],{}," instead of ",[160,2251,2210],{},[22,2253,2254,2255,2257,2258,2272,2273,2288,2289,126],{},"It is common for old models that used ",[160,2256,2210],{}," to contain extra commands to\nrandomize the new turtles’ headings, for example ",[160,2259,2260,264,2264,264,2268],{},[238,2261,2263],{"className":2262},[241,1231],"rt",[238,2265,2267],{"className":2266},[241,242],"random",[238,2269,2271],{"className":2270},[241,253],"360"," or\n",[160,2274,2275,264,2278,264,2282,264,2285],{},[238,2276,1840],{"className":2277},[241,1231],[238,2279,2281],{"className":2280},[241,242],"heading",[238,2283,2267],{"className":2284},[241,242],[238,2286,2271],{"className":2287},[241,253],". These commands are no longer necessary when used\ninside ",[160,2290,2210],{},[147,2292,2295],{"id":2293,"className":2294},"adding-strings-and-lists",[14],[16,2296,2299],{"className":2297,"href":2298},[19],"#adding-strings-and-lists","Adding strings and lists",[22,2301,2240,2302,2310,2311,2313,2314,2323,2324,2333,2334,126],{},[160,2303,2305],{"className":2304},[171],[16,2306,214],{"href":2307,"rel":2308,"className":2309,"dataDisplayText":214,"target":180,"title":214},"/dictionary#symbols",[176],[178]," (addition) operator could be used to\nconcatenate strings and join lists. In current NetLogo, ",[160,2312,214],{}," only works on\nnumbers. To concatenate strings, use the ",[160,2315,2317],{"className":2316},[171],[16,2318,2322],{"href":2319,"rel":2320,"className":2321,"dataDisplayText":2322,"target":180,"title":2322},"/dictionary#word",[176],[178],"word"," primitive; to join lists\ntogether, use the ",[160,2325,2327],{"className":2326},[171],[16,2328,2332],{"href":2329,"rel":2330,"className":2331,"dataDisplayText":2332,"target":180,"title":2332},"/dictionary#sentence",[176],[178],"sentence"," primitive. This language change was made to\nincrease the speed of code that uses ",[160,2335,214],{},[22,2337,2338],{},"Old code:",[233,2340,2341],{},[160,2342,2343,264,2347,264,2351,264,2354,264,2357,264,2360,264,2363],{},[238,2344,2346],{"className":2345},[241,1231],"print",[238,2348,2350],{"className":2349},[241,1302],"\"There are \"",[238,2352,214],{"className":2353},[241,242],[238,2355,1323],{"className":2356},[241,242],[238,2358,720],{"className":2359},[241,242],[238,2361,214],{"className":2362},[241,242],[238,2364,2366],{"className":2365},[241,1302],"\" turtles.\"",[22,2368,2369],{},"New code:",[233,2371,2372],{},[160,2373,2374,243,2377,264,2380,264,2383,264,2386,264,2389,2392],{},[238,2375,2346],{"className":2376},[241,1231],[238,2378,2322],{"className":2379},[241,242],[238,2381,2350],{"className":2382},[241,1302],[238,2384,1323],{"className":2385},[241,242],[238,2387,720],{"className":2388},[241,242],[238,2390,2366],{"className":2391},[241,1302],")",[22,2394,2395],{},"Likewise, if you need to concatenate lists, use SENTENCE.",[22,2397,2398],{},"This change is not handled automatically when converting old models; users will\nneed to change their code by hand.",[22,2400,2401],{},"We know this change will be awkward for users who are used to the old syntax. We\nhave made this change for efficiency and consistency. We can implement an\naddition operator that only adds numbers much more efficiently than one that\nhandles several different data types. Because addition is such a common\noperation, NetLogo’s overall speed is affected.",[147,2403,2406],{"id":2404,"className":2405},"the-at-primitives",[14],[16,2407,339,2410,2413],{"className":2408,"href":2409},[19],"#the--at-primitives",[160,2411,2412],{},"-at"," primitives",[22,2415,2416,2417,415,2426,2435,2436,2444,2445,415,2454,264,2463,2435,2465,264,2473,2475,2476,2478],{},"The observer may no longer use ",[160,2418,2420],{"className":2419},[171],[16,2421,2425],{"href":2422,"rel":2423,"className":2424,"dataDisplayText":2425,"target":180,"title":2425},"/dictionary#patch-at",[176],[178],"patch-at",[160,2427,2429],{"className":2428},[171],[16,2430,2434],{"href":2431,"rel":2432,"className":2433,"dataDisplayText":2434,"target":180,"title":2434},"/dictionary#turtles-at",[176],[178],"turtles-at",", and\n",[160,2437,2439],{"className":2438},[171],[16,2440,2443],{"href":2431,"rel":2441,"className":2442,"dataDisplayText":2443,"target":180,"title":2443},[176],[178],"BREEDS-at",". Use ",[160,2446,2448],{"className":2447},[171],[16,2449,2453],{"href":2450,"rel":2451,"className":2452,"dataDisplayText":2453,"target":180,"title":2453},"/dictionary#patch",[176],[178],"patch",[160,2455,2457],{"className":2456},[171],[16,2458,2462],{"href":2459,"rel":2460,"className":2461,"dataDisplayText":2462,"target":180,"title":2462},"/dictionary#turtles-on",[176],[178],"turtles-on",[160,2464,2453],{},[160,2466,2468],{"className":2467},[171],[16,2469,2472],{"href":2459,"rel":2470,"className":2471,"dataDisplayText":2472,"target":180,"title":2472},[176],[178],"BREEDS-on",[160,2474,2453],{}," instead. Note that ",[160,2477,2453],{}," now rounds its\ninputs (before it only accepted integer inputs).",[147,2480,2483],{"id":2481,"className":2482},"links",[14],[16,2484,2487],{"className":2485,"href":2486},[19],"#links","Links",[22,2489,2490],{},"NetLogo 3.1 had supports for using links to connect turtles to make networks,\ngraphs, and geometric figures. The links were themselves turtles.",[22,2492,2493],{},"In NetLogo 4.0, instead of links being turtles, links are now an independent\nfourth agent type, right alongside observer, turtles, patches. The primitives\ninvolving links are no longer considered experimental; they are now fully part\nof the language.",[22,2495,2496],{},"Models that use the old, experimental turtle-based link primitives will need to\nbe updated to use link agents. The differences are not huge, but hand updating\nis required.",[22,2498,2499,2500,2503],{},"Links are documented in the ",[16,2501,2487],{"href":2502},"/programming#links"," section of the\nProgramming Guide, and in the NetLogo Dictionary entries for the link\nprimitives. See the Networks section of the Models Library for example models\nthat use links. There are also some link-based Code Examples.",[22,2505,2506,2507,134,2515,2523,2524,2527,2528,2537],{},"First you will need to remove any breeds called “links” if you are only using\none type of links then you will not have to use breeds at all. If you are using\nmultiple types of links see ",[160,2508,2510],{"className":2509},[171],[16,2511,948],{"href":2512,"rel":2513,"className":2514,"dataDisplayText":948,"target":180,"title":948},"/dictionary#undirected-link-breed",[176],[178],[160,2516,2518],{"className":2517},[171],[16,2519,963],{"href":2520,"rel":2521,"className":2522,"dataDisplayText":963,"target":180,"title":963},"/dictionary#directed-link-breed",[176],[178],". Commands and reporters that contain the word “links”\n(like ",[160,2525,2526],{},"__create-links-with",", etc.) will automatically be converted to the new\nform without underscores (",[160,2529,2531],{"className":2530},[171],[16,2532,2536],{"href":2533,"rel":2534,"className":2535,"dataDisplayText":2536,"target":180,"title":2536},"/dictionary#create-link",[176],[178],"create-links-with","). However,\nprimitives that use a different breed name (such as “edges”) will not be\nconverted. You will need to remove the underscores by hand and unless you are\ndeclaring a link breed with that name you will need to change the breed\ndesignation to “links”.",[22,2539,2540,2541,2544,2545,126],{},"The commands ",[160,2542,2543],{},"remove-link(s)-with/from/to"," no longer exist. Instead you should\nask the links in question to ",[160,2546,2548],{"className":2547},[171],[16,2549,2553],{"href":2550,"rel":2551,"className":2552,"dataDisplayText":2553,"target":180,"title":2553},"/dictionary#die",[176],[178],"die",[22,2555,2556],{},"For example:",[233,2558,2559],{},[160,2560,2561,264,2564,264,2567,576,2570,264,2574,479],{},[238,2562,1874],{"className":2563},[241,1231],[238,2565,713],{"className":2566},[241,242],[238,2568,717],{"className":2569},[241,253],[238,2571,2573],{"className":2572},[241,449],"__remove-links-with",[238,2575,542],{"className":2576},[241,242],[22,2578,2579],{},"becomes",[233,2581,2582],{},[160,2583,2584,264,2587,264,2590,576,2593,264,2596,576,2599,2602],{},[238,2585,1874],{"className":2586},[241,1231],[238,2588,713],{"className":2589},[241,242],[238,2591,717],{"className":2592},[241,253],[238,2594,1874],{"className":2595},[241,1231],[238,2597,534],{"className":2598},[241,242],[238,2600,2553],{"className":2601},[241,1231]," ] ]",[22,2604,2605,2606,415,2615,2624,2625],{},"Several of the layout commands have slightly different inputs, the first two\ninputs are generally a turtle agentset and a link agentset to perform the layout\non. See the dictionary entries for details. ",[160,2607,2609],{"className":2608},[171],[16,2610,2614],{"href":2611,"rel":2612,"className":2613,"dataDisplayText":2614,"target":180,"title":2614},"/dictionary#layout-spring",[176],[178],"layout-spring",[160,2616,2618],{"className":2617},[171],[16,2619,2623],{"href":2620,"rel":2621,"className":2622,"dataDisplayText":2623,"target":180,"title":2623},"/dictionary#layout-radial",[176],[178],"layout-radial","\nand ",[160,2626,2628],{"className":2627},[171],[16,2629,2633],{"href":2630,"rel":2631,"className":2632,"dataDisplayText":2633,"target":180,"title":2633},"/dictionary#layout-tutte",[176],[178],"layout-tutte",[22,2635,2636,2637,2646],{},"You may also need to rearrange the declaration of turtles-own variables, since\nlinks were once actually turtles. Any variables that apply to links should be\nmoved into a ",[160,2638,2640],{"className":2639},[171],[16,2641,2645],{"href":2642,"rel":2643,"className":2644,"dataDisplayText":2645,"target":180,"title":2645},"/dictionary#links-own",[176],[178],"links-own"," block.",[22,2648,2649,2650,134,2658,2667],{},"Since links are no longer turtles they no longer have the built-in turtle\nvariables (though some of the link variables are the same such as ",[160,2651,2653],{"className":2652},[171],[16,2654,1982],{"href":2655,"rel":2656,"className":2657,"dataDisplayText":1982,"target":180,"title":1982},"/dictionary#color",[176],[178],[160,2659,2661],{"className":2660},[171],[16,2662,2666],{"href":2663,"rel":2664,"className":2665,"dataDisplayText":2666,"target":180,"title":2666},"/dictionary#label",[176],[178],"label",". If you formerly used the location of link turtles you will now need\nto calculate the midpoint of the link. This is fairly simple in a non-wrapping\nworld.",[233,2669,2670],{},[160,2671,2672,264,2676,2680,1227,2682,264,2686,445,2690,260,2694,264,2697,2701,2706,2708,264,2713,2717,1227,2719,264,2722,445,2725,260,2729,264,2732,2735],{},[238,2673,2675],{"className":2674},[241,754],"to-report",[238,2677,2679],{"className":2678},[241,449],"link-xcor",[1225,2681],{},[238,2683,2685],{"className":2684},[241,1231],"report",[238,2687,2689],{"className":2688},[241,242],"mean",[238,2691,2693],{"className":2692},[241,242],"xcor",[238,2695,1843],{"className":2696},[241,242],[238,2698,2700],{"className":2699},[241,242],"both-ends",[238,2702,2704,1250],{"className":2703},[241,754],[1225,2705],{},[1225,2707],{},[238,2709,2711,2675],{"className":2710},[241,754],[1225,2712],{},[238,2714,2716],{"className":2715},[241,449],"link-ycor",[1225,2718],{},[238,2720,2685],{"className":2721},[241,1231],[238,2723,2689],{"className":2724},[241,242],[238,2726,2728],{"className":2727},[241,242],"ycor",[238,2730,1843],{"className":2731},[241,242],[238,2733,2700],{"className":2734},[241,242],[238,2736,2738,1250],{"className":2737},[241,754],[1225,2739],{},[22,2741,2742],{},"it is a little bit trickier in a wrapping world but still fairly\nstraightforward.",[233,2744,2745],{},[160,2746,2747,264,2750,2753,1227,2755,264,2758,264,2762,2766,1227,2768,264,2771,264,2775,2778,1227,2780,264,2783,2787,2789,2790,2792,2793,264,2797,2801,2803,2804,2806,2807,264,2811,2814,2806,2816,445,2820,264,2824,260,2827,264,2830,264,2833,264,2837,2841,2806,2843,264,2846,264,2849,2852,2806,2854,2857,2859,2860,2862,2863,1227,2865,264,2868,2871],{},[238,2748,2675],{"className":2749},[241,754],[238,2751,2679],{"className":2752},[241,449],[1225,2754],{},[238,2756,1911],{"className":2757},[241,1231],[238,2759,2761],{"className":2760},[241,449],"other-guy",[238,2763,2765],{"className":2764},[241,242],"end2",[1225,2767],{},[238,2769,1911],{"className":2770},[241,1231],[238,2772,2774],{"className":2773},[241,449],"x",[238,2776,717],{"className":2777},[241,253],[1225,2779],{},[238,2781,1874],{"className":2782},[241,1231],[238,2784,2786],{"className":2785},[241,242],"end1",[1225,2788],{},"  [",[1225,2791],{},"    ",[238,2794,2796],{"className":2795},[241,1231],"hatch",[238,2798,2800],{"className":2799},[241,253],"1",[1225,2802],{},"    [",[1225,2805],{},"      ",[238,2808,2810],{"className":2809},[241,1231],"face",[238,2812,2761],{"className":2813},[241,449],[1225,2815],{},[238,2817,2819],{"className":2818},[241,1231],"fd",[238,2821,2823],{"className":2822},[241,242],"distance",[238,2825,2761],{"className":2826},[241,449],[238,2828,1843],{"className":2829},[241,242],[238,2831,1968],{"className":2832},[241,242],[238,2834,2836],{"className":2835},[241,242],"/",[238,2838,2840],{"className":2839},[241,253],"2",[1225,2842],{},[238,2844,1840],{"className":2845},[241,1231],[238,2847,2774],{"className":2848},[241,449],[238,2850,2693],{"className":2851},[241,242],[1225,2853],{},[238,2855,2553],{"className":2856},[241,1231],[1225,2858],{},"    ]",[1225,2861],{},"  ]",[1225,2864],{},[238,2866,2685],{"className":2867},[241,1231],[238,2869,2774],{"className":2870},[241,449],[238,2872,2874,1250],{"className":2873},[241,754],[1225,2875],{},[22,2877,2878,2879,126],{},"and similarly for ",[160,2880,2728],{},[22,2882,2883,2884,163,2893,2902],{},"If you used either the size or heading of the link turtles you can use the\nreporters ",[160,2885,2887],{"className":2886},[171],[16,2888,2892],{"href":2889,"rel":2890,"className":2891,"dataDisplayText":2892,"target":180,"title":2892},"/dictionary#link-length",[176],[178],"link-length",[160,2894,2896],{"className":2895},[171],[16,2897,2901],{"href":2898,"rel":2899,"className":2900,"dataDisplayText":2901,"target":180,"title":2901},"/dictionary#link-heading",[176],[178],"link-heading"," instead.",[147,2904,2907],{"id":2905,"className":2906},"new-of-syntax",[14],[16,2908,2911],{"className":2909,"href":2910},[19],"#new-of-syntax","New “of” syntax",[22,2913,2914,2915,2918,2919,419,2922,2925,2926,2934],{},"We have replaced three different language constructs, ",[160,2916,2917],{},"-of"," (with hyphen),\n",[160,2920,2921],{},"value-from",[160,2923,2924],{},"values-from"," with a single ",[160,2927,2929],{"className":2928},[171],[16,2930,1843],{"href":2931,"rel":2932,"className":2933,"dataDisplayText":1843,"target":180,"title":1843},"/dictionary#of",[176],[178]," construct (no hyphen).",[39,2936,2938],{"className":2937},[800],[802,2939,2941],{"border":2940},"",[818,2942,2943,2952,2960,2968],{},[808,2944,2945,2946,2949],{},"\n  ",[811,2947,2948],{},"old\n  ",[811,2950,2951],{},"new\n",[808,2953,2945,2954,2957],{},[823,2955,2956],{},"`color-of turtle 0`\n  ",[823,2958,2959],{},"`[color] of turtle 0`\n",[808,2961,2945,2962,2965],{},[823,2963,2964],{},"`value-from turtle 0 [size * size]`\n  ",[823,2966,2967],{},"`[size * size] of turtle 0`\n",[808,2969,2945,2970,2973],{},[823,2971,2972],{},"`mean values-from turtles [size]`\n  ",[823,2974,2975],{},"`mean [size] of turtles`\n",[22,2977,2978,2979,2981],{},"When ",[160,2980,1843],{}," is used with a single agent, it reports a single value. When used with\nan agentset, it reports a list of values (in random order, since agentsets are\nalways in random order).",[22,2983,2984,2985,415,2987,2435,2989,2991],{},"Note that when opening old models in the new version, ",[160,2986,2917],{},[160,2988,2921],{},[160,2990,2924],{}," will automatically be converted to use “of” instead, but some\nnested uses of these constructs are too complex for the converter and must be\nconverted by hand.",[147,2993,2996],{"id":2994,"className":2995},"serial-ask",[14],[16,2997,3000,3001],{"className":2998,"href":2999},[19],"#serial-ask","Serial ",[160,3002,1874],{},[22,3004,339,3005,3013,3014,3016],{},[160,3006,3008],{"className":3007},[171],[16,3009,1874],{"href":3010,"rel":3011,"className":3012,"dataDisplayText":1874,"target":180,"title":1874},"/dictionary#ask",[176],[178]," command is now serial rather than concurrent. In other words, the\nasked agents will run one at a time. Not until one agent completely finishes the\nentire body of the ",[160,3015,1874],{}," does the next agent start.",[22,3018,3019,3020,3027],{},"Note that even the old ",[160,3021,3023],{"className":3022},[171],[16,3024,1874],{"href":3010,"rel":3025,"className":3026,"dataDisplayText":1874,"target":180,"title":1874},[176],[178]," was never truly concurrent; we simulated\nconcurrent execution by interleaving execution among the agents using a\nturn-taking mechanism described in the NetLogo FAQ.",[22,3029,3030,3031,3040],{},"We have made this change because in our experience, users often wrote models\nthat behaved in unexpected ways due to the simulated concurrency, but rarely\nwrote models that benefited from the simulated concurrency. Models exhibiting\nunexpected behavior could usually be fixed by adding the\n",[160,3032,3034],{"className":3033},[171],[16,3035,3039],{"href":3036,"rel":3037,"className":3038,"dataDisplayText":3039,"target":180,"title":3039},"/dictionary#without-interruption",[176],[178],"without-interruption"," command in the right places, but it was difficult for\nusers to know whether that command was needed and if so, where.",[22,3042,3043,3044,3051,3052,3061,3062,3064],{},"In NetLogo 4.0, ",[160,3045,3047],{"className":3046},[171],[16,3048,3039],{"href":3036,"rel":3049,"className":3050,"dataDisplayText":3039,"target":180,"title":3039},[176],[178]," is no longer necessary unless your\nmodel uses ",[160,3053,3055],{"className":3054},[171],[16,3056,3060],{"href":3057,"rel":3058,"className":3059,"dataDisplayText":3060,"target":180,"title":3060},"/dictionary#ask-concurrent",[176],[178],"ask-concurrent"," (or a turtle or patch forever button containing\ncode that depends on simulated concurrency). In most models, all uses of\n",[160,3063,3039],{}," can be removed.",[22,3066,3067],{},"The simulated concurrency formerly employed by “ask” is still accessible in\nthree ways:",[54,3069,3070,3089,3094],{},[57,3071,3072,3073,3080,3081,3088],{},"You may use the ",[160,3074,3076],{"className":3075},[171],[16,3077,3060],{"href":3057,"rel":3078,"className":3079,"dataDisplayText":3060,"target":180,"title":3060},[176],[178]," primitive instead of ",[160,3082,3084],{"className":3083},[171],[16,3085,1874],{"href":3010,"rel":3086,"className":3087,"dataDisplayText":1874,"target":180,"title":1874},[176],[178]," to get the old\nsimulated concurrency. (We don’t recommend this, though.)",[57,3090,3091,3092,126],{},"Commands issued in the Command Center directly to turtles, patches, or links\nhave an implied ",[160,3093,3060],{},[57,3095,3096,3097,3099],{},"Turtle, patch, and link forever buttons have an implied ",[160,3098,3060],{}," as\nwell.",[22,3101,3102,3103,3105],{},"Note that ",[160,3104,1874],{}," itself is always serial regardless of the context in which it is\nused, however.",[22,3107,3108],{},"In our own Models Library, models that make use of this concurrency are rare. A\nprominent example, though, is Termites, which uses a concurrent turtle forever\nbutton.",[147,3110,3113],{"id":3111,"className":3112},"tick-counter-1",[14],[16,3114,1498],{"className":3115,"href":3116},[19],"#tick-counter-1",[22,3118,3119],{},"NetLogo now has a built-in tick counter for representing the passage of\nsimulated time.",[22,3121,3122,3123,3131,3132,3140,3141,3148,3149,126],{},"You advance the counter by one using the ",[160,3124,3126],{"className":3125},[171],[16,3127,1272],{"href":3128,"rel":3129,"className":3130,"dataDisplayText":1272,"target":180,"title":1272},"/dictionary#tick",[176],[178]," command. If you need to read\nits value, there’s a reporter called ",[160,3133,3135],{"className":3134},[171],[16,3136,1519],{"href":3137,"rel":3138,"className":3139,"dataDisplayText":1519,"target":180,"title":1519},"/dictionary#ticks",[176],[178],". The ",[160,3142,3144],{"className":3143},[171],[16,3145,1232],{"href":2168,"rel":3146,"className":3147,"dataDisplayText":1232,"target":180,"title":1232},[176],[178]," command resets\nthe tick counter; so does ",[160,3150,3152],{"className":3151},[171],[16,3153,1416],{"href":3154,"rel":3155,"className":3156,"dataDisplayText":1416,"target":180,"title":1416},"/dictionary#reset-ticks",[176],[178],[22,3158,3159,3160,3168,3169,3171],{},"In most models the tick counter will be integer-valued, but if you want to use\nsmaller increments of time, you can use the ",[160,3161,3163],{"className":3162},[171],[16,3164,1525],{"href":3165,"rel":3166,"className":3167,"dataDisplayText":1525,"target":180,"title":1525},"/dictionary#tick-advance",[176],[178]," command to advance\nthe tick counter by any positive amount, including fractional amounts. Some\nModels Library models that use ",[160,3170,1525],{}," are Vector Fields and the GasLab\nmodels.",[22,3173,3174],{},"The value of the tick counter is displayed in the toolbar at the top of the\nInterface tab. (You can use the Settings… button in the toolbar to hide the\ntick counter, or change the word “ticks” to something else.)",[147,3176,3179],{"id":3177,"className":3178},"view-update-modes",[14],[16,3180,3183],{"className":3181,"href":3182},[19],"#view-update-modes","View update modes",[22,3185,3186,3187,163,3196,3205],{},"In the past, NetLogo always tried to update the view about 20 times a second.\nWe’re now calling that “continuous” view updates. The biggest problem with it\nwas that you usually want updates to happen between model ticks, not in the\nmiddle of a tick, so we had a checkbox on buttons that (by default) forced a\ndisplay update after every button iteration. That made sure updates happened\nbetween ticks, but it didn’t get rid of the intermediate updates. You had to use\n",[160,3188,3190],{"className":3189},[171],[16,3191,3195],{"href":3192,"rel":3193,"className":3194,"dataDisplayText":3195,"target":180,"title":3195},"/dictionary#no-display",[176],[178],"no-display",[160,3197,3199],{"className":3198},[171],[16,3200,3204],{"href":3201,"rel":3202,"className":3203,"dataDisplayText":3204,"target":180,"title":3204},"/dictionary#display",[176],[178],"display"," to lock them out.",[22,3207,3208,3209,3216],{},"We still support continuous updates. They are the default when you start up\nNetLogo. But most Models Library models now use tick-based updates. With\ntick-based updates, updates happen only when the tick counter advances. (The\n",[160,3210,3212],{"className":3211},[171],[16,3213,3204],{"href":3201,"rel":3214,"className":3215,"dataDisplayText":3204,"target":180,"title":3204},[176],[178]," command can be used to force additional updates; see below.)",[22,3218,3219],{},"The advantages of tick-based updates as we see them are as follows:",[3221,3222,3223,3226,3229,3232,3235],"ol",{},[57,3224,3225],{},"Consistent, predictable view update behavior which does not vary from\ncomputer to computer or from run to run.",[57,3227,3228],{},"Intermediate updates can confuse the user of your model by letting them see\nthings they aren’t supposed to see, which may be misleading.",[57,3230,3231],{},"Increased speed. Updating the view takes time, so if one update per tick is\nenough, then enforcing than there is only one update per tick will make your\nmodel faster.",[57,3233,3234],{},"Instead of having a “force view update” checkbox in every button like in\nNetLogo 3.1, we only need one choice which applies to the entire model.",[57,3236,3237,3238,3240],{},"Using the speed slider to slow down a model now just inserts pauses between\nticks. So with tick-based updates, ",[160,3239,1223],{}," buttons are no longer affected by\nthe speed slider. This was a real annoyance with the old speed slider. (The\nannoyance persists for models that use continuous updates, though.)",[22,3242,3243],{},"As mentioned above, most models in our Models Library now use tick-based\nupdates.",[22,3245,3246],{},"Even for models that would normally be set to tick-based updates, it may be\nuseful to switch to continuous updates temporarily for debugging purposes.\nSeeing what’s going on within a tick, instead of only seeing the end result of a\ntick, could help with troubleshooting.",[22,3248,3249,3250,3257],{},"If you switch your model to use tick-based updates, you’ll also need to add the\n",[160,3251,3253],{"className":3252},[171],[16,3254,1272],{"href":3128,"rel":3255,"className":3256,"dataDisplayText":1272,"target":180,"title":1272},[176],[178]," command to your code, otherwise the view won’t update. (Note that the\nview still always updates when a button pops up or a command entered in the\ncommand center finishes, though. So it’s not like the view will just stay frozen\nindefinitely.)",[44,3259,3262],{"id":3260,"className":3261},"how-to-make-a-model-use-ticks-and-tick-based-updates",[14],[16,3263,3266],{"className":3264,"href":3265},[19],"#how-to-make-a-model-use-ticks-and-tick-based-updates","How to make a model use ticks and tick-based updates",[22,3268,3269],{},"Here are the steps to follow to convert your model to use ticks and tick-based\nupdates in NetLogo 4.0:",[3221,3271,3272,3275],{},[57,3273,3274],{},"In the Interface tab toolbar, on the right hand side where it says “update\nview:”, change the setting from “continuously” to “on ticks”.",[57,3276,3277,3278,3285,3286,3288,3289,3301,3302,3304],{},"Add the ",[160,3279,3281],{"className":3280},[171],[16,3282,1272],{"href":3128,"rel":3283,"className":3284,"dataDisplayText":1272,"target":180,"title":1272},[176],[178]," command to your go procedure, at or near the end. In Models\nLibrary models we always put ",[160,3287,1272],{}," after the agents move but before any\nplotting commands. That’s because the plotting commands might contain\nsomething like ",[160,3290,3291,264,3295,264,3298],{},[238,3292,3294],{"className":3293},[241,1231],"plotxy",[238,3296,1519],{"className":3297},[241,242],[238,3299,1238],{"className":3300},[241,449]," and we want the new value of the tick\ncounter used, not the old one. Most models don’t refer to the tick counter in\ntheir plotting commands, but nonetheless, for consistency and to avoid\nmistakes we suggest always putting ",[160,3303,1272],{}," before the plotting commands.",[22,3306,3307],{},"Some models will require some additional changes:",[3221,3309,3310,3340,3358,3376],{},[57,3311,3312,3313,3320,3321,3328,3329,3336,3337,3339],{},"If your model already has a global “ticks” or “clock” or “time” variable, get\nrid of it. Use the ",[160,3314,3316],{"className":3315},[171],[16,3317,1272],{"href":3128,"rel":3318,"className":3319,"dataDisplayText":1272,"target":180,"title":1272},[176],[178]," command and ",[160,3322,3324],{"className":3323},[171],[16,3325,1519],{"href":3137,"rel":3326,"className":3327,"dataDisplayText":1519,"target":180,"title":1519},[176],[178]," reporter instead. (If your\nmodel uses fractional increments of time, use ",[160,3330,3332],{"className":3331},[171],[16,3333,1525],{"href":3165,"rel":3334,"className":3335,"dataDisplayText":1525,"target":180,"title":1525},[176],[178]," instead of\n",[160,3338,1272],{},".) If you had a monitor for that variable, you can get rid of it;\nthere’s now a tick counter in the toolbar.",[57,3341,3342,3346,3347,3349,3350,3357],{},[238,3343,3344],{},[238,3345,1232],{}," resets the tick counter to zero. If you don’t use ",[160,3348,1232],{},"\nin your setup procedure, then you may need to add ",[160,3351,3353],{"className":3352},[171],[16,3354,1416],{"href":3154,"rel":3355,"className":3356,"dataDisplayText":1416,"target":180,"title":1416},[176],[178]," to reset\nthe counter to zero.",[57,3359,3360,3361,163,3368,3375],{},"If you used ",[160,3362,3364],{"className":3363},[171],[16,3365,3195],{"href":3192,"rel":3366,"className":3367,"dataDisplayText":3195,"target":180,"title":3195},[176],[178],[160,3369,3371],{"className":3370},[171],[16,3372,3204],{"href":3201,"rel":3373,"className":3374,"dataDisplayText":3204,"target":180,"title":3204},[176],[178]," to prevent view updates from\nhappening in the middle of go, you can get rid of them.",[57,3377,3378,3379,3386],{},"If your model needs to update the view without advancing the tick counter\n(examples: Party, Dice Stalagmite, network models with animated layout,\nmodels with mouse interaction buttons), use the ",[160,3380,3382],{"className":3381},[171],[16,3383,3204],{"href":3201,"rel":3384,"className":3385,"dataDisplayText":3204,"target":180,"title":3204},[176],[178]," command to force\nadditional view updates so the user can see what is going on.",[147,3388,3391],{"id":3389,"className":3390},"speed-slider",[14],[16,3392,3395],{"className":3393,"href":3394},[19],"#speed-slider","Speed slider",[22,3397,3398],{},"Previous versions of NetLogo had a speed slider that could be used to make\nmodels run slower, so you can see what’s going on.",[22,3400,3401],{},"In NetLogo 4.0, the slider can be used to speed up models as well. It does this\nby updating the view less frequently. Updating the view takes time, so the fewer\nupdates, the faster the model runs.",[22,3403,3404],{},"The default position of the slider is in the center. When you’re at the center,\nthe slider says “normal speed”.",[22,3406,3407],{},"As you move the slider away from the center position, the model will gradually\nrun faster or slower.",[22,3409,3410],{},"At very high speeds, view updates become very infrequent and may be separated by\nseveral seconds. It may feel like the model is actually running slower, since\nthe updates are so infrequent. But watch the tick counter, or other indicators\nsuch as plots, and you’ll see that yes, the model really is running faster. If\nthe infrequent updates are disconcerting, don’t push the slider so far over.",[22,3412,3413],{},"When using tick-based updates, slowing the model down does not cause additional\nview updates. Rather, NetLogo simply pauses after each tick.",[22,3415,3416,3417,3419,3420,3422],{},"When using continuous updates, slowing the model down means view updates become\nmore closely spaced. If you push the speed slider more than halfway to the left,\nthe model will be running so slowly that you can watch turtles moving one at a\ntime! This is new in NetLogo 4.0; in previous NetLogo versions, no matter how\nslowly you ran a model, you would never see the agents in an ",[160,3418,1874],{}," moving one at\na time; all the agents in an ",[160,3421,1874],{}," always appeared to move together.",[147,3424,3427],{"id":3425,"className":3426},"numbers",[14],[16,3428,3431],{"className":3429,"href":3430},[19],"#numbers","Numbers",[22,3433,3434],{},"NetLogo no longer maintains an internal distinction between integers and\nfloating point numbers. So for example:",[22,3436,3437],{},"Old:",[233,3439,3440],{},[160,3441,3442,264,3446,264,3449,3452,3454,3457,3459,264,3462,264,3465,3469,3471,3474,3476,264,3479,264,3482,264,3485,264,3488,3491,3493,3496,3498,264,3501,264,3504,264,3508,264,3511,3514,3516,3519,3521,264,3524,264,3527,264,3530,264,3534,3537,3539],{},[238,3443,3445],{"className":3444},[241,449],"observer>",[238,3447,2346],{"className":3448},[241,1231],[238,3450,259],{"className":3451},[241,253],[1225,3453],{},[238,3455,259],{"className":3456},[241,253],[1225,3458],{},[238,3460,3445],{"className":3461},[241,449],[238,3463,2346],{"className":3464},[241,1231],[238,3466,3468],{"className":3467},[241,253],"3.0",[1225,3470],{},[238,3472,3468],{"className":3473},[241,253],[1225,3475],{},[238,3477,3445],{"className":3478},[241,449],[238,3480,2346],{"className":3481},[241,1231],[238,3483,2800],{"className":3484},[241,253],[238,3486,214],{"className":3487},[241,242],[238,3489,2840],{"className":3490},[241,253],[1225,3492],{},[238,3494,259],{"className":3495},[241,253],[1225,3497],{},[238,3499,3445],{"className":3500},[241,449],[238,3502,2346],{"className":3503},[241,1231],[238,3505,3507],{"className":3506},[241,253],"1.5",[238,3509,214],{"className":3510},[241,242],[238,3512,3507],{"className":3513},[241,253],[1225,3515],{},[238,3517,3468],{"className":3518},[241,253],[1225,3520],{},[238,3522,3445],{"className":3523},[241,449],[238,3525,2346],{"className":3526},[241,1231],[238,3528,259],{"className":3529},[241,253],[238,3531,3533],{"className":3532},[241,242],"=",[238,3535,3468],{"className":3536},[241,253],[1225,3538],{},[238,3540,248],{"className":3541},[241,247],[22,3543,3544],{},"(The last line shows that although the distinction between integer 3 and\nfloating point 3.0 was maintained, the two numbers were still considered equal.)",[22,3546,3547],{},"New:",[233,3549,3550],{},[160,3551,3552,264,3555,264,3558,3561,3563,3566,3568,264,3571,264,3574,3577,3579,3582,3584,264,3587,264,3590,264,3593,264,3596,3599,3601,3604,3606,264,3609,264,3612,264,3615,264,3618,3621,3623,3626,3628,264,3631,264,3634,264,3637,264,3640,3643,3645],{},[238,3553,3445],{"className":3554},[241,449],[238,3556,2346],{"className":3557},[241,1231],[238,3559,259],{"className":3560},[241,253],[1225,3562],{},[238,3564,259],{"className":3565},[241,253],[1225,3567],{},[238,3569,3445],{"className":3570},[241,449],[238,3572,2346],{"className":3573},[241,1231],[238,3575,3468],{"className":3576},[241,253],[1225,3578],{},[238,3580,259],{"className":3581},[241,253],[1225,3583],{},[238,3585,3445],{"className":3586},[241,449],[238,3588,2346],{"className":3589},[241,1231],[238,3591,2800],{"className":3592},[241,253],[238,3594,214],{"className":3595},[241,242],[238,3597,2840],{"className":3598},[241,253],[1225,3600],{},[238,3602,259],{"className":3603},[241,253],[1225,3605],{},[238,3607,3445],{"className":3608},[241,449],[238,3610,2346],{"className":3611},[241,1231],[238,3613,3507],{"className":3614},[241,253],[238,3616,214],{"className":3617},[241,242],[238,3619,3507],{"className":3620},[241,253],[1225,3622],{},[238,3624,259],{"className":3625},[241,253],[1225,3627],{},[238,3629,3445],{"className":3630},[241,449],[238,3632,2346],{"className":3633},[241,1231],[238,3635,259],{"className":3636},[241,253],[238,3638,3533],{"className":3639},[241,242],[238,3641,3468],{"className":3642},[241,253],[1225,3644],{},[238,3646,248],{"className":3647},[241,247],[22,3649,3650],{},"We expect that only rare models will be negatively impacted by this change.",[22,3652,3653],{},"A benefit of this change is that NetLogo now supports a much larger range of\nintegers. The old range was -2,147,483,648 to 2,147,483,647 (around +/- 2\nbillion); the new range is +/-9,007,199,254,740,992 (around +/- 9 quadrillion).",[147,3655,3658],{"id":3656,"className":3657},"agentset-building",[14],[16,3659,3662],{"className":3660,"href":3661},[19],"#agentset-building","Agentset building",[22,3664,3665,3666,163,3669,3672,3673,163,3682,3691,3692,3701,3702,134,3704,3706],{},"NetLogo 3.1 (and some earlier versions) included primitives called\n",[160,3667,3668],{},"turtles-from",[160,3670,3671],{},"patches-from"," that were occasionally useful for building\nagentsets. In NetLogo 4.0, these primitives have been replaced with new\nprimitives called ",[160,3674,3676],{"className":3675},[171],[16,3677,3681],{"href":3678,"rel":3679,"className":3680,"dataDisplayText":3681,"target":180,"title":3681},"/dictionary#turtle-set",[176],[178],"turtle-set",[160,3683,3685],{"className":3684},[171],[16,3686,3690],{"href":3687,"rel":3688,"className":3689,"dataDisplayText":3690,"target":180,"title":3690},"/dictionary#patch-set",[176],[178],"patch-set"," that are much more flexible\nand powerful. (",[160,3693,3695],{"className":3694},[171],[16,3696,3700],{"href":3697,"rel":3698,"className":3699,"dataDisplayText":3700,"target":180,"title":3700},"/dictionary#link-set",[176],[178],"link-set"," exists as well.) See the entries for these\nprimitives in the NetLogo Dictionary. Models that use the old ",[160,3703,3668],{},[160,3705,3671],{}," will need to be altered by hand to use the new primitives.",[147,3708,3711],{"id":3709,"className":3710},"rgb-colors",[14],[16,3712,3715],{"className":3713,"href":3714},[19],"#rgb-colors","RGB Colors",[22,3717,3718,3719,163,3722,3724,3725,2624,3734,3742],{},"In NetLogo 3.1 RGB and HSB colors could be approximated as NetLogo colors using\nthe ",[160,3720,3721],{},"rgb",[160,3723,1141],{}," primitives. These have been renamed to ",[160,3726,3728],{"className":3727},[171],[16,3729,3733],{"href":3730,"rel":3731,"className":3732,"dataDisplayText":3733,"target":180,"title":3733},"/dictionary#approximate-rgb",[176],[178],"approximate-rgb",[160,3735,3737],{"className":3736},[171],[16,3738,1147],{"href":3739,"rel":3740,"className":3741,"dataDisplayText":1147,"target":180,"title":1147},"/dictionary#approximate-hsb",[176],[178]," and now expect inputs in the range 0-255, not 0-1.",[22,3744,3745,3746,3750],{},"The full RGB spectrum is now available in NetLogo so it may no longer be\nnecessary to use these primitives at all. You can set any color variable to a\nthree-item RGB list, with values in the 0-255 range, and get that exact color.\nSee the ",[16,3747,3749],{"href":3748},"/programming#colors","Color"," section of the Programming Guide for\ndetails.",[147,3752,3755],{"id":3753,"className":3754},"tie",[14],[16,3756,3759],{"className":3757,"href":3758},[19],"#tie","Tie",[22,3761,3762,3763,3766,3767,3776,3777,1520,3780,3783,3784,3787,3788,3796],{},"In previous versions ",[160,3764,3765],{},"__tie"," was provided as an experimental feature. As of\nNetLogo 4.0 links have a ",[160,3768,3770],{"className":3769},[171],[16,3771,3775],{"href":3772,"rel":3773,"className":3774,"dataDisplayText":3775,"target":180,"title":3775},"/dictionary#tie-mode",[176],[178],"tie-mode"," variable which can be set to ",[160,3778,3779],{},"\"none\"",[160,3781,3782],{},"\"free\"",", or ",[160,3785,3786],{},"\"fixed\"",". In 4.0 ",[160,3789,3791],{"className":3790},[171],[16,3792,3753],{"href":3793,"rel":3794,"className":3795,"dataDisplayText":3753,"target":180,"title":3753},"/dictionary#tie",[176],[178]," is now a link-only primitive. This means\nthat to tie turtle 1 to turtle 0 you write:",[233,3798,3799],{},[160,3800,3801,264,3804,264,3807,576,3810,264,3814,264,3817,576,3820,2602],{},[238,3802,1874],{"className":3803},[241,1231],[238,3805,713],{"className":3806},[241,242],[238,3808,717],{"className":3809},[241,253],[238,3811,3813],{"className":3812},[241,1231],"create-link-to",[238,3815,713],{"className":3816},[241,242],[238,3818,2800],{"className":3819},[241,253],[238,3821,3753],{"className":3822},[241,1231],[22,3824,3825,3826,3829],{},"See the ",[16,3827,3759],{"href":3828},"/programming#tie"," section of the programming guide for\ndetails.",[112,3831,3834],{"id":3832,"className":3833},"changes-for-netlogo-31",[14],[16,3835,110],{"className":3836,"href":109},[19],[147,3838,3841],{"id":3839,"className":3840},"agentsets",[14],[16,3842,3845],{"className":3843,"href":3844},[19],"#agentsets","Agentsets",[22,3847,3848,3849,215,3858,3867,3868,3871],{},"If your model is behaving strangely or incorrectly, it may be because since\nNetLogo 3.1, agentsets are now always in random order. In prior versions of\nNetLogo, agentsets were always in a fixed order. If your code depended on that\nfixed order, then it won’t work anymore. How to fix your model to work with\nrandomized agentsets depends on the details of what your code is doing. In some\nsituations, it is helpful to use the ",[160,3850,3852],{"className":3851},[171],[16,3853,3857],{"href":3854,"rel":3855,"className":3856,"dataDisplayText":3857,"target":180,"title":3857},"/dictionary#sort",[176],[178],"sort",[160,3859,3861],{"className":3860},[171],[16,3862,3866],{"href":3863,"rel":3864,"className":3865,"dataDisplayText":3866,"target":180,"title":3866},"/dictionary#sort-by",[176],[178],"sort-by"," primitives to\nconvert an agentset (random order) into a list of agents (fixed order). See\n“Lists of agents” in the ",[16,3869,3870],{"href":1698},"Lists"," section of the\nProgramming Guide.",[147,3873,3876],{"id":3874,"className":3875},"wrapping",[14],[16,3877,3880],{"className":3878,"href":3879},[19],"#wrapping","Wrapping",[22,3882,3883,3884,3888],{},"If you are seeing pieces of turtle shapes wrapping around the view edges, it’s\nbecause NetLogo 3.0 allowed you to turn off such wrapping in the view without\naffecting the behavior of the model. Since NetLogo 3.1, if you don’t want the\nview to wrap you must make it so the world doesn’t wrap, using the new topology\nfeature. Making this change may require other changes to your model, though. See\nthe ",[16,3885,3887],{"href":3886},"/programming#topology","Topology"," section of the Programming Guide for a\nthorough discussion of how to convert your model to take advantage of this new\nfeature.",[147,3890,3893],{"id":3891,"className":3892},"random-turtle-coordinates",[14],[16,3894,3897],{"className":3895,"href":3896},[19],"#random-turtle-coordinates","Random turtle coordinates",[22,3899,3900,3901,3921,3922,215,3924,3927],{},"Many models made in NetLogo 3.0 or earlier use\n",[160,3902,3903,264,3907,264,3910,264,3914,264,3917],{},[238,3904,3906],{"className":3905},[241,1231],"setxy",[238,3908,2267],{"className":3909},[241,242],[238,3911,3913],{"className":3912},[241,242],"world-width",[238,3915,2267],{"className":3916},[241,242],[238,3918,3920],{"className":3919},[241,242],"world-height"," to scatter turtles randomly,\nusing either ",[160,3923,2267],{},[160,3925,3926],{},"random-float",". It only works if world wrapping is on.",[22,3929,3930,3931,3933],{},"(Why? Because when wrapping is on, you can set coordinates of turtles to numbers\nbeyond the edge of the world and NetLogo will wrap the turtle to the other side.\nBut in worlds that don’t wrap setting the x or y coordinates of a turtle to a\npoint outside the bounds of the world causes a runtime error. The world wrap\nsettings were added in NetLogo 3.1. See the\n",[16,3932,3887],{"href":3886}," section of the Programming Guide for more\ninformation.)",[22,3935,3936],{},"To fix your model so that it works regardless of the wrapping settings, use one\nof these two commands instead:",[233,3938,3939],{},[160,3940,3941,264,3944,264,3948,3952,3954,264,3957,264,3961],{},[238,3942,3906],{"className":3943},[241,1231],[238,3945,3947],{"className":3946},[241,242],"random-xcor",[238,3949,3951],{"className":3950},[241,242],"random-ycor",[1225,3953],{},[238,3955,3906],{"className":3956},[241,1231],[238,3958,3960],{"className":3959},[241,242],"random-pxcor",[238,3962,3964],{"className":3963},[241,242],"random-pycor",[22,3966,3967],{},"The two commands are a bit different. The first command puts the turtle on a\nrandom point in the world. The second command puts the turtle on the center of a\nrandom patch. An even more concise way to put a turtle on the center of a random\npatch is:",[233,3969,3970],{},[160,3971,3972,264,3976,264,3980],{},[238,3973,3975],{"className":3974},[241,1231],"move-to",[238,3977,3979],{"className":3978},[241,242],"one-of",[238,3981,3983],{"className":3982},[241,242],"patches",{"title":2940,"searchDepth":3985,"depth":3986,"links":3987},5,3,[3988,3990,3992,3997,4001,4016,4020,4038,4042,4062],{"id":46,"depth":3989,"text":52},4,{"id":114,"depth":3991,"text":62},2,{"id":141,"depth":3991,"text":68,"children":3993},[3994,3995],{"id":149,"depth":3986,"text":155},{"id":197,"depth":3986,"text":3996},"ifelse-value Precedence Change with Infix Operators",{"id":323,"depth":3991,"text":74,"children":3998},[3999,4000],{"id":330,"depth":3986,"text":336},{"id":349,"depth":3986,"text":355},{"id":386,"depth":3991,"text":80,"children":4002},[4003,4004,4005,4006,4007,4008,4009,4010,4011,4013,4014],{"id":393,"depth":3986,"text":399},{"id":522,"depth":3986,"text":528},{"id":661,"depth":3986,"text":667},{"id":682,"depth":3986,"text":688},{"id":694,"depth":3986,"text":700},{"id":739,"depth":3986,"text":745},{"id":763,"depth":3986,"text":769},{"id":933,"depth":3986,"text":939},{"id":1008,"depth":3986,"text":4012},"Removal of hubnet-set-client-interface",{"id":1028,"depth":3986,"text":1034},{"id":1093,"depth":3986,"text":4015},"Add range primitive",{"id":1122,"depth":3991,"text":86,"children":4017},[4018,4019],{"id":1129,"depth":3986,"text":1135},{"id":1162,"depth":3986,"text":1168},{"id":1189,"depth":3991,"text":92,"children":4021},[4022,4023,4029,4030,4031,4032,4033],{"id":1196,"depth":3986,"text":1202},{"id":1492,"depth":3986,"text":1498,"children":4024},[4025,4026,4028],{"id":1416,"depth":3989,"text":1416},{"id":1534,"depth":3989,"text":4027},"reset-ticks and plotting",{"id":1559,"depth":3989,"text":1559},{"id":1599,"depth":3986,"text":1605},{"id":1623,"depth":3986,"text":1629},{"id":1641,"depth":3986,"text":1647},{"id":1666,"depth":3986,"text":1672},{"id":1729,"depth":3986,"text":1735,"children":4034},[4035,4036,4037],{"id":1744,"depth":3989,"text":1750},{"id":1764,"depth":3989,"text":1770},{"id":1812,"depth":3989,"text":1818},{"id":1824,"depth":3991,"text":98,"children":4039},[4040],{"id":1831,"depth":3986,"text":4041},"Combining set and of",{"id":2136,"depth":3991,"text":104,"children":4043},[4044,4045,4046,4047,4049,4050,4051,4053,4054,4057,4058,4059,4060,4061],{"id":2143,"depth":3986,"text":2149},{"id":2184,"depth":3986,"text":2190},{"id":2293,"depth":3986,"text":2299},{"id":2404,"depth":3986,"text":4048},"The -at primitives",{"id":2481,"depth":3986,"text":2487},{"id":2905,"depth":3986,"text":2911},{"id":2994,"depth":3986,"text":4052},"Serial ask",{"id":3111,"depth":3986,"text":1498},{"id":3177,"depth":3986,"text":3183,"children":4055},[4056],{"id":3260,"depth":3989,"text":3266},{"id":3389,"depth":3986,"text":3395},{"id":3425,"depth":3986,"text":3431},{"id":3656,"depth":3986,"text":3662},{"id":3709,"depth":3986,"text":3715},{"id":3753,"depth":3986,"text":3759},{"id":3832,"depth":3991,"text":110,"children":4063},[4064,4065,4066],{"id":3839,"depth":3986,"text":3845},{"id":3874,"depth":3986,"text":3880},{"id":3891,"depth":3986,"text":3897},"Guide to transitioning between different versions of NetLogo, including migration tips and information about breaking changes.","md",{"source":4070,"metadataOutputPath":4071,"projectConfig":4072,"language":4074,"output":4083,"inheritFrom":4084,"version":4079,"keywords":4085,"tags":4090,"icon":4091,"assetsRoot":4092},"autogen/transition.md","content/transition.metadata.yaml",{"defaults":4073,"projectRoot":126,"outputRoot":4080,"scanRoot":4081,"engine":4082,"version":4079,"dedupeIdenticalDiskWrites":4083},{"language":4074,"output":4075,"inheritFrom":4076,"extension":4068,"title":4078,"version":4079},"en",false,[4077],0,"NetLogo User Manual","7.0.1","content","autogen","handlebars",true,[4077],[4086,4087,4088,4089],"Transition","Migration","Version Changes","NetLogo",[4086,4087,4088],"i-lucide-circle-fading-arrow-up","/Volumes/CCL/netlogo/Helio/apps/docs-nuxt/autogen","/transition",{"title":5,"description":4067},"transition","17gUvKa59q6JxioF5uRTjycP9l0sWXOJ3f7j12BLWn0",[4098,4103],{"title":4099,"path":4100,"stem":4101,"description":4102,"children":-1},"Time Extension Dictionary: dictionary","/time/dictionary","time/dictionary","Documentation for the dictionary primitive.",{"title":4104,"path":4105,"stem":4106,"description":4107,"children":-1},"Tutorial #1: Models","/tutorial1","tutorial1","First tutorial in the NetLogo learning series, introducing basic concepts of exploring and running NetLogo models.",1761668935442]